this.Module={};var args=arguments=[];
Runtime={stackAlloc:function(g){var f=STACKTOP;assert(g>0);for(var c=0;c<g;c++)HEAP[STACKTOP+c]=0;STACKTOP+=g;STACKTOP=Math.ceil(STACKTOP/4)*4;assert(STACKTOP<STACK_ROOT+STACK_MAX);return f},staticAlloc:function(g){var f=STATICTOP;assert(g>0);STATICTOP+=g;STATICTOP=Math.ceil(STATICTOP/4)*4;return f},alignMemory:function(g,f){return Math.ceil(g/(f?f:4))*(f?f:4)},getFunctionIndex:function(g,f){var c=FUNCTION_TABLE.length;FUNCTION_TABLE[c]=g;FUNCTION_TABLE[c+1]=null;Module[f]=g;return c},isNumberType:function(g){return g in
Runtime.INT_TYPES||g in Runtime.FLOAT_TYPES},isPointerType:function(g){return pointingLevels(g)>0},isStructType:function(g){if(isPointerType(g))return false;if(RegExp(/^\[\d+\ x\ (.*)\]/g).test(g))return true;return!Runtime.isNumberType(g)&&g[0]=="%"},INT_TYPES:{i1:0,i8:0,i16:0,i32:0,i64:0},FLOAT_TYPES:{"float":0,"double":0},getNativeFieldSize:function(g,f){var c={i1:1,i8:1,i16:2,i32:4,i64:8,"float":4,"double":8}[g];c||(c=4);f||(c=Math.max(c,4));return c},dedup:function(g,f){var c={};return f?g.filter(function(b){if(c[b[f]])return false;
return c[b[f]]=true}):g.filter(function(b){if(c[b])return false;return c[b]=true})},set:function(){if(typeof arguments[0]==="object")arguments=arguments[0];for(var g={},f=0;f<arguments.length;f++)g[arguments[f]]=0;return g},calculateStructAlignment:function(g,f){g.flatSize=0;var c=[],b=-1,a=-1;g.flatIndexes=g.fields.map(function(d){var e;if(Runtime.isNumberType(d)||Runtime.isPointerType(d)){e=Runtime.getNativeFieldSize(d,true);a=Math.max(a,e)}else if(Runtime.isStructType(d)){e=f[d].flatSize;a=Math.max(a,
4)}else{dprint("Unclear type in struct: "+d+", in "+g.name_);assert(0)}d=Runtime.alignMemory(g.flatSize,Math.min(4,e));g.flatSize=d+e;b>=0&&c.push(d-b);return b=d});g.flatSize=Runtime.alignMemory(g.flatSize,a);if(c.length==0)g.flatFactor=g.flatSize;else if(Runtime.dedup(c).length==1)g.flatFactor=c[0];g.needsFlattening=g.flatFactor!=1;return g.flatIndexes},__dummy__:0};function __globalConstructor__(){}var FUNCTION_TABLE=[],__THREW__=false,__ATEXIT__=[],ABORT=false,undef=0;
function abort(g){print(g+":\n"+Error().stack);ABORT=true;throw"Assertion: "+g;}function assert(g,f){g||abort("Assertion failed: "+f)}var ALLOC_NORMAL=0,ALLOC_STACK=1,ALLOC_STATIC=2;
function Pointer_make(g,f,c){f=f?f:0;assert(f===0);if(g===HEAP)return f;f=g.length;var b;for(b=0;b<f;b++)if(g[b]===undefined)throw"Invalid element in slab at "+Error().stack;c=[_malloc,Runtime.stackAlloc,Runtime.staticAlloc][c?c:ALLOC_STATIC](Math.max(f,1));for(b=0;b<f;b++){var a=g[b];if(typeof a==="function")a=Runtime.getFunctionIndex(a);HEAP[c+b]=a}return c}Module.Pointer_make=Pointer_make;
function Pointer_stringify(g){for(var f="",c=0,b;;){b=String.fromCharCode(HEAP[g+c]);if(b=="\u0000")break;f+=b;c+=1}return f}var PAGE_SIZE=4096;function alignMemoryPage(g){return Math.ceil(g/PAGE_SIZE)*PAGE_SIZE}var HEAP,IHEAP,FHEAP,STACK_ROOT,STACKTOP,STACK_MAX,STATICTOP,_malloc,_calloc,_free,__Znwj,__Znaj,__Znam,__Znwm,__ZdlPv,__ZdaPv,HAS_TYPED_ARRAYS=false,TOTAL_MEMORY=52428800;
function __initializeRuntime__(){Module._malloc=_malloc=__Znwj=__Znaj=__Znam=__Znwm=Module._malloc?Module._malloc:Runtime.staticAlloc;Module._calloc=_calloc=Module._calloc?Module._calloc:function(c,b){return _malloc(c*b)};Module._free=_free=__ZdlPv=__ZdaPv=Module._free?Module._free:function(){};var g=TOTAL_MEMORY/32;IHEAP=FHEAP=HEAP=Array(g);for(var f=0;f<g;f++)IHEAP[f]=FHEAP[f]=0;g=intArrayFromString("(null)").concat(0);for(f=0;f<g.length;f++)HEAP[f]=g[f];Module.HEAP=HEAP;Module.IHEAP=IHEAP;Module.FHEAP=
FHEAP;STACK_ROOT=STACKTOP=alignMemoryPage(10);this.TOTAL_STACK||(TOTAL_STACK=1048576);STACK_MAX=STACK_ROOT+TOTAL_STACK;STATICTOP=alignMemoryPage(STACK_MAX)}function __shutdownRuntime__(){for(;__ATEXIT__.length>0;){var g=__ATEXIT__.pop();if(typeof g==="number")g=FUNCTION_TABLE[g];g()}}function Array_copy(g,f){return IHEAP.slice(g,g+f)}function String_len(g){for(var f=0;HEAP[g+f];)f++;return f}function String_copy(g,f){return Array_copy(g,String_len(g)).concat(f?[0]:[])}PRINTBUFFER="";
function __print__(g){if(g===null){print(PRINTBUFFER);PRINTBUFFER=""}else for(PRINTBUFFER+=g;(g=PRINTBUFFER.indexOf("\n"))!=-1;){print(PRINTBUFFER.substr(0,g));PRINTBUFFER=PRINTBUFFER.substr(g+1)}}function jrint(g,f){if(f)g+=" : ";else{f=g;g=""}print(g+JSON.stringify(f))}function intArrayFromString(g){for(var f=[],c=0;c<g.length;){f.push(g.charCodeAt(c));c+=1}f.push(0);return f}Module.intArrayFromString=intArrayFromString;
function intArrayToString(g){for(var f="",c=0;c<g.length;c++)f+=String.fromCharCode(g[c]);return f}function unSign(g,f){if(g>=0)return g;return 2*Math.abs(1<<f-1)+g}
var $struct__IO_FILE___SIZE=152,$struct__IO_FILE___FLATTENER=[0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,70,71,72,76,84,88,92,96,100,104,108],$struct__IO_marker___SIZE=12,$struct__expreval_t___SIZE=40,$struct__expreval_t___FLATTENER=[0,4,8,12,20,28,32],$struct__lil_env_t___SIZE=28,$struct__lil_func_t___SIZE=16,$struct__lil_list_t___SIZE=8,$struct__lil_t___SIZE=108,$struct__lil_t___FLATTENER=[0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,100,104],$struct__lil_value_t___SIZE=8,$struct__lil_var_t___SIZE=
12,__str,__str1,__str2,__str3,__str4,__str5,__str6,__str7,__str8,__str9,__str10,__str11,__str12,__str13,__str14,__str15,__str16,__str17,__str18,__str19,__str20,__str21,__str22,__str23,__str24,__str25,__str26,__str27,__str28,__str29,__str30,__str31,__str32,__str33,__str34,__str35,__str36,__str37,__str38,__str39,__str40,__str41,__str42,__str43,__str44,__str45,__str46,__str47,__str48,__str49,__str50,__str51,__str52,__str53,__str54,__str55,__str56,__str57,__str58,__str59,__str60,__str61,__str62,__str63,
__str64,__str65,__str66,__str67,__str68,__str69,__str70,__str71,__str72,__str73,__str74,__str75,__str76,__str77,__str78,__str79,__str80,__str81,__str82,__str83,__str84,__str85,__str86,__str87,__str88,__str89,__str90,__str91;_llvm_memcpy_p0i8_p0i8_i32=function(g,f,c){for(var b=0;b<c;b++){IHEAP[g+b]=IHEAP[f+b];FHEAP[g+b]=FHEAP[f+b]}};_realloc=function(g,f){if(!f){g&&_free(g);return 0}var c=_malloc(f);if(g){_memcpy(c,g,f);_free(g)}return c};
_memcpy=function(g,f,c){for(var b=0;b<c;b++){IHEAP[g+b]=IHEAP[f+b];FHEAP[g+b]=FHEAP[f+b]}};_strlen=function(g){return String_len(g)};_sprintf=function(){var g=arguments[0],f=Array.prototype.slice.call(arguments,1);_strcpy(g,__formatString.apply(null,f))};_strcpy=function(g,f){var c=0;do{HEAP[g+c]=HEAP[f+c];c++}while(HEAP[f+c-1]!=0)};
__formatString=function(){function g(l){return String.fromCharCode(l)in Runtime.set("f","e","g")}function f(l){var m;if(c){g(l);m=HEAP[a];a+=l==="l".charCodeAt(0)?8:4}else{m=d[a];a++}return m}var c=false,b=arguments[0],a=1;if(b<0){c=true;b=-b;slab=null;a=arguments[1]}else var d=arguments;for(var e=[],h,i,j;;){h=HEAP[b];if(h===0)break;i=HEAP[b+1];if(h=="%".charCodeAt(0)){h=-1;if(i==".".charCodeAt(0)){b++;for(h=0;;){i=HEAP[b+1];if(!(i>="0".charCodeAt(0)&&i<="9".charCodeAt(0)))break;h*=10;h+=i-"0".charCodeAt(0);
b++}i=HEAP[b+1]}if(i=="l".charCodeAt(0)){b++;i=HEAP[b+1]}if(g(i))i="f".charCodeAt(0);if(["d","i","u","p","f"].indexOf(String.fromCharCode(i))!=-1){var k;j=f(i);k=String(+j);k=i=="u".charCodeAt(0)?String(unSign(j,32)):i=="p".charCodeAt(0)?"0x"+j.toString(16):String(+j);if(h>=0)if(g(i)){j=k.indexOf(".");if(j==-1&&i=="f".charCodeAt(0)){j=k.length;k+="."}k+="00000000000";k=k.substr(0,j+1+h)}else for(;k.length<h;)k="0"+k;k.split("").forEach(function(l){e.push(l.charCodeAt(0))})}else if(i=="s".charCodeAt(0))e=
e.concat(String_copy(f(i)));else if(i=="c".charCodeAt(0))e=e.concat(f(i));else e.push(i);b+=2}else{e.push(h);b+=1}}return Pointer_make(e.concat(0),0,ALLOC_STACK)};
_STDIO={streams:{},filenames:{},counter:1,SEEK_SET:0,SEEK_CUR:1,SEEK_END:2,init:function(){_stdin=Pointer_make([0],null,ALLOC_STATIC);IHEAP[_stdin]=this.prepare("<<stdin>>");_stdout=Pointer_make([0],null,ALLOC_STATIC);IHEAP[_stdout]=this.prepare("<<stdout>>",null,true);_stderr=Pointer_make([0],null,ALLOC_STATIC);IHEAP[_stderr]=this.prepare("<<stderr>>",null,true)},prepare:function(g,f,c){var b=this.counter++;this.streams[b]={filename:g,data:f?f:[],position:0,eof:0,error:0,print:c};return this.filenames[g]=
b}};_strcmp=function(g,f){for(var c=0;;){var b=HEAP[g+c],a=HEAP[f+c];if(b==a&&b==0)return 0;if(b==0)return-1;if(a==0)return 1;if(b==a)c++;else return b>a?1:-1}};_fopen=function(g,f){g=Pointer_stringify(g);f=Pointer_stringify(f);if(f.indexOf("r")>=0){var c=this._STDIO.filenames[g];if(!c)return 0;var b=this._STDIO.streams[c];b.position=b.error=b.eof=0;return c}else if(f.indexOf("w")>=0)return this._STDIO.prepare(g);else assert(false,"fopen with odd params: "+f)};
_fseek=function(g,f,c){g=this._STDIO.streams[g];if(c===this._STDIO.SEEK_CUR)f+=g.position;else if(c===this._STDIO.SEEK_END)f+=g.data.length;g.position=f;return g.eof=0};_ftell=function(g){return this._STDIO.streams[g].position};_fread=function(g,f,c,b){b=this._STDIO.streams[b];for(var a=0;a<c;a++){if(b.position+f>b.data.length){b.eof=1;return a}for(var d=0;d<f;d++){HEAP[g]=b.data[b.position];b.position++;g++}}return c};_fclose=function(){return 0};
_strchr=function(g,f){g--;do{g++;var c=HEAP[g];if(c==f)return g}while(c);return 0};_strstr=function(g,f){var c=Pointer_stringify(g),b=Pointer_stringify(f);c=c.search(b);return c>=0?g+c:0};_fwrite=function(g,f,c,b){b=this._STDIO.streams[b];if(b.print)__print__(intArrayToString(Array_copy(g,c*f)));else for(var a=0;a<f*c;a++){b.data[b.position]=HEAP[g];b.position++;g++}return c};_printf=function(){__print__(Pointer_stringify(__formatString.apply(null,arguments)))};
___ctype_b_loc=function(){var g=arguments.callee;if(!g.ret){g.ret=Pointer_make([Pointer_make([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,8195,0,8194,0,8194,0,8194,0,8194,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,24577,0,49156,0,49156,0,49156,0,49156,0,49156,0,49156,0,49156,0,49156,0,49156,0,49156,0,49156,0,49156,0,49156,0,49156,0,49156,0,55304,0,55304,0,55304,0,55304,0,55304,0,55304,0,55304,0,55304,0,55304,0,55304,0,49156,0,49156,0,49156,0,49156,0,49156,0,49156,
0,49156,0,54536,0,54536,0,54536,0,54536,0,54536,0,54536,0,50440,0,50440,0,50440,0,50440,0,50440,0,50440,0,50440,0,50440,0,50440,0,50440,0,50440,0,50440,0,50440,0,50440,0,50440,0,50440,0,50440,0,50440,0,50440,0,50440,0,49156,0,49156,0,49156,0,49156,0,49156,0,49156,0,54792,0,54792,0,54792,0,54792,0,54792,0,54792,0,50696,0,50696,0,50696,0,50696,0,50696,0,50696,0,50696,0,50696,0,50696,0,50696,0,50696,0,50696,0,50696,0,50696,0,50696,0,50696,0,50696,0,50696,0,50696,0,50696,0,49156,0,49156,0,49156,0,49156,
0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0],0,ALLOC_STATIC)+256],0,ALLOC_STATIC);assert(IHEAP[IHEAP[g.ret]]==2);assert(IHEAP[IHEAP[g.ret]-2]==0);assert(IHEAP[IHEAP[g.ret]+18]==8195)}return g.ret};
function _lil_clone_value(g){var f=STACKTOP;STACKTOP+=12;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;for(c=-1;;)switch(c){case -1:var b=f,a=f+4,d=f+8;HEAP[a]=g;c=HEAP[a]!=0?0:1;break;case 1:HEAP[b]=0;c=2;break;case 0:c=_calloc(1,8);HEAP[d]=c;c=HEAP[d]!=0?3:4;break;case 4:HEAP[b]=0;c=2;break;case 3:HEAP[HEAP[d]]=HEAP[HEAP[a]];c=HEAP[HEAP[a]]!=0?5:6;break;case 5:c=_malloc(HEAP[HEAP[d]]+1&4294967295);HEAP[HEAP[d]+4]=c;c=HEAP[HEAP[d]+4]!=0?7:8;break;case 8:_free(HEAP[d]);HEAP[b]=0;
c=2;break;case 7:_llvm_memcpy_p0i8_p0i8_i32(HEAP[HEAP[d]+4],HEAP[HEAP[a]+4],HEAP[HEAP[d]]+1&4294967295,1,0);c=9;break;case 6:HEAP[HEAP[d]+4]=0;c=9;break;case 9:HEAP[b]=HEAP[d];c=2;break;case 2:g=HEAP[b];STACKTOP=f;return g;default:assert(0,"bad label: "+c)}}_lil_clone_value.__index__=Runtime.getFunctionIndex(_lil_clone_value,"_lil_clone_value");
function _lil_append_char(g,f){var c=STACKTOP;STACKTOP+=13;assert(STACKTOP<STACK_MAX);for(var b=c;b<STACKTOP;b++)HEAP[b]=0;for(b=-1;;)switch(b){case -1:var a=c,d=c+4,e=c+8,h=c+9;HEAP[d]=g;HEAP[e]=f;b=_realloc(HEAP[HEAP[d]+4],HEAP[HEAP[d]]+2&4294967295);HEAP[h]=b;b=HEAP[h]!=0?0:1;break;case 1:HEAP[a]=0;b=2;break;case 0:b=HEAP[e];var i=HEAP[d],j=HEAP[i];HEAP[i]=j+1&4294967295;HEAP[HEAP[h]+j]=b;HEAP[HEAP[h]+HEAP[HEAP[d]]]=0;HEAP[HEAP[d]+4]=HEAP[h];HEAP[a]=1;b=2;break;case 2:a=HEAP[a];STACKTOP=c;return a;
default:assert(0,"bad label: "+b)}}_lil_append_char.__index__=Runtime.getFunctionIndex(_lil_append_char,"_lil_append_char");
function _lil_append_string(g,f){var c=STACKTOP;STACKTOP+=20;assert(STACKTOP<STACK_MAX);for(var b=c;b<STACKTOP;b++)HEAP[b]=0;for(b=-1;;)switch(b){case -1:var a=c,d=c+4,e=c+8,h=c+12,i=c+16;HEAP[d]=g;HEAP[e]=f;b=HEAP[e]!=0?0:1;break;case 0:b=HEAP[HEAP[e]]!=0?2:1;break;case 1:HEAP[a]=1;b=3;break;case 2:b=_strlen(HEAP[e]);HEAP[i]=b;b=_realloc(HEAP[HEAP[d]+4],(HEAP[HEAP[d]]+HEAP[i]&4294967295)+1&4294967295);HEAP[h]=b;b=HEAP[h]!=0?4:5;break;case 5:HEAP[a]=0;b=3;break;case 4:_llvm_memcpy_p0i8_p0i8_i32(HEAP[h]+
HEAP[HEAP[d]],HEAP[e],HEAP[i]+1&4294967295,1,0);b=HEAP[d];HEAP[b]=HEAP[b]+HEAP[i]&4294967295;HEAP[HEAP[d]+4]=HEAP[h];HEAP[a]=1;b=3;break;case 3:a=HEAP[a];STACKTOP=c;return a;default:assert(0,"bad label: "+b)}}_lil_append_string.__index__=Runtime.getFunctionIndex(_lil_append_string,"_lil_append_string");
function _lil_append_val(g,f){var c=STACKTOP;STACKTOP+=16;assert(STACKTOP<STACK_MAX);for(var b=c;b<STACKTOP;b++)HEAP[b]=0;for(b=-1;;)switch(b){case -1:var a=c,d=c+4,e=c+8,h=c+12;HEAP[d]=g;HEAP[e]=f;b=HEAP[e]!=0?0:1;break;case 0:b=HEAP[HEAP[e]]!=0?2:1;break;case 1:HEAP[a]=1;b=3;break;case 2:b=_realloc(HEAP[HEAP[d]+4],(HEAP[HEAP[d]]+HEAP[HEAP[e]]&4294967295)+1&4294967295);HEAP[h]=b;b=HEAP[h]!=0?4:5;break;case 5:HEAP[a]=0;b=3;break;case 4:_llvm_memcpy_p0i8_p0i8_i32(HEAP[h]+HEAP[HEAP[d]],HEAP[HEAP[e]+
4],HEAP[HEAP[e]]+1&4294967295,1,0);b=HEAP[d];HEAP[b]=HEAP[b]+HEAP[HEAP[e]]&4294967295;HEAP[HEAP[d]+4]=HEAP[h];HEAP[a]=1;b=3;break;case 3:a=HEAP[a];STACKTOP=c;return a;default:assert(0,"bad label: "+b)}}_lil_append_val.__index__=Runtime.getFunctionIndex(_lil_append_val,"_lil_append_val");
function _lil_free_value(g){var f=STACKTOP;STACKTOP+=4;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;for(c=-1;;)switch(c){case -1:var b=f;HEAP[b]=g;c=HEAP[b]!=0?0:1;break;case 1:c=2;break;case 0:_free(HEAP[HEAP[b]+4]);_free(HEAP[b]);c=2;break;case 2:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_lil_free_value.__index__=Runtime.getFunctionIndex(_lil_free_value,"_lil_free_value");
function _lil_alloc_list(){var g=STACKTOP;STACKTOP+=4;assert(STACKTOP<STACK_MAX);for(var f=g;f<STACKTOP;f++)HEAP[f]=0;f=_calloc(1,8);HEAP[g]=f;HEAP[HEAP[g]]=0;HEAP[HEAP[g]+4]=0;f=HEAP[g];STACKTOP=g;return f}_lil_alloc_list.__index__=Runtime.getFunctionIndex(_lil_alloc_list,"_lil_alloc_list");
function _lil_free_list(g){var f=STACKTOP;STACKTOP+=8;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;for(c=-1;;)switch(c){case -1:var b=f,a=f+4;HEAP[b]=g;c=HEAP[b]!=0?0:1;break;case 1:c=2;break;case 0:HEAP[a]=0;c=3;break;case 3:c=HEAP[HEAP[b]+4];c=unSign(HEAP[a],32)<unSign(c,32)?4:5;break;case 4:_lil_free_value(HEAP[HEAP[HEAP[b]]+4*HEAP[a]]);c=6;break;case 6:HEAP[a]=HEAP[a]+1&4294967295;c=3;break;case 5:_free(HEAP[HEAP[b]]);_free(HEAP[b]);c=2;break;case 2:STACKTOP=f;return;default:assert(0,
"bad label: "+c)}}_lil_free_list.__index__=Runtime.getFunctionIndex(_lil_free_list,"_lil_free_list");
function _lil_list_append(g,f){var c=STACKTOP;STACKTOP+=12;assert(STACKTOP<STACK_MAX);for(var b=c;b<STACKTOP;b++)HEAP[b]=0;for(b=-1;;)switch(b){case -1:var a=c,d=c+4,e=c+8;HEAP[a]=g;HEAP[d]=f;b=_realloc(HEAP[HEAP[a]],4*(HEAP[HEAP[a]+4]+1&4294967295)&4294967295);HEAP[e]=b;b=HEAP[e]!=0?0:1;break;case 1:b=2;break;case 0:HEAP[HEAP[a]]=HEAP[e];b=HEAP[d];var h=HEAP[a]+4,i=HEAP[h];HEAP[h]=i+1&4294967295;HEAP[HEAP[e]+4*i]=b;b=2;break;case 2:STACKTOP=c;return;default:assert(0,"bad label: "+b)}}
_lil_list_append.__index__=Runtime.getFunctionIndex(_lil_list_append,"_lil_list_append");function _lil_list_size(g){var f=STACKTOP;STACKTOP+=4;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;HEAP[f]=g;g=HEAP[HEAP[f]+4];STACKTOP=f;return g}_lil_list_size.__index__=Runtime.getFunctionIndex(_lil_list_size,"_lil_list_size");
function _lil_list_get(g,f){var c=STACKTOP;STACKTOP+=8;assert(STACKTOP<STACK_MAX);for(var b=c;b<STACKTOP;b++)HEAP[b]=0;var a;b=null;for(a=-1;;)switch(a){case -1:var d=c,e=c+4;HEAP[d]=g;HEAP[e]=f;a=HEAP[HEAP[d]+4];a=unSign(HEAP[e],32)>=unSign(a,32)?0:1;break;case 0:b=0;a=2;break;case 1:var h=HEAP[HEAP[HEAP[d]]+4*HEAP[e]];b=1;a=2;break;case 2:d=b==0?0:h;STACKTOP=c;return d;default:assert(0,"bad label: "+a)}}_lil_list_get.__index__=Runtime.getFunctionIndex(_lil_list_get,"_lil_list_get");
function _lil_list_to_value(g,f){var c=STACKTOP;STACKTOP+=20;assert(STACKTOP<STACK_MAX);for(var b=c;b<STACKTOP;b++)HEAP[b]=0;var a;b=null;for(a=-1;;)switch(a){case -1:var d=c,e=c+4,h=c+8,i=c+12,j=c+16;HEAP[d]=g;HEAP[e]=f;a=_alloc_value(0);HEAP[h]=a;a=HEAP[i]=0;break;case 0:a=HEAP[HEAP[d]+4];a=unSign(HEAP[i],32)<unSign(a,32)?1:2;break;case 1:a=HEAP[e]!=0?3:4;break;case 3:var k=_lil_to_string(HEAP[HEAP[HEAP[d]]+4*HEAP[i]]);k=_needs_escape(k);b=3;a=5;break;case 4:b=4;a=5;break;case 5:HEAP[j]=b==3?k:
0;a=HEAP[i]!=0?6:7;break;case 6:_lil_append_char(HEAP[h],32);a=7;break;case 7:a=HEAP[j]!=0?8:9;break;case 8:_lil_append_char(HEAP[h],123);a=9;break;case 9:_lil_append_val(HEAP[h],HEAP[HEAP[HEAP[d]]+4*HEAP[i]]);a=HEAP[j]!=0?10:11;break;case 10:_lil_append_char(HEAP[h],125);a=11;break;case 11:a=12;break;case 12:HEAP[i]=HEAP[i]+1&4294967295;a=0;break;case 2:d=HEAP[h];STACKTOP=c;return d;default:assert(0,"bad label: "+a)}}_lil_list_to_value.__index__=Runtime.getFunctionIndex(_lil_list_to_value,"_lil_list_to_value");
function _alloc_value(g){var f=STACKTOP;STACKTOP+=12;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;for(c=-1;;)switch(c){case -1:var b=f,a=f+4,d=f+8;HEAP[a]=g;c=_calloc(1,8);HEAP[d]=c;c=HEAP[d]!=0?0:1;break;case 1:HEAP[b]=0;c=2;break;case 0:c=HEAP[a]!=0?3:4;break;case 3:c=_strlen(HEAP[a]);HEAP[HEAP[d]]=c;c=_malloc(HEAP[HEAP[d]]+1&4294967295);HEAP[HEAP[d]+4]=c;c=HEAP[HEAP[d]+4]!=0?5:6;break;case 6:_free(HEAP[d]);HEAP[b]=0;c=2;break;case 5:_llvm_memcpy_p0i8_p0i8_i32(HEAP[HEAP[d]+4],
HEAP[a],HEAP[HEAP[d]]+1&4294967295,1,0);c=7;break;case 4:HEAP[HEAP[d]]=0;HEAP[HEAP[d]+4]=0;c=7;break;case 7:HEAP[b]=HEAP[d];c=2;break;case 2:g=HEAP[b];STACKTOP=f;return g;default:assert(0,"bad label: "+c)}}_alloc_value.__index__=Runtime.getFunctionIndex(_alloc_value,"_alloc_value");
function _needs_escape(g){var f=STACKTOP;STACKTOP+=12;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;for(c=-1;;)switch(c){case -1:var b=f,a=f+4,d=f+8;HEAP[a]=g;c=HEAP[a]!=0?0:1;break;case 0:c=HEAP[HEAP[a]]!=0?2:1;break;case 1:HEAP[b]=1;c=3;break;case 2:HEAP[d]=0;c=4;break;case 4:c=HEAP[HEAP[a]+HEAP[d]]!=0?5:6;break;case 5:c=HEAP[HEAP[a]+HEAP[d]];var e=___ctype_b_loc();c=(HEAP[HEAP[e]+2*c]&4)!=0?7:8;break;case 8:c=HEAP[HEAP[a]+HEAP[d]];e=___ctype_b_loc();c=(HEAP[HEAP[e]+2*c]&8192)!=
0?7:9;break;case 7:HEAP[b]=1;c=3;break;case 9:c=10;break;case 10:HEAP[d]=HEAP[d]+1&4294967295;c=4;break;case 6:HEAP[b]=0;c=3;break;case 3:g=HEAP[b];STACKTOP=f;return g;default:assert(0,"bad label: "+c)}}_needs_escape.__index__=Runtime.getFunctionIndex(_needs_escape,"_needs_escape");
function _lil_to_string(g){var f=STACKTOP;STACKTOP+=4;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;var b=null;for(c=-1;;)switch(c){case -1:var a=f;HEAP[a]=g;c=HEAP[a]!=0?0:1;break;case 0:c=HEAP[HEAP[a]+4]!=0?2:1;break;case 2:var d=HEAP[HEAP[a]+4];b=2;c=3;break;case 1:b=1;c=3;break;case 3:g=b==2?d:__str4;STACKTOP=f;return g;default:assert(0,"bad label: "+c)}}_lil_to_string.__index__=Runtime.getFunctionIndex(_lil_to_string,"_lil_to_string");
function _lil_alloc_env(g){var f=STACKTOP;STACKTOP+=8;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;c=f+4;HEAP[f]=g;g=_calloc(1,28);HEAP[c]=g;HEAP[HEAP[c]]=HEAP[f];g=HEAP[c];STACKTOP=f;return g}_lil_alloc_env.__index__=Runtime.getFunctionIndex(_lil_alloc_env,"_lil_alloc_env");
function _lil_free_env(g){var f=STACKTOP;STACKTOP+=8;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;for(c=-1;;)switch(c){case -1:var b=f,a=f+4;HEAP[b]=g;c=HEAP[b]!=0?0:1;break;case 1:c=2;break;case 0:_lil_free_value(HEAP[HEAP[b]+20]);HEAP[a]=0;c=3;break;case 3:c=HEAP[HEAP[b]+16];c=unSign(HEAP[a],32)<unSign(c,32)?4:5;break;case 4:_free(HEAP[HEAP[HEAP[HEAP[b]+12]+4*HEAP[a]]]);_lil_free_value(HEAP[HEAP[HEAP[HEAP[b]+12]+4*HEAP[a]]+8]);_free(HEAP[HEAP[HEAP[b]+12]+4*HEAP[a]]);c=6;break;
case 6:HEAP[a]=HEAP[a]+1&4294967295;c=3;break;case 5:_free(HEAP[HEAP[b]+12]);_free(HEAP[b]);c=2;break;case 2:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_lil_free_env.__index__=Runtime.getFunctionIndex(_lil_free_env,"_lil_free_env");
function _lil_register(g,f,c){var b=STACKTOP;STACKTOP+=20;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b;a=b+4;var e=b+8,h=b+12,i=b+16;HEAP[a]=g;HEAP[e]=f;HEAP[h]=c;a=_add_func(HEAP[a],HEAP[e]);HEAP[i]=a;a=HEAP[i]!=0?0:1;break;case 1:HEAP[d]=0;a=2;break;case 0:HEAP[HEAP[i]+12]=HEAP[h];HEAP[d]=1;a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_lil_register.__index__=Runtime.getFunctionIndex(_lil_register,"_lil_register");
function _add_func(g,f){var c=STACKTOP;STACKTOP+=20;assert(STACKTOP<STACK_MAX);for(var b=c;b<STACKTOP;b++)HEAP[b]=0;for(b=-1;;)switch(b){case -1:var a=c,d=c+4,e=c+8,h=c+12,i=c+16;HEAP[d]=g;HEAP[e]=f;b=_find_cmd(HEAP[d],HEAP[e]);HEAP[h]=b;b=HEAP[h]!=0?0:1;break;case 0:HEAP[a]=HEAP[h];b=2;break;case 1:b=_calloc(1,16);HEAP[h]=b;b=_strclone(HEAP[e]);HEAP[HEAP[h]]=b;b=_realloc(HEAP[HEAP[d]+16],4*(HEAP[HEAP[d]+20]+1&4294967295)&4294967295);HEAP[i]=b;b=HEAP[i]!=0?3:4;break;case 4:_free(HEAP[h]);HEAP[a]=
0;b=2;break;case 3:HEAP[HEAP[d]+16]=HEAP[i];b=HEAP[h];var j=HEAP[d]+20,k=HEAP[j];HEAP[j]=k+1&4294967295;HEAP[HEAP[i]+4*k]=b;HEAP[a]=HEAP[h];b=2;break;case 2:a=HEAP[a];STACKTOP=c;return a;default:assert(0,"bad label: "+b)}}_add_func.__index__=Runtime.getFunctionIndex(_add_func,"_add_func");
function _lil_set_var(g,f,c,b){var a=STACKTOP;STACKTOP+=48;assert(STACKTOP<STACK_MAX);for(var d=a;d<STACKTOP;d++)HEAP[d]=0;var e;d=null;for(e=-1;;)switch(e){case -1:var h=a,i=a+4,j=a+8,k=a+12,l=a+16,m=a+20,n=a+24,o=a+28,p=a+32,q=a+36,r=a+40,v=a+44;HEAP[i]=g;HEAP[j]=f;HEAP[k]=c;HEAP[l]=b;e=HEAP[l]==0?0:1;break;case 0:var y=HEAP[HEAP[i]+44];d=0;e=2;break;case 1:var x=HEAP[HEAP[i]+40];d=1;e=2;break;case 2:HEAP[n]=d==0?y:x;HEAP[o]=0;e=HEAP[HEAP[j]]!=0?3:4;break;case 4:HEAP[h]=0;e=5;break;case 3:e=HEAP[l]!=
2?6:7;break;case 6:e=_lil_find_var(HEAP[i],HEAP[HEAP[i]+40],HEAP[j]);HEAP[p]=e;e=HEAP[p]!=0?8:9;break;case 9:e=HEAP[n]==HEAP[HEAP[i]+44]?10:8;break;case 8:e=HEAP[p]!=0?11:12;break;case 11:e=HEAP[HEAP[p]+4]==HEAP[HEAP[i]+44]?10:12;break;case 10:e=HEAP[HEAP[i]+68+24]!=0?13:12;break;case 13:HEAP[q]=HEAP[HEAP[i]+68+24];HEAP[r]=HEAP[k];e=FUNCTION_TABLE[HEAP[q]](HEAP[i],HEAP[j],r);HEAP[v]=e;e=HEAP[v]<0?14:15;break;case 14:HEAP[h]=0;e=5;break;case 15:e=HEAP[v]!=0?16:17;break;case 16:HEAP[k]=HEAP[r];HEAP[o]=
1;e=17;break;case 17:e=12;break;case 12:e=HEAP[p]!=0?18:19;break;case 18:_lil_free_value(HEAP[HEAP[p]+8]);e=HEAP[o]!=0?20:21;break;case 20:var z=HEAP[k];d=20;e=22;break;case 21:var w=_lil_clone_value(HEAP[k]);d=21;e=22;break;case 22:HEAP[HEAP[p]+8]=d==20?z:w;HEAP[h]=HEAP[p];e=5;break;case 19:e=7;break;case 7:e=_realloc(HEAP[HEAP[n]+12],4*(HEAP[HEAP[n]+16]+1&4294967295)&4294967295);HEAP[m]=e;e=HEAP[m]!=0?23:24;break;case 24:HEAP[h]=0;e=5;break;case 23:HEAP[HEAP[n]+12]=HEAP[m];e=_calloc(1,12);HEAP[HEAP[m]+
4*HEAP[HEAP[n]+16]]=e;e=_strclone(HEAP[j]);HEAP[HEAP[HEAP[m]+4*HEAP[HEAP[n]+16]]]=e;HEAP[HEAP[HEAP[m]+4*HEAP[HEAP[n]+16]]+4]=HEAP[n];e=HEAP[o]!=0?25:26;break;case 25:var s=HEAP[k];d=25;e=27;break;case 26:var t=_lil_clone_value(HEAP[k]);d=26;e=27;break;case 27:HEAP[HEAP[HEAP[m]+4*HEAP[HEAP[n]+16]]+8]=d==25?s:t;e=HEAP[n]+16;var u=HEAP[e];HEAP[e]=u+1&4294967295;HEAP[h]=HEAP[HEAP[m]+4*u];e=5;break;case 5:g=HEAP[h];STACKTOP=a;return g;default:assert(0,"bad label: "+e)}}
_lil_set_var.__index__=Runtime.getFunctionIndex(_lil_set_var,"_lil_set_var");
function _lil_find_var(g,f,c){var b=STACKTOP;STACKTOP+=20;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;var d=null;for(a=-1;;)switch(a){case -1:var e=b,h=b+4,i=b+8,j=b+12,k=b+16;HEAP[h]=g;HEAP[i]=f;HEAP[j]=c;a=unSign(HEAP[HEAP[i]+16],32)>unSign(0,32)?0:1;break;case 0:HEAP[k]=HEAP[HEAP[i]+16]-1&4294967295;a=2;break;case 2:a=_strcmp(HEAP[HEAP[HEAP[HEAP[i]+12]+4*HEAP[k]]],HEAP[j])!=0?3:4;break;case 4:HEAP[e]=HEAP[HEAP[HEAP[i]+12]+4*HEAP[k]];a=5;break;case 3:a=HEAP[k]!=0?6:7;break;case 7:a=
8;break;case 6:HEAP[k]=HEAP[k]+-1&4294967295;a=2;break;case 8:a=1;break;case 1:a=HEAP[i]==HEAP[HEAP[h]+44]?9:10;break;case 9:d=9;a=11;break;case 10:var l=_lil_find_var(HEAP[h],HEAP[HEAP[h]+44],HEAP[j]);d=10;a=11;break;case 11:HEAP[e]=d==9?0:l;a=5;break;case 5:g=HEAP[e];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_lil_find_var.__index__=Runtime.getFunctionIndex(_lil_find_var,"_lil_find_var");
function _strclone(g){var f=STACKTOP;STACKTOP+=16;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;for(c=-1;;)switch(c){case -1:var b=f,a=f+4,d=f+8,e=f+12;HEAP[a]=g;c=_strlen(HEAP[a])+1&4294967295;HEAP[d]=c;c=_malloc(HEAP[d]);HEAP[e]=c;c=HEAP[e]!=0?0:1;break;case 1:HEAP[b]=0;c=2;break;case 0:_llvm_memcpy_p0i8_p0i8_i32(HEAP[e],HEAP[a],HEAP[d],1,0);HEAP[b]=HEAP[e];c=2;break;case 2:g=HEAP[b];STACKTOP=f;return g;default:assert(0,"bad label: "+c)}}
_strclone.__index__=Runtime.getFunctionIndex(_strclone,"_strclone");function _lil_get_var(g,f){var c=STACKTOP;STACKTOP+=8;assert(STACKTOP<STACK_MAX);for(var b=c;b<STACKTOP;b++)HEAP[b]=0;b=c+4;HEAP[c]=g;HEAP[b]=f;b=_lil_get_var_or(HEAP[c],HEAP[b],HEAP[HEAP[c]+52]);STACKTOP=c;return b}_lil_get_var.__index__=Runtime.getFunctionIndex(_lil_get_var,"_lil_get_var");
function _lil_get_var_or(g,f,c){var b=STACKTOP;STACKTOP+=28;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;var d;a=null;for(d=-1;;)switch(d){case -1:var e=b,h=b+4,i=b+8,j=b+12,k=b+16,l=b+20,m=b+24;HEAP[e]=g;HEAP[h]=f;HEAP[i]=c;d=_lil_find_var(HEAP[e],HEAP[HEAP[e]+40],HEAP[h]);HEAP[j]=d;d=HEAP[j]!=0?0:1;break;case 0:var n=HEAP[HEAP[j]+8];a=0;d=2;break;case 1:var o=HEAP[i];a=1;d=2;break;case 2:HEAP[k]=a==0?n:o;d=HEAP[HEAP[e]+68+28]!=0?3:4;break;case 3:d=HEAP[j]!=0?5:6;break;case 5:d=
HEAP[HEAP[j]+4]==HEAP[HEAP[e]+44]?6:4;break;case 6:HEAP[l]=HEAP[HEAP[e]+68+28];HEAP[m]=HEAP[k];d=FUNCTION_TABLE[HEAP[l]](HEAP[e],HEAP[h],m)!=0?7:8;break;case 7:HEAP[k]=HEAP[m];d=8;break;case 8:d=4;break;case 4:g=HEAP[k];STACKTOP=b;return g;default:assert(0,"bad label: "+d)}}_lil_get_var_or.__index__=Runtime.getFunctionIndex(_lil_get_var_or,"_lil_get_var_or");
function _lil_push_env(g){var f=STACKTOP;STACKTOP+=8;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;c=f+4;HEAP[f]=g;g=_lil_alloc_env(HEAP[HEAP[f]+40]);HEAP[c]=g;HEAP[HEAP[f]+40]=HEAP[c];g=HEAP[c];STACKTOP=f;return g}_lil_push_env.__index__=Runtime.getFunctionIndex(_lil_push_env,"_lil_push_env");
function _lil_pop_env(g){var f=STACKTOP;STACKTOP+=8;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;for(c=-1;;)switch(c){case -1:var b=f,a=f+4;HEAP[b]=g;c=HEAP[HEAP[HEAP[b]+40]]!=0?0:1;break;case 0:HEAP[a]=HEAP[HEAP[HEAP[b]+40]];_lil_free_env(HEAP[HEAP[b]+40]);HEAP[HEAP[b]+40]=HEAP[a];c=1;break;case 1:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_lil_pop_env.__index__=Runtime.getFunctionIndex(_lil_pop_env,"_lil_pop_env");
function _lil_new(){var g=STACKTOP;STACKTOP+=4;assert(STACKTOP<STACK_MAX);for(var f=g;f<STACKTOP;f++)HEAP[f]=0;f=_calloc(1,108);HEAP[g]=f;f=_lil_alloc_env(0);HEAP[HEAP[g]+40]=f;HEAP[HEAP[g]+44]=f;f=_alloc_value(0);HEAP[HEAP[g]+52]=f;f=_strclone(__str);HEAP[HEAP[g]+36]=f;_register_stdcmds(HEAP[g]);f=HEAP[g];STACKTOP=g;return f}_lil_new.__index__=Runtime.getFunctionIndex(_lil_new,"_lil_new");
function _register_stdcmds(g){var f=STACKTOP;STACKTOP+=4;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;HEAP[f]=g;_lil_register(HEAP[f],__str11,_fnc_reflect.__index__);_lil_register(HEAP[f],__str12,_fnc_func.__index__);_lil_register(HEAP[f],__str13,_fnc_rename.__index__);_lil_register(HEAP[f],__str14,_fnc_unusedname.__index__);_lil_register(HEAP[f],__str15,_fnc_quote.__index__);_lil_register(HEAP[f],__str16,_fnc_set.__index__);_lil_register(HEAP[f],__str17,_fnc_write.__index__);_lil_register(HEAP[f],
__str18,_fnc_print.__index__);_lil_register(HEAP[f],__str19,_fnc_eval.__index__);_lil_register(HEAP[f],__str20,_fnc_upeval.__index__);_lil_register(HEAP[f],__str21,_fnc_downeval.__index__);_lil_register(HEAP[f],__str22,_fnc_jaileval.__index__);_lil_register(HEAP[f],__str23,_fnc_count.__index__);_lil_register(HEAP[f],__str24,_fnc_index.__index__);_lil_register(HEAP[f],__str25,_fnc_indexof.__index__);_lil_register(HEAP[f],__str26,_fnc_filter.__index__);_lil_register(HEAP[f],__str27,_fnc_list.__index__);
_lil_register(HEAP[f],__str28,_fnc_append.__index__);_lil_register(HEAP[f],__str29,_fnc_slice.__index__);_lil_register(HEAP[f],__str30,_fnc_subst.__index__);_lil_register(HEAP[f],__str31,_fnc_concat.__index__);_lil_register(HEAP[f],__str32,_fnc_foreach.__index__);_lil_register(HEAP[f],__str33,_fnc_return.__index__);_lil_register(HEAP[f],__str34,_fnc_expr.__index__);_lil_register(HEAP[f],__str35,_fnc_inc.__index__);_lil_register(HEAP[f],__str36,_fnc_dec.__index__);_lil_register(HEAP[f],__str37,_fnc_read.__index__);
_lil_register(HEAP[f],__str38,_fnc_store.__index__);_lil_register(HEAP[f],__str39,_fnc_if.__index__);_lil_register(HEAP[f],__str40,_fnc_while.__index__);_lil_register(HEAP[f],__str41,_fnc_for.__index__);_lil_register(HEAP[f],__str42,_fnc_char.__index__);_lil_register(HEAP[f],__str43,_fnc_charat.__index__);_lil_register(HEAP[f],__str44,_fnc_codeat.__index__);_lil_register(HEAP[f],__str45,_fnc_substr.__index__);_lil_register(HEAP[f],__str46,_fnc_strpos.__index__);_lil_register(HEAP[f],__str47,_fnc_length.__index__);
_lil_register(HEAP[f],__str48,_fnc_trim.__index__);_lil_register(HEAP[f],__str49,_fnc_ltrim.__index__);_lil_register(HEAP[f],__str50,_fnc_rtrim.__index__);_lil_register(HEAP[f],__str51,_fnc_strcmp.__index__);_lil_register(HEAP[f],__str52,_fnc_streq.__index__);_lil_register(HEAP[f],__str53,_fnc_repstr.__index__);_lil_register(HEAP[f],__str54,_fnc_split.__index__);_lil_register(HEAP[f],__str55,_fnc_try.__index__);_lil_register(HEAP[f],__str56,_fnc_error.__index__);_lil_register(HEAP[f],__str57,_fnc_exit.__index__);
_lil_register(HEAP[f],__str58,_fnc_source.__index__);_lil_register(HEAP[f],__str59,_fnc_lmap.__index__);_lil_register(HEAP[f],__str60,_fnc_rand.__index__);_lil_register(HEAP[f],__str61,_fnc_catcher.__index__);HEAP[HEAP[f]+24]=HEAP[HEAP[f]+20];STACKTOP=f}_register_stdcmds.__index__=Runtime.getFunctionIndex(_register_stdcmds,"_register_stdcmds");
function _lil_subst_to_list(g,f){var c=STACKTOP;STACKTOP+=24;assert(STACKTOP<STACK_MAX);for(var b=c;b<STACKTOP;b++)HEAP[b]=0;var a=c+4;b=c+8;var d=c+12,e=c+16,h=c+20;HEAP[c]=g;HEAP[a]=f;HEAP[b]=HEAP[HEAP[c]];HEAP[d]=HEAP[HEAP[c]+8];HEAP[e]=HEAP[HEAP[c]+12];var i=_lil_to_string(HEAP[a]);HEAP[HEAP[c]]=i;HEAP[HEAP[c]+8]=HEAP[HEAP[a]];HEAP[HEAP[c]+12]=0;a=_substitute(HEAP[c]);HEAP[h]=a;HEAP[HEAP[c]]=HEAP[b];HEAP[HEAP[c]+8]=HEAP[d];HEAP[HEAP[c]+12]=HEAP[e];b=HEAP[h];STACKTOP=c;return b}
_lil_subst_to_list.__index__=Runtime.getFunctionIndex(_lil_subst_to_list,"_lil_subst_to_list");
function _substitute(g){var f=STACKTOP;STACKTOP+=24;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;var b;c=null;for(b=-1;;)switch(b){case -1:var a=f,d=f+4,e=f+8,h=f+12,i=f+16,j=f+20;HEAP[d]=g;b=_lil_alloc_list();HEAP[e]=b;_skip_spaces(HEAP[d]);b=0;break;case 0:c=HEAP[HEAP[d]+8];if(unSign(HEAP[HEAP[d]+12],32)<unSign(c,32)){c=0;b=1}else{c=0;b=2}break;case 1:if(_ateol(HEAP[d])!=0){c=1;b=2}else{c=1;b=3}break;case 3:var k=HEAP[HEAP[d]+56]!=0^1;c=3;b=2;break;case 2:b=(c==1?0:c==0?0:k)?
4:5;break;case 4:b=_alloc_value(0);HEAP[h]=b;b=6;break;case 6:HEAP[i]=HEAP[HEAP[d]+12];b=_next_word(HEAP[d]);HEAP[j]=b;b=HEAP[i]==HEAP[HEAP[d]+12]?7:8;break;case 7:_lil_free_value(HEAP[h]);_lil_free_value(HEAP[j]);_lil_free_list(HEAP[e]);HEAP[a]=0;b=9;break;case 8:_lil_append_val(HEAP[h],HEAP[j]);_lil_free_value(HEAP[j]);b=10;break;case 10:c=HEAP[HEAP[d]+8];if(unSign(HEAP[HEAP[d]+12],32)<unSign(c,32)){c=10;b=11}else{c=10;b=12}break;case 11:if(_ateol(HEAP[d])!=0){c=11;b=12}else{c=11;b=13}break;case 13:c=
HEAP[HEAP[HEAP[d]]+HEAP[HEAP[d]+12]];b=___ctype_b_loc();if((HEAP[HEAP[b]+2*c]&8192)!=0){c=13;b=12}else{c=13;b=14}break;case 14:var l=HEAP[HEAP[d]+56]!=0^1;c=14;b=12;break;case 12:b=(c==13?0:c==11?0:c==10?0:l)?6:15;break;case 15:_skip_spaces(HEAP[d]);_lil_list_append(HEAP[e],HEAP[h]);b=0;break;case 5:HEAP[a]=HEAP[e];b=9;break;case 9:g=HEAP[a];STACKTOP=f;return g;default:assert(0,"bad label: "+b)}}_substitute.__index__=Runtime.getFunctionIndex(_substitute,"_substitute");
function _lil_subst_to_value(g,f){var c=STACKTOP;STACKTOP+=20;assert(STACKTOP<STACK_MAX);for(var b=c;b<STACKTOP;b++)HEAP[b]=0;for(b=-1;;)switch(b){case -1:var a=c;b=c+4;var d=c+8,e=c+12,h=c+16;HEAP[b]=g;HEAP[d]=f;b=_lil_subst_to_list(HEAP[b],HEAP[d]);HEAP[e]=b;b=HEAP[e]!=0?0:1;break;case 1:b=_lil_clone_value(HEAP[d]);HEAP[a]=b;b=2;break;case 0:b=_lil_list_to_value(HEAP[e],0);HEAP[h]=b;_lil_free_list(HEAP[e]);HEAP[a]=HEAP[h];b=2;break;case 2:a=HEAP[a];STACKTOP=c;return a;default:assert(0,"bad label: "+
b)}}_lil_subst_to_value.__index__=Runtime.getFunctionIndex(_lil_subst_to_value,"_lil_subst_to_value");
function _lil_parse(g,f,c,b){var a=STACKTOP;STACKTOP+=68;assert(STACKTOP<STACK_MAX);for(var d=a;d<STACKTOP;d++)HEAP[d]=0;var e;d=null;for(e=-1;;)switch(e){case -1:var h=a,i=a+4,j=a+8,k=a+12,l=a+16,m=a+20,n=a+24,o=a+28,p=a+32,q=a+36,r=a+40,v=a+44,y=a+48,x=a+52,z=a+56,w=a+60,s=a+64;HEAP[h]=g;HEAP[i]=f;HEAP[j]=c;HEAP[k]=b;HEAP[l]=HEAP[HEAP[h]];HEAP[m]=HEAP[HEAP[h]+8];HEAP[n]=HEAP[HEAP[h]+12];HEAP[o]=0;HEAP[p]=0;e=HEAP[l]!=0?0:1;break;case 1:HEAP[HEAP[h]+4]=HEAP[i];e=0;break;case 0:HEAP[HEAP[h]]=HEAP[i];
e=HEAP[j]!=0?2:3;break;case 2:var t=HEAP[j];d=2;e=4;break;case 3:var u=_strlen(HEAP[i]);d=3;e=4;break;case 4:HEAP[HEAP[h]+8]=d==2?t:u;HEAP[HEAP[h]+12]=0;_skip_spaces(HEAP[h]);e=HEAP[h]+100;HEAP[e]=HEAP[e]+1&4294967295;e=HEAP[HEAP[h]+100]==1?5:6;break;case 5:HEAP[HEAP[h]+56]=0;e=6;break;case 6:e=7;break;case 7:d=HEAP[HEAP[h]+8];if(unSign(HEAP[HEAP[h]+12],32)<unSign(d,32)){d=7;e=8}else{d=7;e=9}break;case 8:var A=HEAP[HEAP[h]+56]!=0^1;d=8;e=9;break;case 9:e=(d==7?0:A)?10:11;break;case 10:e=HEAP[p]!=
0?12:13;break;case 12:_lil_free_list(HEAP[p]);e=13;break;case 13:e=HEAP[o]!=0?14:15;break;case 14:_lil_free_value(HEAP[o]);e=15;break;case 15:HEAP[o]=0;e=_substitute(HEAP[h]);HEAP[p]=e;e=HEAP[p]!=0?16:17;break;case 16:e=HEAP[HEAP[h]+56]!=0?17:18;break;case 17:e=19;break;case 18:e=HEAP[HEAP[p]+4]!=0?20:21;break;case 20:e=HEAP[h];var B=_lil_to_string(HEAP[HEAP[HEAP[p]]]);e=_find_cmd(e,B);HEAP[q]=e;e=HEAP[q]!=0?22:23;break;case 23:e=HEAP[HEAP[HEAP[HEAP[p]]]]!=0?24:25;break;case 24:e=HEAP[HEAP[h]+28]!=
0?26:27;break;case 26:e=HEAP[HEAP[h]+32]<16384?28:29;break;case 28:e=HEAP[h]+32;HEAP[e]=HEAP[e]+1&4294967295;_lil_push_env(HEAP[h]);HEAP[HEAP[HEAP[h]+40]+8]=HEAP[HEAP[HEAP[p]]];e=_lil_list_to_value(HEAP[p],1);HEAP[r]=e;_lil_set_var(HEAP[h],__str1,HEAP[r],2);_lil_free_value(HEAP[r]);e=_lil_parse(HEAP[h],HEAP[HEAP[h]+28],0,1);HEAP[o]=e;_lil_pop_env(HEAP[h]);e=HEAP[h]+32;HEAP[e]=HEAP[e]+-1&4294967295;e=30;break;case 29:e=_malloc(HEAP[HEAP[HEAP[HEAP[p]]]]+64&4294967295);HEAP[v]=e;_sprintf(HEAP[v],__str2,
HEAP[HEAP[HEAP[HEAP[p]]]+4]);_lil_set_error_at(HEAP[h],HEAP[HEAP[h]+12],HEAP[v]);_free(HEAP[v]);e=19;break;case 30:e=31;break;case 27:e=_malloc(HEAP[HEAP[HEAP[HEAP[p]]]]+32&4294967295);HEAP[y]=e;_sprintf(HEAP[y],__str3,HEAP[HEAP[HEAP[HEAP[p]]]+4]);_lil_set_error_at(HEAP[h],HEAP[HEAP[h]+12],HEAP[y]);_free(HEAP[y]);e=19;break;case 31:e=25;break;case 25:e=22;break;case 22:e=HEAP[q]!=0?32:33;break;case 32:e=HEAP[HEAP[q]+12]!=0?34:35;break;case 34:HEAP[x]=HEAP[HEAP[h]+12];e=FUNCTION_TABLE[HEAP[HEAP[q]+
12]](HEAP[h],HEAP[HEAP[p]+4]-1&4294967295,HEAP[HEAP[p]]+4);HEAP[o]=e;e=HEAP[HEAP[h]+56]==2?36:37;break;case 36:HEAP[HEAP[h]+56]=1;HEAP[HEAP[h]+60]=HEAP[x];e=37;break;case 37:e=38;break;case 35:_lil_push_env(HEAP[h]);HEAP[HEAP[HEAP[h]+40]+4]=HEAP[q];e=HEAP[HEAP[HEAP[q]+8]+4]==1?39:40;break;case 39:e=_lil_to_string(HEAP[HEAP[HEAP[HEAP[q]+8]]]);e=_strcmp(e,__str1)!=0?40:41;break;case 41:e=_lil_list_to_value(HEAP[p],1);HEAP[z]=e;_lil_set_var(HEAP[h],__str1,HEAP[z],2);_lil_free_value(HEAP[z]);e=42;break;
case 40:HEAP[w]=0;e=43;break;case 43:e=HEAP[HEAP[HEAP[q]+8]+4];e=unSign(HEAP[w],32)<unSign(e,32)?44:45;break;case 44:var C=HEAP[h],D=_lil_to_string(HEAP[HEAP[HEAP[HEAP[q]+8]]+4*HEAP[w]]);e=HEAP[HEAP[p]+4]-1&4294967295;e=unSign(HEAP[w],32)<unSign(e,32)?46:47;break;case 46:var E=HEAP[HEAP[HEAP[p]]+4*(HEAP[w]+1&4294967295)];d=46;e=48;break;case 47:var F=HEAP[HEAP[h]+52];d=47;e=48;break;case 48:_lil_set_var(C,D,d==46?E:F,2);e=49;break;case 49:HEAP[w]=HEAP[w]+1&4294967295;e=43;break;case 45:e=42;break;
case 42:e=_lil_parse_value(HEAP[h],HEAP[HEAP[q]+4],1);HEAP[o]=e;_lil_pop_env(HEAP[h]);e=38;break;case 38:e=33;break;case 33:e=21;break;case 21:e=HEAP[HEAP[HEAP[h]+40]+24]!=0?50:51;break;case 50:e=19;break;case 51:_skip_spaces(HEAP[h]);e=52;break;case 52:e=_ateol(HEAP[h])!=0?53:54;break;case 53:e=HEAP[h]+12;HEAP[e]=HEAP[e]+1&4294967295;e=52;break;case 54:_skip_spaces(HEAP[h]);e=7;break;case 11:e=19;break;case 19:e=HEAP[HEAP[h]+56]!=0?55:56;break;case 55:e=HEAP[HEAP[h]+68+20]!=0?57:56;break;case 57:e=
HEAP[HEAP[h]+100]==1?58:56;break;case 58:HEAP[s]=HEAP[HEAP[h]+68+20];FUNCTION_TABLE[HEAP[s]](HEAP[h],HEAP[HEAP[h]+60],HEAP[HEAP[h]+64]);e=56;break;case 56:e=HEAP[p]!=0?59:60;break;case 59:_lil_free_list(HEAP[p]);e=60;break;case 60:HEAP[HEAP[h]]=HEAP[l];HEAP[HEAP[h]+8]=HEAP[m];HEAP[HEAP[h]+12]=HEAP[n];e=HEAP[k]!=0?61:62;break;case 61:e=HEAP[o]!=0?63:64;break;case 63:_lil_free_value(HEAP[o]);e=64;break;case 64:HEAP[o]=HEAP[HEAP[HEAP[h]+40]+20];HEAP[HEAP[HEAP[h]+40]+20]=0;HEAP[HEAP[HEAP[h]+40]+24]=0;
e=62;break;case 62:e=HEAP[h]+100;HEAP[e]=HEAP[e]+-1&4294967295;e=HEAP[o]!=0?65:66;break;case 65:var G=HEAP[o];d=65;e=67;break;case 66:var H=_alloc_value(0);d=66;e=67;break;case 67:g=d==65?G:H;STACKTOP=a;return g;default:assert(0,"bad label: "+e)}}_lil_parse.__index__=Runtime.getFunctionIndex(_lil_parse,"_lil_parse");
function _skip_spaces(g){var f=STACKTOP;STACKTOP+=4;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;var b;c=null;for(b=-1;;)switch(b){case -1:var a=f;HEAP[a]=g;b=0;break;case 0:c=HEAP[HEAP[a]+8];if(unSign(HEAP[HEAP[a]+12],32)<unSign(c,32)){c=0;b=1}else{c=0;b=2}break;case 1:if(HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==92){c=1;b=3}else{c=1;b=4}break;case 4:if(HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==35){c=4;b=3}else{c=4;b=5}break;case 5:c=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]];b=___ctype_b_loc();
if((HEAP[HEAP[b]+2*c]&8192)!=0){c=5;b=6}else{c=5;b=7}break;case 6:if(HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==13){c=6;b=8}else{c=6;b=9}break;case 9:var d=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==10;c=9;b=8;break;case 8:var e=(c==6?1:d)^1;c=8;b=7;break;case 7:var h=c==5?0:e;c=7;b=3;break;case 3:var i=c==4?1:c==1?1:h;c=3;b=2;break;case 2:b=(c==0?0:i)?10:11;break;case 10:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==35?12:13;break;case 12:b=14;break;case 14:c=HEAP[HEAP[a]+8];if(unSign(HEAP[HEAP[a]+12],32)<unSign(c,
32)){c=14;b=15}else{c=14;b=16}break;case 15:var j=_ateol(HEAP[a])!=0^1;c=15;b=16;break;case 16:b=(c==14?0:j)?17:18;break;case 17:b=HEAP[a]+12;HEAP[b]=HEAP[b]+1&4294967295;b=14;break;case 18:b=19;break;case 13:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==92?20:21;break;case 20:b=HEAP[HEAP[HEAP[a]]+(HEAP[HEAP[a]+12]+1&4294967295)]==13?22:23;break;case 23:b=HEAP[HEAP[HEAP[a]]+(HEAP[HEAP[a]+12]+1&4294967295)]==10?22:21;break;case 22:b=HEAP[a]+12;HEAP[b]=HEAP[b]+1&4294967295;b=24;break;case 24:c=HEAP[HEAP[a]+
8];if(unSign(HEAP[HEAP[a]+12],32)<unSign(c,32)){c=24;b=25}else{c=24;b=26}break;case 25:var k=_ateol(HEAP[a])!=0;c=25;b=26;break;case 26:b=(c==24?0:k)?27:28;break;case 27:b=HEAP[a]+12;HEAP[b]=HEAP[b]+1&4294967295;b=24;break;case 28:b=29;break;case 21:b=HEAP[a]+12;HEAP[b]=HEAP[b]+1&4294967295;b=29;break;case 29:b=19;break;case 19:b=0;break;case 11:STACKTOP=f;return;default:assert(0,"bad label: "+b)}}_skip_spaces.__index__=Runtime.getFunctionIndex(_skip_spaces,"_skip_spaces");
function _find_cmd(g,f){var c=STACKTOP;STACKTOP+=16;assert(STACKTOP<STACK_MAX);for(var b=c;b<STACKTOP;b++)HEAP[b]=0;for(b=-1;;)switch(b){case -1:var a=c,d=c+4,e=c+8,h=c+12;HEAP[d]=g;HEAP[e]=f;b=unSign(HEAP[HEAP[d]+20],32)>unSign(0,32)?0:1;break;case 0:HEAP[h]=HEAP[HEAP[d]+20]-1&4294967295;b=2;break;case 2:b=_strcmp(HEAP[HEAP[HEAP[HEAP[d]+16]+4*HEAP[h]]],HEAP[e])!=0?3:4;break;case 4:HEAP[a]=HEAP[HEAP[HEAP[d]+16]+4*HEAP[h]];b=5;break;case 3:b=HEAP[h]!=0?6:7;break;case 7:b=8;break;case 6:HEAP[h]=HEAP[h]+
-1&4294967295;b=2;break;case 8:b=1;break;case 1:HEAP[a]=0;b=5;break;case 5:a=HEAP[a];STACKTOP=c;return a;default:assert(0,"bad label: "+b)}}_find_cmd.__index__=Runtime.getFunctionIndex(_find_cmd,"_find_cmd");
function _lil_set_error_at(g,f,c){var b=STACKTOP;STACKTOP+=12;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;var d;a=null;for(d=-1;;)switch(d){case -1:var e=b,h=b+4,i=b+8;HEAP[e]=g;HEAP[h]=f;HEAP[i]=c;d=HEAP[HEAP[e]+56]!=0?0:1;break;case 0:d=2;break;case 1:_free(HEAP[HEAP[e]+64]);HEAP[HEAP[e]+56]=1;HEAP[HEAP[e]+60]=HEAP[h];d=HEAP[i]!=0?3:4;break;case 3:var j=HEAP[i];a=3;d=5;break;case 4:a=4;d=5;break;case 5:d=_strclone(a==3?j:__str4);HEAP[HEAP[e]+64]=d;d=2;break;case 2:STACKTOP=b;
return;default:assert(0,"bad label: "+d)}}_lil_set_error_at.__index__=Runtime.getFunctionIndex(_lil_set_error_at,"_lil_set_error_at");
function _lil_parse_value(g,f,c){var b=STACKTOP;STACKTOP+=16;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4,h=b+8,i=b+12;HEAP[e]=g;HEAP[h]=f;HEAP[i]=c;a=HEAP[h]!=0?0:1;break;case 0:a=HEAP[HEAP[h]+4]!=0?2:1;break;case 2:a=HEAP[HEAP[h]]!=0?3:1;break;case 1:a=_alloc_value(0);HEAP[d]=a;a=4;break;case 3:a=_lil_parse(HEAP[e],HEAP[HEAP[h]+4],HEAP[HEAP[h]],HEAP[i]);HEAP[d]=a;a=4;break;case 4:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+
a)}}_lil_parse_value.__index__=Runtime.getFunctionIndex(_lil_parse_value,"_lil_parse_value");
function _ateol(g){var f=STACKTOP;STACKTOP+=4;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;var b=null;for(c=0;;)switch(c){case 0:var a=f;HEAP[a]=g;if(HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==10){b=0;c=1}else{b=0;c=2}break;case 2:if(HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==13){b=2;c=1}else{b=2;c=3}break;case 3:var d=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==59;b=3;c=1;break;case 1:g=b==2?1:b==0?1:d;STACKTOP=f;return g;default:assert(0,"bad label: "+c)}}
_ateol.__index__=Runtime.getFunctionIndex(_ateol,"_ateol");function _lil_callback(g,f,c){var b=STACKTOP;STACKTOP+=12;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4,h=b+8;HEAP[d]=g;HEAP[e]=f;HEAP[h]=c;a=HEAP[e]<0?0:1;break;case 1:a=HEAP[e]>8?0:2;break;case 0:a=3;break;case 2:HEAP[HEAP[d]+68+HEAP[e]*4]=HEAP[h];a=3;break;case 3:STACKTOP=b;return;default:assert(0,"bad label: "+a)}}
_lil_callback.__index__=Runtime.getFunctionIndex(_lil_callback,"_lil_callback");
function _lil_set_error(g,f){var c=STACKTOP;STACKTOP+=8;assert(STACKTOP<STACK_MAX);for(var b=c;b<STACKTOP;b++)HEAP[b]=0;var a;b=null;for(a=-1;;)switch(a){case -1:var d=c,e=c+4;HEAP[d]=g;HEAP[e]=f;a=HEAP[HEAP[d]+56]!=0?0:1;break;case 0:a=2;break;case 1:_free(HEAP[HEAP[d]+64]);HEAP[HEAP[d]+56]=2;HEAP[HEAP[d]+60]=0;a=HEAP[e]!=0?3:4;break;case 3:var h=HEAP[e];b=3;a=5;break;case 4:b=4;a=5;break;case 5:a=_strclone(b==3?h:__str4);HEAP[HEAP[d]+64]=a;a=2;break;case 2:STACKTOP=c;return;default:assert(0,"bad label: "+
a)}}_lil_set_error.__index__=Runtime.getFunctionIndex(_lil_set_error,"_lil_set_error");
function _lil_error(g,f,c){var b=STACKTOP;STACKTOP+=16;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4,h=b+8,i=b+12;HEAP[e]=g;HEAP[h]=f;HEAP[i]=c;a=HEAP[HEAP[e]+56]!=0?0:1;break;case 1:HEAP[d]=0;a=2;break;case 0:HEAP[HEAP[h]]=HEAP[HEAP[e]+64];HEAP[HEAP[i]]=HEAP[HEAP[e]+60];HEAP[HEAP[e]+56]=0;HEAP[d]=1;a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}
_lil_error.__index__=Runtime.getFunctionIndex(_lil_error,"_lil_error");
function _lil_eval_expr(g,f){var c=STACKTOP;STACKTOP+=52;assert(STACKTOP<STACK_MAX);for(var b=c;b<STACKTOP;b++)HEAP[b]=0;for(b=-1;;)switch(b){case -1:var a=c,d=c+4,e=c+8,h=c+12;HEAP[d]=g;HEAP[e]=f;b=_lil_subst_to_value(HEAP[d],HEAP[e]);HEAP[e]=b;b=HEAP[HEAP[d]+56]!=0?0:1;break;case 0:HEAP[a]=0;b=2;break;case 1:b=_lil_to_string(HEAP[e]);HEAP[h]=b;b=HEAP[HEAP[h]]!=0?3:4;break;case 4:b=_lil_alloc_integer(0);HEAP[a]=b;b=2;break;case 3:HEAP[h+8]=0;HEAP[h+4]=HEAP[HEAP[e]];HEAP[h+12]=0;HEAP[h+20]=0;HEAP[h+
28]=0;HEAP[h+32]=0;_ee_expr(h);_lil_free_value(HEAP[e]);b=HEAP[h+32]!=0?5:6;break;case 5:b=HEAP[h+32];b=b==3?10:b==2?11:b==1?12:7;break;case 10:_lil_set_error(HEAP[d],__str5);b=7;break;case 11:_lil_set_error(HEAP[d],__str6);b=7;break;case 12:_lil_set_error(HEAP[d],__str7);b=7;break;case 7:HEAP[a]=0;b=2;break;case 6:b=HEAP[h+28]==0?8:9;break;case 8:b=_lil_alloc_integer(HEAP[h+12]);HEAP[a]=b;b=2;break;case 9:b=_lil_alloc_double(HEAP[h+20]);HEAP[a]=b;b=2;break;case 2:a=HEAP[a];STACKTOP=c;return a;default:assert(0,
"bad label: "+b)}}_lil_eval_expr.__index__=Runtime.getFunctionIndex(_lil_eval_expr,"_lil_eval_expr");function _lil_alloc_integer(g){var f=STACKTOP;STACKTOP+=136;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;c=f+8;HEAP[f]=g;_sprintf(c,__str10,HEAP[f]);g=_alloc_value(c);STACKTOP=f;return g}_lil_alloc_integer.__index__=Runtime.getFunctionIndex(_lil_alloc_integer,"_lil_alloc_integer");
function _ee_expr(g){var f=STACKTOP;STACKTOP+=4;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;for(c=-1;;)switch(c){case -1:var b=f;HEAP[b]=g;_ee_logor(HEAP[b]);c=HEAP[HEAP[b]+32]==4?0:1;break;case 0:HEAP[HEAP[b]+32]=0;c=HEAP[HEAP[b]+12]=1;break;case 1:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_ee_expr.__index__=Runtime.getFunctionIndex(_ee_expr,"_ee_expr");
function _lil_alloc_double(g){var f=STACKTOP;STACKTOP+=136;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;c=f+8;HEAP[f]=g;_sprintf(c,__str9,HEAP[f]);g=_alloc_value(c);STACKTOP=f;return g}_lil_alloc_double.__index__=Runtime.getFunctionIndex(_lil_alloc_double,"_lil_alloc_double");
function _lil_unused_name(g,f){var c=STACKTOP;STACKTOP+=24;assert(STACKTOP<STACK_MAX);for(var b=c;b<STACKTOP;b++)HEAP[b]=0;for(b=-1;;)switch(b){case -1:var a=c,d=c+4,e=c+8,h=c+12,i=c+16,j=c+20;HEAP[d]=g;HEAP[e]=f;b=_strlen(HEAP[e])+64&4294967295;b=_malloc(b);HEAP[h]=b;b=HEAP[j]=0;break;case 0:b=unSign(HEAP[j],32)<unSign(-1,32)?1:2;break;case 1:_sprintf(HEAP[h],__str8,HEAP[e],HEAP[j]);b=_find_cmd(HEAP[d],HEAP[h])!=0?3:4;break;case 3:b=5;break;case 4:b=_lil_find_var(HEAP[d],HEAP[HEAP[d]+40],HEAP[h])!=
0?6:7;break;case 6:b=5;break;case 7:b=_lil_alloc_string(HEAP[h]);HEAP[i]=b;_free(HEAP[h]);HEAP[a]=HEAP[i];b=8;break;case 5:HEAP[j]=HEAP[j]+1&4294967295;b=0;break;case 2:HEAP[a]=0;b=8;break;case 8:a=HEAP[a];STACKTOP=c;return a;default:assert(0,"bad label: "+b)}}_lil_unused_name.__index__=Runtime.getFunctionIndex(_lil_unused_name,"_lil_unused_name");
function _lil_alloc_string(g){var f=STACKTOP;STACKTOP+=4;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;HEAP[f]=g;g=_alloc_value(HEAP[f]);STACKTOP=f;return g}_lil_alloc_string.__index__=Runtime.getFunctionIndex(_lil_alloc_string,"_lil_alloc_string");
function _lil_arg(g,f){var c=STACKTOP;STACKTOP+=8;assert(STACKTOP<STACK_MAX);for(var b=c;b<STACKTOP;b++)HEAP[b]=0;var a=null;for(b=-1;;)switch(b){case -1:var d=c,e=c+4;HEAP[d]=g;HEAP[e]=f;b=HEAP[d]!=0?0:1;break;case 0:var h=HEAP[HEAP[d]+4*HEAP[e]];a=0;b=2;break;case 1:a=1;b=2;break;case 2:d=a==0?h:0;STACKTOP=c;return d;default:assert(0,"bad label: "+b)}}_lil_arg.__index__=Runtime.getFunctionIndex(_lil_arg,"_lil_arg");
function _lil_to_double(g){var f=STACKTOP;STACKTOP+=4;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;HEAP[f]=g;g=_lil_to_string(HEAP[f]);g=_atof(g);STACKTOP=f;return g}_lil_to_double.__index__=Runtime.getFunctionIndex(_lil_to_double,"_lil_to_double");function _lil_to_integer(g){var f=STACKTOP;STACKTOP+=4;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;HEAP[f]=g;g=_lil_to_string(HEAP[f]);g=_atoll(g);STACKTOP=f;return g}
_lil_to_integer.__index__=Runtime.getFunctionIndex(_lil_to_integer,"_lil_to_integer");
function _lil_to_boolean(g){var f=STACKTOP;STACKTOP+=20;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;for(c=-1;;)switch(c){case -1:var b=f;c=f+4;var a=f+8,d=f+12,e=f+16;HEAP[c]=g;c=_lil_to_string(HEAP[c]);HEAP[a]=c;HEAP[e]=0;c=HEAP[HEAP[a]]!=0?0:1;break;case 1:HEAP[b]=0;c=2;break;case 0:HEAP[d]=0;c=3;break;case 3:c=HEAP[HEAP[a]+HEAP[d]]!=0?4:5;break;case 4:c=HEAP[HEAP[a]+HEAP[d]]!=48?6:7;break;case 6:c=HEAP[HEAP[a]+HEAP[d]]!=46?8:7;break;case 8:HEAP[b]=1;c=2;break;case 7:c=HEAP[HEAP[a]+
HEAP[d]]==46?9:10;break;case 9:c=HEAP[e]!=0?11:12;break;case 11:HEAP[b]=1;c=2;break;case 12:HEAP[e]=1;c=10;break;case 10:c=13;break;case 13:HEAP[d]=HEAP[d]+1&4294967295;c=3;break;case 5:HEAP[b]=0;c=2;break;case 2:g=HEAP[b];STACKTOP=f;return g;default:assert(0,"bad label: "+c)}}_lil_to_boolean.__index__=Runtime.getFunctionIndex(_lil_to_boolean,"_lil_to_boolean");
function _lil_free(g){var f=STACKTOP;STACKTOP+=12;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;for(c=-1;;)switch(c){case -1:var b=f,a=f+4,d=f+8;HEAP[b]=g;c=HEAP[b]!=0?0:1;break;case 1:c=2;break;case 0:_free(HEAP[HEAP[b]+64]);_lil_free_value(HEAP[HEAP[b]+52]);c=3;break;case 3:c=HEAP[HEAP[b]+40]!=0?4:5;break;case 4:HEAP[d]=HEAP[HEAP[HEAP[b]+40]];_lil_free_env(HEAP[HEAP[b]+40]);HEAP[HEAP[b]+40]=HEAP[d];c=3;break;case 5:HEAP[a]=0;c=6;break;case 6:c=HEAP[HEAP[b]+20];c=unSign(HEAP[a],
32)<unSign(c,32)?7:8;break;case 7:c=HEAP[HEAP[HEAP[HEAP[b]+16]+4*HEAP[a]]+8]!=0?9:10;break;case 9:_lil_free_list(HEAP[HEAP[HEAP[HEAP[b]+16]+4*HEAP[a]]+8]);c=10;break;case 10:_lil_free_value(HEAP[HEAP[HEAP[HEAP[b]+16]+4*HEAP[a]]+4]);_free(HEAP[HEAP[HEAP[HEAP[b]+16]+4*HEAP[a]]]);_free(HEAP[HEAP[HEAP[b]+16]+4*HEAP[a]]);c=11;break;case 11:HEAP[a]=HEAP[a]+1&4294967295;c=6;break;case 8:_free(HEAP[HEAP[b]+16]);_free(HEAP[HEAP[b]+36]);_free(HEAP[HEAP[b]+28]);_free(HEAP[b]);c=2;break;case 2:STACKTOP=f;return;
default:assert(0,"bad label: "+c)}}_lil_free.__index__=Runtime.getFunctionIndex(_lil_free,"_lil_free");function _lil_set_data(g,f){var c=STACKTOP;STACKTOP+=8;assert(STACKTOP<STACK_MAX);for(var b=c;b<STACKTOP;b++)HEAP[b]=0;b=c+4;HEAP[c]=g;HEAP[b]=f;HEAP[HEAP[c]+104]=HEAP[b];STACKTOP=c}_lil_set_data.__index__=Runtime.getFunctionIndex(_lil_set_data,"_lil_set_data");
function _lil_get_data(g){var f=STACKTOP;STACKTOP+=4;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;HEAP[f]=g;g=HEAP[HEAP[f]+104];STACKTOP=f;return g}_lil_get_data.__index__=Runtime.getFunctionIndex(_lil_get_data,"_lil_get_data");
function _fnc_reflect(g,f,c){var b=STACKTOP;STACKTOP+=76;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;var d;a=null;for(d=-1;;)switch(d){case -1:var e=b,h=b+4,i=b+8,j=b+12,k=b+16,l=b+20,m=b+24,n=b+28,o=b+32,p=b+36,q=b+40,r=b+44,v=b+48,y=b+52,x=b+56,z=b+60,w=b+64,s=b+68,t=b+72;HEAP[h]=g;HEAP[i]=f;HEAP[j]=c;d=HEAP[i]!=0?0:1;break;case 1:HEAP[e]=0;d=2;break;case 0:d=_lil_to_string(HEAP[HEAP[j]]);HEAP[l]=d;d=_strcmp(HEAP[l],__str77)!=0?3:4;break;case 4:d=_lil_alloc_string(__str78);HEAP[e]=
d;d=2;break;case 3:d=_strcmp(HEAP[l],__str1)!=0?5:6;break;case 6:d=unSign(HEAP[i],32)<unSign(2,32)?7:8;break;case 7:HEAP[e]=0;d=2;break;case 8:d=HEAP[h];var u=_lil_to_string(HEAP[HEAP[j]+4]);d=_find_cmd(d,u);HEAP[k]=d;d=HEAP[k]!=0?9:10;break;case 9:d=HEAP[HEAP[k]+8]!=0?11:10;break;case 10:HEAP[e]=0;d=2;break;case 11:d=_lil_list_to_value(HEAP[HEAP[k]+8],1);HEAP[e]=d;d=2;break;case 5:d=_strcmp(HEAP[l],__str79)!=0?12:13;break;case 13:d=unSign(HEAP[i],32)<unSign(2,32)?14:15;break;case 14:HEAP[e]=0;d=
2;break;case 15:d=HEAP[h];u=_lil_to_string(HEAP[HEAP[j]+4]);d=_find_cmd(d,u);HEAP[k]=d;d=HEAP[k]!=0?16:17;break;case 16:d=HEAP[HEAP[k]+12]!=0?17:18;break;case 17:HEAP[e]=0;d=2;break;case 18:d=_lil_clone_value(HEAP[HEAP[k]+4]);HEAP[e]=d;d=2;break;case 12:d=_strcmp(HEAP[l],__str80)!=0?19:20;break;case 20:d=_lil_alloc_integer(HEAP[HEAP[h]+20]);HEAP[e]=d;d=2;break;case 19:d=_strcmp(HEAP[l],__str81)!=0?21:22;break;case 22:d=_lil_alloc_list();HEAP[o]=d;HEAP[m]=0;d=23;break;case 23:d=HEAP[HEAP[h]+20];d=
unSign(HEAP[m],32)<unSign(d,32)?24:25;break;case 24:d=HEAP[o];u=_lil_alloc_string(HEAP[HEAP[HEAP[HEAP[h]+16]+4*HEAP[m]]]);_lil_list_append(d,u);d=26;break;case 26:HEAP[m]=HEAP[m]+1&4294967295;d=23;break;case 25:d=_lil_list_to_value(HEAP[o],1);HEAP[n]=d;_lil_free_list(HEAP[o]);HEAP[e]=HEAP[n];d=2;break;case 21:d=_strcmp(HEAP[l],__str82)!=0?27:28;break;case 28:d=_lil_alloc_list();HEAP[p]=d;HEAP[q]=HEAP[HEAP[h]+40];d=29;break;case 29:d=HEAP[q]!=0?30:31;break;case 30:HEAP[m]=0;d=32;break;case 32:d=HEAP[HEAP[q]+
16];d=unSign(HEAP[m],32)<unSign(d,32)?33:34;break;case 33:d=HEAP[p];u=_lil_alloc_string(HEAP[HEAP[HEAP[HEAP[q]+12]+4*HEAP[m]]]);_lil_list_append(d,u);d=35;break;case 35:HEAP[m]=HEAP[m]+1&4294967295;d=32;break;case 34:HEAP[q]=HEAP[HEAP[q]];d=29;break;case 31:d=_lil_list_to_value(HEAP[p],1);HEAP[n]=d;_lil_free_list(HEAP[p]);HEAP[e]=HEAP[n];d=2;break;case 27:d=_strcmp(HEAP[l],__str83)!=0?36:37;break;case 37:d=_lil_alloc_list();HEAP[r]=d;HEAP[m]=0;d=38;break;case 38:d=HEAP[HEAP[HEAP[h]+44]+16];d=unSign(HEAP[m],
32)<unSign(d,32)?39:40;break;case 39:d=HEAP[r];u=_lil_alloc_string(HEAP[HEAP[HEAP[HEAP[HEAP[h]+44]+12]+4*HEAP[m]]]);_lil_list_append(d,u);d=41;break;case 41:HEAP[m]=HEAP[m]+1&4294967295;d=38;break;case 40:d=_lil_list_to_value(HEAP[r],1);HEAP[n]=d;_lil_free_list(HEAP[r]);HEAP[e]=HEAP[n];d=2;break;case 36:d=_strcmp(HEAP[l],__str84)!=0?42:43;break;case 43:d=HEAP[i]==1?44:45;break;case 44:HEAP[e]=0;d=2;break;case 45:d=_lil_to_string(HEAP[HEAP[j]+4]);HEAP[v]=d;HEAP[m]=0;d=46;break;case 46:d=HEAP[HEAP[h]+
20];d=unSign(HEAP[m],32)<unSign(d,32)?47:48;break;case 47:d=_strcmp(HEAP[v],HEAP[HEAP[HEAP[HEAP[h]+16]+4*HEAP[m]]])!=0?49:50;break;case 50:d=_lil_alloc_string(__str85);HEAP[e]=d;d=2;break;case 49:d=51;break;case 51:HEAP[m]=HEAP[m]+1&4294967295;d=46;break;case 48:HEAP[e]=0;d=2;break;case 42:d=_strcmp(HEAP[l],__str86)!=0?52:53;break;case 53:HEAP[x]=HEAP[HEAP[h]+40];d=HEAP[i]==1?54:55;break;case 54:HEAP[e]=0;d=2;break;case 55:d=_lil_to_string(HEAP[HEAP[j]+4]);HEAP[y]=d;d=56;break;case 56:d=HEAP[x]!=
0?57:58;break;case 57:HEAP[m]=0;d=59;break;case 59:d=HEAP[HEAP[x]+16];d=unSign(HEAP[m],32)<unSign(d,32)?60:61;break;case 60:d=_strcmp(HEAP[y],HEAP[HEAP[HEAP[HEAP[x]+12]+4*HEAP[m]]])!=0?62:63;break;case 63:d=_lil_alloc_string(__str85);HEAP[e]=d;d=2;break;case 62:d=64;break;case 64:HEAP[m]=HEAP[m]+1&4294967295;d=59;break;case 61:HEAP[x]=HEAP[HEAP[x]];d=56;break;case 58:HEAP[e]=0;d=2;break;case 52:d=_strcmp(HEAP[l],__str87)!=0?65:66;break;case 66:d=HEAP[i]==1?67:68;break;case 67:HEAP[e]=0;d=2;break;
case 68:d=_lil_to_string(HEAP[HEAP[j]+4]);HEAP[z]=d;HEAP[m]=0;d=69;break;case 69:d=HEAP[HEAP[HEAP[h]+44]+16];d=unSign(HEAP[m],32)<unSign(d,32)?70:71;break;case 70:d=_strcmp(HEAP[z],HEAP[HEAP[HEAP[HEAP[HEAP[h]+44]+12]+4*HEAP[m]]])!=0?72:73;break;case 73:d=_lil_alloc_string(__str85);HEAP[e]=d;d=2;break;case 72:d=74;break;case 74:HEAP[m]=HEAP[m]+1&4294967295;d=69;break;case 71:HEAP[e]=0;d=2;break;case 65:d=_strcmp(HEAP[l],__str56)!=0?75:76;break;case 76:d=HEAP[HEAP[h]+64]!=0?77:78;break;case 77:var A=
_lil_alloc_string(HEAP[HEAP[h]+64]);a=77;d=79;break;case 78:a=78;d=79;break;case 79:HEAP[e]=a==77?A:0;d=2;break;case 75:d=_strcmp(HEAP[l],__str88)!=0?80:81;break;case 81:d=HEAP[i]==1?82:83;break;case 82:d=_lil_alloc_string(HEAP[HEAP[h]+36]);HEAP[e]=d;d=2;break;case 83:d=_lil_alloc_string(HEAP[HEAP[h]+36]);HEAP[w]=d;_free(HEAP[HEAP[h]+36]);d=_lil_to_string(HEAP[HEAP[j]+4]);d=_strclone(d);HEAP[HEAP[h]+36]=d;HEAP[e]=HEAP[w];d=2;break;case 80:d=_strcmp(HEAP[l],__str89)!=0?84:85;break;case 85:HEAP[s]=
HEAP[HEAP[h]+40];d=86;break;case 86:if(HEAP[s]!=HEAP[HEAP[h]+44]){a=86;d=87}else{a=86;d=88}break;case 87:if(HEAP[HEAP[s]+8]!=0){a=87;d=88}else{a=87;d=89}break;case 89:var B=HEAP[HEAP[s]+4]!=0^1;a=89;d=88;break;case 88:d=(a==87?0:a==86?0:B)?90:91;break;case 90:HEAP[s]=HEAP[HEAP[s]];d=86;break;case 91:d=HEAP[HEAP[s]+8]!=0?92:93;break;case 92:d=_lil_alloc_string(HEAP[HEAP[h]+28]);HEAP[e]=d;d=2;break;case 93:d=HEAP[s]==HEAP[HEAP[h]+44]?94:95;break;case 94:d=_lil_alloc_string(HEAP[HEAP[h]+4]);HEAP[e]=
d;d=2;break;case 95:d=HEAP[HEAP[s]+4]!=0?96:97;break;case 96:var C=HEAP[HEAP[HEAP[s]+4]+4];a=96;d=98;break;case 97:a=97;d=98;break;case 98:HEAP[e]=a==96?C:0;d=2;break;case 84:d=_strcmp(HEAP[l],__str90)!=0?99:100;break;case 100:HEAP[t]=HEAP[HEAP[h]+40];d=101;break;case 101:if(HEAP[t]!=HEAP[HEAP[h]+44]){a=101;d=102}else{a=101;d=103}break;case 102:if(HEAP[HEAP[t]+8]!=0){a=102;d=103}else{a=102;d=104}break;case 104:var D=HEAP[HEAP[t]+4]!=0^1;a=104;d=103;break;case 103:d=(a==102?0:a==101?0:D)?105:106;break;
case 105:HEAP[t]=HEAP[HEAP[t]];d=101;break;case 106:d=HEAP[HEAP[t]+8]!=0?107:108;break;case 107:HEAP[e]=HEAP[HEAP[t]+8];d=2;break;case 108:d=HEAP[t]==HEAP[HEAP[h]+44]?109:110;break;case 109:HEAP[e]=0;d=2;break;case 110:d=HEAP[HEAP[t]+4]!=0?111:112;break;case 111:var E=_lil_alloc_string(HEAP[HEAP[HEAP[t]+4]]);a=111;d=113;break;case 112:a=112;d=113;break;case 113:HEAP[e]=a==111?E:0;d=2;break;case 99:HEAP[e]=0;d=2;break;case 2:g=HEAP[e];STACKTOP=b;return g;default:assert(0,"bad label: "+d)}}
_fnc_reflect.__index__=Runtime.getFunctionIndex(_fnc_reflect,"_fnc_reflect");
function _fnc_func(g,f,c){var b=STACKTOP;STACKTOP+=28;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4,h=b+8,i=b+12,j=b+16,k=b+20,l=b+24;HEAP[e]=g;HEAP[h]=f;HEAP[i]=c;a=unSign(HEAP[h],32)<unSign(1,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=HEAP[h]==3?3:4;break;case 3:a=_lil_clone_value(HEAP[HEAP[i]]);HEAP[j]=a;a=HEAP[e];var m=_lil_to_string(HEAP[HEAP[i]]);a=_add_func(a,m);HEAP[k]=a;a=_lil_subst_to_list(HEAP[e],HEAP[HEAP[i]+4]);HEAP[HEAP[k]+
8]=a;a=_lil_clone_value(HEAP[HEAP[i]+8]);HEAP[HEAP[k]+4]=a;a=5;break;case 4:a=_lil_unused_name(HEAP[e],__str76);HEAP[j]=a;a=HEAP[e];m=_lil_to_string(HEAP[j]);a=_add_func(a,m);HEAP[k]=a;a=unSign(HEAP[h],32)<unSign(2,32)?6:7;break;case 6:a=_lil_alloc_string(__str1);HEAP[l]=a;a=_lil_subst_to_list(HEAP[e],HEAP[l]);HEAP[HEAP[k]+8]=a;_lil_free_value(HEAP[l]);a=_lil_clone_value(HEAP[HEAP[i]]);HEAP[HEAP[k]+4]=a;a=8;break;case 7:a=_lil_subst_to_list(HEAP[e],HEAP[HEAP[i]]);HEAP[HEAP[k]+8]=a;a=_lil_clone_value(HEAP[HEAP[i]+
4]);HEAP[HEAP[k]+4]=a;a=8;break;case 8:a=5;break;case 5:HEAP[d]=HEAP[j];a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_func.__index__=Runtime.getFunctionIndex(_fnc_func,"_fnc_func");
function _fnc_rename(g,f,c){var b=STACKTOP;STACKTOP+=36;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4;a=b+8;var h=b+12,i=b+16,j=b+20,k=b+24,l=b+28,m=b+32;HEAP[e]=g;HEAP[a]=f;HEAP[h]=c;a=unSign(HEAP[a],32)<unSign(2,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=_lil_to_string(HEAP[HEAP[h]]);HEAP[k]=a;a=_lil_to_string(HEAP[HEAP[h]+4]);HEAP[l]=a;a=_find_cmd(HEAP[e],HEAP[k]);HEAP[j]=a;a=HEAP[j]!=0?3:4;break;case 4:a=24+_strlen(HEAP[k])&4294967295;
a=_malloc(a);HEAP[m]=a;_sprintf(HEAP[m],__str75,HEAP[k]);_lil_set_error_at(HEAP[e],HEAP[HEAP[e]+12],HEAP[m]);_free(HEAP[m]);HEAP[d]=0;a=2;break;case 3:a=_lil_alloc_string(HEAP[HEAP[j]]);HEAP[i]=a;_free(HEAP[HEAP[j]]);a=_strclone(HEAP[l]);HEAP[HEAP[j]]=a;HEAP[d]=HEAP[i];a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_rename.__index__=Runtime.getFunctionIndex(_fnc_rename,"_fnc_rename");
function _fnc_unusedname(g,f,c){var b=STACKTOP;STACKTOP+=12;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;var d;a=null;for(d=-1;;)switch(d){case -1:var e=b;d=b+4;var h=b+8;HEAP[e]=g;HEAP[d]=f;HEAP[h]=c;e=HEAP[e];d=unSign(HEAP[d],32)>unSign(0,32)?0:1;break;case 0:var i=_lil_to_string(HEAP[HEAP[h]]);a=0;d=2;break;case 1:a=1;d=2;break;case 2:g=_lil_unused_name(e,a==0?i:__str14);STACKTOP=b;return g;default:assert(0,"bad label: "+d)}}
_fnc_unusedname.__index__=Runtime.getFunctionIndex(_fnc_unusedname,"_fnc_unusedname");
function _fnc_quote(g,f,c){var b=STACKTOP;STACKTOP+=24;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+8,h=b+12,i=b+16,j=b+20;HEAP[b+4]=g;HEAP[e]=f;HEAP[h]=c;a=unSign(HEAP[e],32)<unSign(1,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=_alloc_value(0);HEAP[i]=a;HEAP[j]=0;a=3;break;case 3:a=HEAP[e];a=unSign(HEAP[j],32)<unSign(a,32)?4:5;break;case 4:a=HEAP[j]!=0?6:7;break;case 6:_lil_append_char(HEAP[i],32);a=7;break;case 7:_lil_append_val(HEAP[i],
HEAP[HEAP[h]+4*HEAP[j]]);a=8;break;case 8:HEAP[j]=HEAP[j]+1&4294967295;a=3;break;case 5:HEAP[d]=HEAP[i];a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_quote.__index__=Runtime.getFunctionIndex(_fnc_quote,"_fnc_quote");
function _fnc_set(g,f,c){var b=STACKTOP;STACKTOP+=28;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;var d;a=null;for(d=-1;;)switch(d){case -1:var e=b,h=b+4,i=b+8,j=b+12,k=b+16,l=b+20,m=b+24;HEAP[h]=g;HEAP[i]=f;HEAP[j]=c;HEAP[k]=0;HEAP[m]=1;d=HEAP[i]!=0?0:1;break;case 1:HEAP[e]=0;d=2;break;case 0:d=_lil_to_string(HEAP[HEAP[j]]);d=_strcmp(d,__str68)!=0?3:4;break;case 4:HEAP[k]=1;HEAP[m]=0;d=3;break;case 3:d=5;break;case 5:d=HEAP[i];d=unSign(HEAP[k],32)<unSign(d,32)?6:7;break;case 6:d=
HEAP[i]==(HEAP[k]+1&4294967295)?8:9;break;case 8:d=HEAP[h];var n=_lil_to_string(HEAP[HEAP[j]+4*HEAP[k]]);d=_lil_get_var(d,n);d=_lil_clone_value(d);HEAP[e]=d;d=2;break;case 9:d=HEAP[h];n=_lil_to_string(HEAP[HEAP[j]+4*HEAP[k]]);d=_lil_set_var(d,n,HEAP[HEAP[j]+4*(HEAP[k]+1&4294967295)],HEAP[m]);HEAP[l]=d;HEAP[k]=HEAP[k]+2&4294967295;d=5;break;case 7:d=HEAP[l]!=0?10:11;break;case 10:var o=_lil_clone_value(HEAP[HEAP[l]+8]);a=10;d=12;break;case 11:a=11;d=12;break;case 12:HEAP[e]=a==10?o:0;d=2;break;case 2:g=
HEAP[e];STACKTOP=b;return g;default:assert(0,"bad label: "+d)}}_fnc_set.__index__=Runtime.getFunctionIndex(_fnc_set,"_fnc_set");
function _fnc_write(g,f,c){var b=STACKTOP;STACKTOP+=24;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4,h=b+8,i=b+12,j=b+16,k=b+20;HEAP[d]=g;HEAP[e]=f;HEAP[h]=c;a=_lil_alloc_string(0);HEAP[j]=a;a=HEAP[i]=0;break;case 0:a=HEAP[e];a=unSign(HEAP[i],32)<unSign(a,32)?1:2;break;case 1:a=HEAP[i]!=0?3:4;break;case 3:_lil_append_char(HEAP[j],32);a=4;break;case 4:_lil_append_val(HEAP[j],HEAP[HEAP[h]+4*HEAP[i]]);a=5;break;case 5:HEAP[i]=HEAP[i]+1&4294967295;
a=0;break;case 2:a=HEAP[HEAP[d]+68+4]!=0?6:7;break;case 6:HEAP[k]=HEAP[HEAP[d]+68+4];a=HEAP[k];var l=HEAP[d],m=_lil_to_string(HEAP[j]);FUNCTION_TABLE[a](l,m);a=8;break;case 7:a=_lil_to_string(HEAP[j]);_printf(__str74,a);a=8;break;case 8:_lil_free_value(HEAP[j]);STACKTOP=b;return 0;default:assert(0,"bad label: "+a)}}_fnc_write.__index__=Runtime.getFunctionIndex(_fnc_write,"_fnc_write");
function _fnc_print(g,f,c){var b=STACKTOP;STACKTOP+=16;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b;a=b+4;var e=b+8,h=b+12;HEAP[d]=g;HEAP[a]=f;HEAP[e]=c;_fnc_write(HEAP[d],HEAP[a],HEAP[e]);a=HEAP[HEAP[d]+68+4]!=0?0:1;break;case 0:HEAP[h]=HEAP[HEAP[d]+68+4];FUNCTION_TABLE[HEAP[h]](HEAP[d],__str73);a=2;break;case 1:_printf(__str73);a=2;break;case 2:STACKTOP=b;return 0;default:assert(0,"bad label: "+a)}}
_fnc_print.__index__=Runtime.getFunctionIndex(_fnc_print,"_fnc_print");
function _fnc_eval(g,f,c){var b=STACKTOP;STACKTOP+=28;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4,h=b+8,i=b+12,j=b+16,k=b+20,l=b+24;HEAP[e]=g;HEAP[h]=f;HEAP[i]=c;a=HEAP[h]==1?0:1;break;case 0:a=_lil_parse_value(HEAP[e],HEAP[HEAP[i]],0);HEAP[d]=a;a=2;break;case 1:a=unSign(HEAP[h],32)>unSign(1,32)?3:4;break;case 3:a=_alloc_value(0);HEAP[j]=a;HEAP[l]=0;a=5;break;case 5:a=HEAP[h];a=unSign(HEAP[l],32)<unSign(a,32)?6:7;break;case 6:a=HEAP[l]!=
0?8:9;break;case 8:_lil_append_char(HEAP[j],32);a=9;break;case 9:_lil_append_val(HEAP[j],HEAP[HEAP[i]+4*HEAP[l]]);a=10;break;case 10:HEAP[l]=HEAP[l]+1&4294967295;a=5;break;case 7:a=_lil_parse_value(HEAP[e],HEAP[j],0);HEAP[k]=a;_lil_free_value(HEAP[j]);HEAP[d]=HEAP[k];a=2;break;case 4:HEAP[d]=0;a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_eval.__index__=Runtime.getFunctionIndex(_fnc_eval,"_fnc_eval");
function _fnc_upeval(g,f,c){var b=STACKTOP;STACKTOP+=28;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4,h=b+8,i=b+12,j=b+16,k=b+20,l=b+24;HEAP[e]=g;HEAP[h]=f;HEAP[i]=c;HEAP[j]=HEAP[HEAP[e]+40];HEAP[k]=HEAP[HEAP[e]+48];a=HEAP[HEAP[e]+44]==HEAP[j]?0:1;break;case 0:a=_fnc_eval(HEAP[e],HEAP[h],HEAP[i]);HEAP[d]=a;a=2;break;case 1:HEAP[HEAP[e]+40]=HEAP[HEAP[j]];HEAP[HEAP[e]+48]=HEAP[j];a=_fnc_eval(HEAP[e],HEAP[h],HEAP[i]);HEAP[l]=a;HEAP[HEAP[e]+
40]=HEAP[j];HEAP[HEAP[e]+48]=HEAP[k];HEAP[d]=HEAP[l];a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_upeval.__index__=Runtime.getFunctionIndex(_fnc_upeval,"_fnc_upeval");
function _fnc_downeval(g,f,c){var b=STACKTOP;STACKTOP+=28;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4,h=b+8,i=b+12,j=b+16,k=b+20,l=b+24;HEAP[e]=g;HEAP[h]=f;HEAP[i]=c;HEAP[k]=HEAP[HEAP[e]+40];HEAP[l]=HEAP[HEAP[e]+48];a=HEAP[l]!=0?0:1;break;case 1:a=_fnc_eval(HEAP[e],HEAP[h],HEAP[i]);HEAP[d]=a;a=2;break;case 0:HEAP[HEAP[e]+48]=0;HEAP[HEAP[e]+40]=HEAP[l];a=_fnc_eval(HEAP[e],HEAP[h],HEAP[i]);HEAP[j]=a;HEAP[HEAP[e]+48]=HEAP[l];HEAP[HEAP[e]+
40]=HEAP[k];HEAP[d]=HEAP[j];a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_downeval.__index__=Runtime.getFunctionIndex(_fnc_downeval,"_fnc_downeval");
function _fnc_jaileval(g,f,c){var b=STACKTOP;STACKTOP+=36;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4,h=b+8,i=b+12,j=b+16,k=b+20,l=b+24,m=b+28,n=b+32;HEAP[e]=g;HEAP[h]=f;HEAP[i]=c;HEAP[m]=0;a=HEAP[h]!=0?0:1;break;case 1:HEAP[d]=0;a=2;break;case 0:a=_lil_to_string(HEAP[HEAP[i]]);a=_strcmp(a,__str72)!=0?3:4;break;case 4:HEAP[m]=1;a=HEAP[h]==1?5:6;break;case 5:HEAP[d]=0;a=2;break;case 6:a=3;break;case 3:a=_lil_new();HEAP[k]=a;a=HEAP[m]!=
1?7:8;break;case 7:HEAP[j]=HEAP[HEAP[e]+24];a=9;break;case 9:a=HEAP[HEAP[e]+20];a=unSign(HEAP[j],32)<unSign(a,32)?10:11;break;case 10:HEAP[n]=HEAP[HEAP[HEAP[e]+16]+4*HEAP[j]];a=HEAP[HEAP[n]+12]!=0?12:13;break;case 13:a=14;break;case 12:_lil_register(HEAP[k],HEAP[HEAP[n]],HEAP[HEAP[n]+12]);a=14;break;case 14:HEAP[j]=HEAP[j]+1&4294967295;a=9;break;case 11:a=8;break;case 8:a=_lil_parse_value(HEAP[k],HEAP[HEAP[i]+4*HEAP[m]],1);HEAP[l]=a;_lil_free(HEAP[k]);HEAP[d]=HEAP[l];a=2;break;case 2:g=HEAP[d];STACKTOP=
b;return g;default:assert(0,"bad label: "+a)}}_fnc_jaileval.__index__=Runtime.getFunctionIndex(_fnc_jaileval,"_fnc_jaileval");
function _fnc_count(g,f,c){var b=STACKTOP;STACKTOP+=84;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4;a=b+8;var h=b+12,i=b+16,j=b+20;HEAP[e]=g;HEAP[a]=f;HEAP[h]=c;a=HEAP[a]!=0?0:1;break;case 1:a=_alloc_value(__str70);HEAP[d]=a;a=2;break;case 0:a=_lil_subst_to_list(HEAP[e],HEAP[HEAP[h]]);HEAP[i]=a;_sprintf(j,__str71,HEAP[HEAP[i]+4]);_lil_free_list(HEAP[i]);a=_alloc_value(j);HEAP[d]=a;a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,
"bad label: "+a)}}_fnc_count.__index__=Runtime.getFunctionIndex(_fnc_count,"_fnc_count");
function _fnc_index(g,f,c){var b=STACKTOP;STACKTOP+=28;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4;a=b+8;var h=b+12,i=b+16,j=b+20,k=b+24;HEAP[e]=g;HEAP[a]=f;HEAP[h]=c;a=unSign(HEAP[a],32)<unSign(2,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=_lil_subst_to_list(HEAP[e],HEAP[HEAP[h]]);HEAP[i]=a;a=_lil_to_integer(HEAP[HEAP[h]+4])&4294967295;HEAP[j]=a;a=HEAP[HEAP[i]+4];a=unSign(HEAP[j],32)>=unSign(a,32)?3:4;break;case 3:HEAP[k]=0;a=5;
break;case 4:a=_lil_clone_value(HEAP[HEAP[HEAP[i]]+4*HEAP[j]]);HEAP[k]=a;a=5;break;case 5:_lil_free_list(HEAP[i]);HEAP[d]=HEAP[k];a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_index.__index__=Runtime.getFunctionIndex(_fnc_index,"_fnc_index");
function _fnc_indexof(g,f,c){var b=STACKTOP;STACKTOP+=28;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4;a=b+8;var h=b+12,i=b+16,j=b+20,k=b+24;HEAP[e]=g;HEAP[a]=f;HEAP[h]=c;HEAP[k]=0;a=unSign(HEAP[a],32)<unSign(2,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=_lil_subst_to_list(HEAP[e],HEAP[HEAP[h]]);HEAP[i]=a;HEAP[j]=0;a=3;break;case 3:a=HEAP[HEAP[i]+4];a=unSign(HEAP[j],32)<unSign(a,32)?4:5;break;case 4:a=_lil_to_string(HEAP[HEAP[HEAP[i]]+
4*HEAP[j]]);var l=_lil_to_string(HEAP[HEAP[h]+4]);a=_strcmp(a,l)!=0?6:7;break;case 7:a=_lil_alloc_integer(HEAP[j]);HEAP[k]=a;a=5;break;case 6:a=8;break;case 8:HEAP[j]=HEAP[j]+1&4294967295;a=3;break;case 5:_lil_free_list(HEAP[i]);HEAP[d]=HEAP[k];a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_indexof.__index__=Runtime.getFunctionIndex(_fnc_indexof,"_fnc_indexof");
function _fnc_filter(g,f,c){var b=STACKTOP;STACKTOP+=40;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4,h=b+8,i=b+12,j=b+16,k=b+20,l=b+24,m=b+28,n=b+32,o=b+36;HEAP[e]=g;HEAP[h]=f;HEAP[i]=c;HEAP[n]=__str69;HEAP[o]=0;a=unSign(HEAP[h],32)<unSign(1,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=unSign(HEAP[h],32)<unSign(2,32)?3:4;break;case 3:a=_lil_clone_value(HEAP[HEAP[i]]);HEAP[d]=a;a=2;break;case 4:a=unSign(HEAP[h],32)>unSign(2,32)?5:6;
break;case 5:HEAP[o]=1;a=_lil_to_string(HEAP[HEAP[i]]);HEAP[n]=a;a=6;break;case 6:a=_lil_subst_to_list(HEAP[e],HEAP[HEAP[i]+4*HEAP[o]]);HEAP[j]=a;a=_lil_alloc_list();HEAP[k]=a;HEAP[l]=0;a=7;break;case 7:a=HEAP[HEAP[j]+4];a=unSign(HEAP[l],32)<unSign(a,32)?8:9;break;case 8:_lil_set_var(HEAP[e],HEAP[n],HEAP[HEAP[HEAP[j]]+4*HEAP[l]],1);a=_lil_eval_expr(HEAP[e],HEAP[HEAP[i]+4*(HEAP[o]+1&4294967295)]);HEAP[m]=a;a=_lil_to_boolean(HEAP[m])!=0?10:11;break;case 10:a=HEAP[k];var p=_lil_clone_value(HEAP[HEAP[HEAP[j]]+
4*HEAP[l]]);_lil_list_append(a,p);a=11;break;case 11:_lil_free_value(HEAP[m]);a=12;break;case 12:HEAP[l]=HEAP[l]+1&4294967295;a=7;break;case 9:_lil_free_list(HEAP[j]);a=_lil_list_to_value(HEAP[k],1);HEAP[m]=a;_lil_free_list(HEAP[k]);HEAP[d]=HEAP[m];a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_filter.__index__=Runtime.getFunctionIndex(_fnc_filter,"_fnc_filter");
function _fnc_list(g,f,c){var b=STACKTOP;STACKTOP+=24;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b+4,e=b+8,h=b+12,i=b+16,j=b+20;HEAP[b]=g;HEAP[d]=f;HEAP[e]=c;a=_lil_alloc_list();HEAP[h]=a;a=HEAP[j]=0;break;case 0:a=HEAP[d];a=unSign(HEAP[j],32)<unSign(a,32)?1:2;break;case 1:a=HEAP[h];var k=_lil_clone_value(HEAP[HEAP[e]+4*HEAP[j]]);_lil_list_append(a,k);a=3;break;case 3:HEAP[j]=HEAP[j]+1&4294967295;a=0;break;case 2:g=_lil_list_to_value(HEAP[h],
1);HEAP[i]=g;_lil_free_list(HEAP[h]);h=HEAP[i];STACKTOP=b;return h;default:assert(0,"bad label: "+a)}}_fnc_list.__index__=Runtime.getFunctionIndex(_fnc_list,"_fnc_list");
function _fnc_append(g,f,c){var b=STACKTOP;STACKTOP+=40;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4,h=b+8,i=b+12,j=b+16,k=b+20,l=b+24,m=b+28,n=b+32,o=b+36;HEAP[e]=g;HEAP[h]=f;HEAP[i]=c;HEAP[m]=1;HEAP[n]=1;a=unSign(HEAP[h],32)<unSign(2,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=_lil_to_string(HEAP[HEAP[i]]);HEAP[o]=a;a=_strcmp(HEAP[o],__str68)!=0?3:4;break;case 4:a=unSign(HEAP[h],32)<unSign(3,32)?5:6;break;case 5:HEAP[d]=0;a=2;break;
case 6:a=_lil_to_string(HEAP[HEAP[i]+4]);HEAP[o]=a;HEAP[m]=2;HEAP[n]=0;a=3;break;case 3:a=HEAP[e];var p=_lil_get_var(HEAP[e],HEAP[o]);a=_lil_subst_to_list(a,p);HEAP[j]=a;HEAP[l]=HEAP[m];a=7;break;case 7:a=HEAP[h];a=unSign(HEAP[l],32)<unSign(a,32)?8:9;break;case 8:a=HEAP[j];p=_lil_clone_value(HEAP[HEAP[i]+4*HEAP[l]]);_lil_list_append(a,p);a=10;break;case 10:HEAP[l]=HEAP[l]+1&4294967295;a=7;break;case 9:a=_lil_list_to_value(HEAP[j],1);HEAP[k]=a;_lil_free_list(HEAP[j]);_lil_set_var(HEAP[e],HEAP[o],HEAP[k],
HEAP[n]);HEAP[d]=HEAP[k];a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_append.__index__=Runtime.getFunctionIndex(_fnc_append,"_fnc_append");
function _fnc_slice(g,f,c){var b=STACKTOP;STACKTOP+=48;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;var d;a=null;for(d=-1;;)switch(d){case -1:var e=b,h=b+4,i=b+8,j=b+12,k=b+16,l=b+20,m=b+24,n=b+28,o=b+36,p=b+44;HEAP[h]=g;HEAP[i]=f;HEAP[j]=c;d=unSign(HEAP[i],32)<unSign(1,32)?0:1;break;case 0:HEAP[e]=0;d=2;break;case 1:d=unSign(HEAP[i],32)<unSign(2,32)?3:4;break;case 3:d=_lil_clone_value(HEAP[HEAP[j]]);HEAP[e]=d;d=2;break;case 4:d=_lil_to_integer(HEAP[HEAP[j]+4]);HEAP[n]=d;d=HEAP[n]<
0?5:6;break;case 5:HEAP[n]=0;d=6;break;case 6:d=_lil_subst_to_list(HEAP[h],HEAP[HEAP[j]]);HEAP[k]=d;d=unSign(HEAP[i],32)>unSign(2,32)?7:8;break;case 7:var q=_lil_to_integer(HEAP[HEAP[j]+8]);a=7;d=9;break;case 8:var r=HEAP[HEAP[k]+4];a=8;d=9;break;case 9:HEAP[o]=a==7?q:r;d=HEAP[o]>HEAP[HEAP[k]+4]?10:11;break;case 10:HEAP[o]=HEAP[HEAP[k]+4];d=11;break;case 11:d=HEAP[o]<HEAP[n]?12:13;break;case 12:HEAP[o]=HEAP[n];d=13;break;case 13:d=_lil_alloc_list();HEAP[l]=d;HEAP[m]=HEAP[n]&4294967295;d=14;break;
case 14:d=HEAP[o]&4294967295;d=unSign(HEAP[m],32)<unSign(d,32)?15:16;break;case 15:d=HEAP[l];var v=_lil_clone_value(HEAP[HEAP[HEAP[k]]+4*HEAP[m]]);_lil_list_append(d,v);d=17;break;case 17:HEAP[m]=HEAP[m]+1&4294967295;d=14;break;case 16:_lil_free_list(HEAP[k]);d=_lil_list_to_value(HEAP[l],1);HEAP[p]=d;_lil_free_list(HEAP[l]);HEAP[e]=HEAP[p];d=2;break;case 2:g=HEAP[e];STACKTOP=b;return g;default:assert(0,"bad label: "+d)}}_fnc_slice.__index__=Runtime.getFunctionIndex(_fnc_slice,"_fnc_slice");
function _fnc_subst(g,f,c){var b=STACKTOP;STACKTOP+=16;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4;a=b+8;var h=b+12;HEAP[e]=g;HEAP[a]=f;HEAP[h]=c;a=unSign(HEAP[a],32)<unSign(1,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=_lil_subst_to_value(HEAP[e],HEAP[HEAP[h]]);HEAP[d]=a;a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_subst.__index__=Runtime.getFunctionIndex(_fnc_subst,"_fnc_subst");
function _fnc_concat(g,f,c){var b=STACKTOP;STACKTOP+=32;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4,h=b+8,i=b+12,j=b+16,k=b+20,l=b+24,m=b+28;HEAP[e]=g;HEAP[h]=f;HEAP[i]=c;a=unSign(HEAP[h],32)<unSign(1,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=_lil_alloc_string(__str4);HEAP[k]=a;HEAP[m]=0;a=3;break;case 3:a=HEAP[h];a=unSign(HEAP[m],32)<unSign(a,32)?4:5;break;case 4:a=_lil_subst_to_list(HEAP[e],HEAP[HEAP[i]+4*HEAP[m]]);HEAP[j]=a;
a=_lil_list_to_value(HEAP[j],1);HEAP[l]=a;_lil_free_list(HEAP[j]);_lil_append_val(HEAP[k],HEAP[l]);_lil_free_value(HEAP[l]);a=6;break;case 6:HEAP[m]=HEAP[m]+1&4294967295;a=3;break;case 5:HEAP[d]=HEAP[k];a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_concat.__index__=Runtime.getFunctionIndex(_fnc_concat,"_fnc_concat");
function _fnc_foreach(g,f,c){var b=STACKTOP;STACKTOP+=48;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4,h=b+8,i=b+12,j=b+16,k=b+20,l=b+24,m=b+28,n=b+32,o=b+36,p=b+40,q=b+44;HEAP[e]=g;HEAP[h]=f;HEAP[i]=c;HEAP[n]=0;HEAP[o]=1;HEAP[p]=__str67;a=unSign(HEAP[h],32)<unSign(2,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=HEAP[h]==3?3:4;break;case 3:a=_lil_to_string(HEAP[HEAP[i]]);HEAP[p]=a;HEAP[n]=1;HEAP[o]=2;a=4;break;case 4:a=_lil_alloc_list();
HEAP[k]=a;a=_lil_subst_to_list(HEAP[e],HEAP[HEAP[i]+4*HEAP[n]]);HEAP[j]=a;HEAP[m]=0;a=5;break;case 5:a=HEAP[HEAP[j]+4];a=unSign(HEAP[m],32)<unSign(a,32)?6:7;break;case 6:_lil_set_var(HEAP[e],HEAP[p],HEAP[HEAP[HEAP[j]]+4*HEAP[m]],1);a=_lil_parse_value(HEAP[e],HEAP[HEAP[i]+4*HEAP[o]],0);HEAP[q]=a;a=HEAP[HEAP[q]]!=0?8:9;break;case 8:_lil_list_append(HEAP[k],HEAP[q]);a=10;break;case 9:_lil_free_value(HEAP[q]);a=10;break;case 10:a=HEAP[HEAP[e]+56]!=0?11:12;break;case 11:a=7;break;case 12:a=13;break;case 13:HEAP[m]=
HEAP[m]+1&4294967295;a=5;break;case 7:a=_lil_list_to_value(HEAP[k],1);HEAP[l]=a;_lil_free_list(HEAP[j]);_lil_free_list(HEAP[k]);HEAP[d]=HEAP[l];a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_foreach.__index__=Runtime.getFunctionIndex(_fnc_foreach,"_fnc_foreach");
function _fnc_return(g,f,c){var b=STACKTOP;STACKTOP+=12;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;var d;a=null;for(d=-1;;)switch(d){case -1:var e=b;d=b+4;var h=b+8;HEAP[e]=g;HEAP[d]=f;HEAP[h]=c;HEAP[HEAP[HEAP[e]+40]+24]=1;_lil_free_value(HEAP[HEAP[HEAP[e]+40]+20]);d=unSign(HEAP[d],32)<unSign(1,32)?0:1;break;case 0:a=0;d=2;break;case 1:var i=_lil_clone_value(HEAP[HEAP[h]]);a=1;d=2;break;case 2:HEAP[HEAP[HEAP[e]+40]+20]=a==0?0:i;STACKTOP=b;return 0;default:assert(0,"bad label: "+
d)}}_fnc_return.__index__=Runtime.getFunctionIndex(_fnc_return,"_fnc_return");
function _fnc_expr(g,f,c){var b=STACKTOP;STACKTOP+=28;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4,h=b+8,i=b+12,j=b+16,k=b+20,l=b+24;HEAP[e]=g;HEAP[h]=f;HEAP[i]=c;a=HEAP[h]==1?0:1;break;case 0:a=_lil_eval_expr(HEAP[e],HEAP[HEAP[i]]);HEAP[d]=a;a=2;break;case 1:a=unSign(HEAP[h],32)>unSign(1,32)?3:4;break;case 3:a=_alloc_value(0);HEAP[j]=a;HEAP[l]=0;a=5;break;case 5:a=HEAP[h];a=unSign(HEAP[l],32)<unSign(a,32)?6:7;break;case 6:a=HEAP[l]!=0?
8:9;break;case 8:_lil_append_char(HEAP[j],32);a=9;break;case 9:_lil_append_val(HEAP[j],HEAP[HEAP[i]+4*HEAP[l]]);a=10;break;case 10:HEAP[l]=HEAP[l]+1&4294967295;a=5;break;case 7:a=_lil_eval_expr(HEAP[e],HEAP[j]);HEAP[k]=a;_lil_free_value(HEAP[j]);HEAP[d]=HEAP[k];a=2;break;case 4:HEAP[d]=0;a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_expr.__index__=Runtime.getFunctionIndex(_fnc_expr,"_fnc_expr");
function _fnc_inc(g,f,c){var b=STACKTOP;STACKTOP+=16;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;var d;a=null;for(d=-1;;)switch(d){case -1:var e=b,h=b+4,i=b+8,j=b+12;HEAP[h]=g;HEAP[i]=f;HEAP[j]=c;d=unSign(HEAP[i],32)<unSign(1,32)?0:1;break;case 0:HEAP[e]=0;d=2;break;case 1:var k=HEAP[h],l=_lil_to_string(HEAP[HEAP[j]]);d=unSign(HEAP[i],32)>unSign(1,32)?3:4;break;case 3:var m=_lil_to_double(HEAP[HEAP[j]+4]);a=3;d=5;break;case 4:a=4;d=5;break;case 5:d=_real_inc(k,l,a==3?m:1);HEAP[e]=
d;d=2;break;case 2:g=HEAP[e];STACKTOP=b;return g;default:assert(0,"bad label: "+d)}}_fnc_inc.__index__=Runtime.getFunctionIndex(_fnc_inc,"_fnc_inc");
function _fnc_dec(g,f,c){var b=STACKTOP;STACKTOP+=16;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;var d;a=null;for(d=-1;;)switch(d){case -1:var e=b,h=b+4,i=b+8,j=b+12;HEAP[h]=g;HEAP[i]=f;HEAP[j]=c;d=unSign(HEAP[i],32)<unSign(1,32)?0:1;break;case 0:HEAP[e]=0;d=2;break;case 1:var k=HEAP[h],l=_lil_to_string(HEAP[HEAP[j]]);d=unSign(HEAP[i],32)>unSign(1,32)?3:4;break;case 3:var m=_lil_to_double(HEAP[HEAP[j]+4]);a=3;d=5;break;case 4:a=4;d=5;break;case 5:d=_real_inc(k,l,0-(a==3?m:1));
HEAP[e]=d;d=2;break;case 2:g=HEAP[e];STACKTOP=b;return g;default:assert(0,"bad label: "+d)}}_fnc_dec.__index__=Runtime.getFunctionIndex(_fnc_dec,"_fnc_dec");
function _fnc_read(g,f,c){var b=STACKTOP;STACKTOP+=36;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4;a=b+8;var h=b+12,i=b+16,j=b+20,k=b+24,l=b+28,m=b+32;HEAP[e]=g;HEAP[a]=f;HEAP[h]=c;a=unSign(HEAP[a],32)<unSign(1,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=HEAP[HEAP[e]+68+8]!=0?3:4;break;case 3:HEAP[m]=HEAP[HEAP[e]+68+8];a=HEAP[m];var n=HEAP[e],o=_lil_to_string(HEAP[HEAP[h]]);a=FUNCTION_TABLE[a](n,o);HEAP[k]=a;a=5;break;case 4:a=_lil_to_string(HEAP[HEAP[h]]);
a=_fopen(a,__str62);HEAP[i]=a;a=HEAP[i]!=0?6:7;break;case 7:HEAP[d]=0;a=2;break;case 6:_fseek(HEAP[i],0,2);a=_ftell(HEAP[i]);HEAP[j]=a;_fseek(HEAP[i],0,0);a=_malloc(HEAP[j]+1&4294967295);HEAP[k]=a;_fread(HEAP[k],1,HEAP[j],HEAP[i]);HEAP[HEAP[k]+HEAP[j]]=0;_fclose(HEAP[i]);a=5;break;case 5:a=_lil_alloc_string(HEAP[k]);HEAP[l]=a;_free(HEAP[k]);HEAP[d]=HEAP[l];a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_read.__index__=Runtime.getFunctionIndex(_fnc_read,"_fnc_read");
function _fnc_store(g,f,c){var b=STACKTOP;STACKTOP+=28;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4;a=b+8;var h=b+12,i=b+16,j=b+20,k=b+24;HEAP[e]=g;HEAP[a]=f;HEAP[h]=c;a=unSign(HEAP[a],32)<unSign(2,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=HEAP[HEAP[e]+68+12]!=0?3:4;break;case 3:HEAP[k]=HEAP[HEAP[e]+68+12];a=HEAP[k];var l=HEAP[e],m=_lil_to_string(HEAP[HEAP[h]]),n=_lil_to_string(HEAP[HEAP[h]+4]);FUNCTION_TABLE[a](l,m,n);a=5;break;
case 4:a=_lil_to_string(HEAP[HEAP[h]]);a=_fopen(a,__str66);HEAP[i]=a;a=HEAP[i]!=0?6:7;break;case 7:HEAP[d]=0;a=2;break;case 6:a=_lil_to_string(HEAP[HEAP[h]+4]);HEAP[j]=a;a=HEAP[j];l=_strlen(HEAP[j]);_fwrite(a,1,l,HEAP[i]);_fclose(HEAP[i]);a=5;break;case 5:a=_lil_clone_value(HEAP[HEAP[h]+4]);HEAP[d]=a;a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_store.__index__=Runtime.getFunctionIndex(_fnc_store,"_fnc_store");
function _fnc_if(g,f,c){var b=STACKTOP;STACKTOP+=36;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4,h=b+8,i=b+12,j=b+16,k=b+20,l=b+24,m=b+28,n=b+32;HEAP[e]=g;HEAP[h]=f;HEAP[i]=c;HEAP[k]=0;HEAP[l]=0;HEAP[m]=0;a=unSign(HEAP[h],32)<unSign(1,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=_lil_to_string(HEAP[HEAP[i]]);a=_strcmp(a,__str65)!=0?3:4;break;case 4:HEAP[m]=1;HEAP[l]=1;a=3;break;case 3:a=HEAP[l]+2&4294967295;a=unSign(HEAP[h],32)<unSign(a,
32)?5:6;break;case 5:HEAP[d]=0;a=2;break;case 6:a=_lil_eval_expr(HEAP[e],HEAP[HEAP[i]+4*HEAP[l]]);HEAP[j]=a;a=HEAP[j]!=0?7:8;break;case 7:a=HEAP[HEAP[e]+56]!=0?8:9;break;case 8:HEAP[d]=0;a=2;break;case 9:a=_lil_to_boolean(HEAP[j]);HEAP[n]=a;a=HEAP[m]!=0?10:11;break;case 10:HEAP[n]=HEAP[n]!=0^1;a=11;break;case 11:a=HEAP[n]!=0?12:13;break;case 12:a=_lil_parse_value(HEAP[e],HEAP[HEAP[i]+4*(HEAP[l]+1&4294967295)],0);HEAP[k]=a;a=14;break;case 13:a=HEAP[l]+2&4294967295;a=unSign(HEAP[h],32)>unSign(a,32)?
15:16;break;case 15:a=_lil_parse_value(HEAP[e],HEAP[HEAP[i]+4*(HEAP[l]+2&4294967295)],0);HEAP[k]=a;a=16;break;case 16:a=14;break;case 14:_lil_free_value(HEAP[j]);HEAP[d]=HEAP[k];a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_if.__index__=Runtime.getFunctionIndex(_fnc_if,"_fnc_if");
function _fnc_while(g,f,c){var b=STACKTOP;STACKTOP+=36;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4,h=b+8,i=b+12,j=b+16,k=b+20,l=b+24,m=b+28,n=b+32;HEAP[e]=g;HEAP[h]=f;HEAP[i]=c;HEAP[k]=0;HEAP[l]=0;HEAP[m]=0;a=unSign(HEAP[h],32)<unSign(1,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=_lil_to_string(HEAP[HEAP[i]]);a=_strcmp(a,__str65)!=0?3:4;break;case 4:HEAP[m]=1;HEAP[l]=1;a=3;break;case 3:a=HEAP[l]+2&4294967295;a=unSign(HEAP[h],32)<
unSign(a,32)?5:6;break;case 5:HEAP[d]=0;a=2;break;case 6:a=7;break;case 7:a=HEAP[HEAP[e]+56]!=0^1?8:9;break;case 8:a=_lil_eval_expr(HEAP[e],HEAP[HEAP[i]+4*HEAP[l]]);HEAP[j]=a;a=HEAP[j]!=0?10:11;break;case 10:a=HEAP[HEAP[e]+56]!=0?11:12;break;case 11:HEAP[d]=0;a=2;break;case 12:a=_lil_to_boolean(HEAP[j]);HEAP[n]=a;a=HEAP[m]!=0?13:14;break;case 13:HEAP[n]=HEAP[n]!=0^1;a=14;break;case 14:a=HEAP[n]!=0?15:16;break;case 16:_lil_free_value(HEAP[j]);a=9;break;case 15:a=HEAP[k]!=0?17:18;break;case 17:_lil_free_value(HEAP[k]);
a=18;break;case 18:a=_lil_parse_value(HEAP[e],HEAP[HEAP[i]+4*(HEAP[l]+1&4294967295)],0);HEAP[k]=a;_lil_free_value(HEAP[j]);a=7;break;case 9:HEAP[d]=HEAP[k];a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_while.__index__=Runtime.getFunctionIndex(_fnc_while,"_fnc_while");
function _fnc_for(g,f,c){var b=STACKTOP;STACKTOP+=24;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4;a=b+8;var h=b+12,i=b+16,j=b+20;HEAP[e]=g;HEAP[a]=f;HEAP[h]=c;HEAP[j]=0;a=unSign(HEAP[a],32)<unSign(4,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=_lil_parse_value(HEAP[e],HEAP[HEAP[h]],0);_lil_free_value(a);a=3;break;case 3:a=HEAP[HEAP[e]+56]!=0^1?4:5;break;case 4:a=_lil_eval_expr(HEAP[e],HEAP[HEAP[h]+4]);HEAP[i]=a;a=HEAP[i]!=0?6:7;break;
case 6:a=HEAP[HEAP[e]+56]!=0?7:8;break;case 7:HEAP[d]=0;a=2;break;case 8:a=_lil_to_boolean(HEAP[i])!=0?9:10;break;case 10:_lil_free_value(HEAP[i]);a=5;break;case 9:a=HEAP[j]!=0?11:12;break;case 11:_lil_free_value(HEAP[j]);a=12;break;case 12:a=_lil_parse_value(HEAP[e],HEAP[HEAP[h]+12],0);HEAP[j]=a;_lil_free_value(HEAP[i]);a=_lil_parse_value(HEAP[e],HEAP[HEAP[h]+8],0);_lil_free_value(a);a=3;break;case 5:HEAP[d]=HEAP[j];a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}
_fnc_for.__index__=Runtime.getFunctionIndex(_fnc_for,"_fnc_for");
function _fnc_char(g,f,c){var b=STACKTOP;STACKTOP+=18;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b;a=b+8;var e=b+12,h=b+16;HEAP[b+4]=g;HEAP[a]=f;HEAP[e]=c;a=HEAP[a]!=0?0:1;break;case 1:HEAP[d]=0;a=2;break;case 0:a=_lil_to_integer(HEAP[HEAP[e]])&255;HEAP[h]=a;HEAP[h+1]=0;a=_lil_alloc_string(h);HEAP[d]=a;a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_char.__index__=Runtime.getFunctionIndex(_fnc_char,"_fnc_char");
function _fnc_charat(g,f,c){var b=STACKTOP;STACKTOP+=26;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b;a=b+8;var e=b+12,h=b+16,i=b+20,j=b+22;HEAP[b+4]=g;HEAP[a]=f;HEAP[e]=c;a=unSign(HEAP[a],32)<unSign(2,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=_lil_to_string(HEAP[HEAP[e]]);HEAP[j]=a;a=_lil_to_integer(HEAP[HEAP[e]+4])&4294967295;HEAP[h]=a;a=HEAP[h];var k=_strlen(HEAP[j]);a=unSign(a,32)>=unSign(k,32)?3:4;break;case 3:HEAP[d]=0;a=2;break;
case 4:HEAP[i]=HEAP[HEAP[j]+HEAP[h]];HEAP[i+1]=0;a=_lil_alloc_string(i);HEAP[d]=a;a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_charat.__index__=Runtime.getFunctionIndex(_fnc_charat,"_fnc_charat");
function _fnc_codeat(g,f,c){var b=STACKTOP;STACKTOP+=24;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b;a=b+8;var e=b+12,h=b+16,i=b+20;HEAP[b+4]=g;HEAP[a]=f;HEAP[e]=c;a=unSign(HEAP[a],32)<unSign(2,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=_lil_to_string(HEAP[HEAP[e]]);HEAP[i]=a;a=_lil_to_integer(HEAP[HEAP[e]+4])&4294967295;HEAP[h]=a;a=HEAP[h];var j=_strlen(HEAP[i]);a=unSign(a,32)>=unSign(j,32)?3:4;break;case 3:HEAP[d]=0;a=2;break;case 4:a=
_lil_alloc_integer(HEAP[HEAP[i]+HEAP[h]]);HEAP[d]=a;a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_codeat.__index__=Runtime.getFunctionIndex(_fnc_codeat,"_fnc_codeat");
function _fnc_substr(g,f,c){var b=STACKTOP;STACKTOP+=40;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;var d;a=null;for(d=-1;;)switch(d){case -1:var e=b,h=b+8,i=b+12,j=b+16,k=b+20,l=b+24,m=b+28,n=b+32,o=b+36;HEAP[b+4]=g;HEAP[h]=f;HEAP[i]=c;d=unSign(HEAP[h],32)<unSign(2,32)?0:1;break;case 0:HEAP[e]=0;d=2;break;case 1:d=_lil_to_string(HEAP[HEAP[i]]);HEAP[j]=d;d=HEAP[HEAP[j]]!=0?3:4;break;case 4:HEAP[e]=0;d=2;break;case 3:d=_strlen(HEAP[j]);HEAP[o]=d;d=_lil_to_string(HEAP[HEAP[i]+4]);
d=_atoll(d)&4294967295;HEAP[l]=d;d=unSign(HEAP[h],32)>unSign(2,32)?5:6;break;case 5:var p=_lil_to_string(HEAP[HEAP[i]+8]);p=_atoll(p)&4294967295;a=5;d=7;break;case 6:var q=HEAP[o];a=6;d=7;break;case 7:HEAP[m]=a==5?p:q;d=HEAP[o];d=unSign(HEAP[m],32)>unSign(d,32)?8:9;break;case 8:HEAP[m]=HEAP[o];d=9;break;case 9:d=HEAP[m];d=unSign(HEAP[l],32)>=unSign(d,32)?10:11;break;case 10:HEAP[e]=0;d=2;break;case 11:d=_lil_alloc_string(__str4);HEAP[k]=d;HEAP[n]=HEAP[l];d=12;break;case 12:d=HEAP[m];d=unSign(HEAP[n],
32)<unSign(d,32)?13:14;break;case 13:_lil_append_char(HEAP[k],HEAP[HEAP[j]+HEAP[n]]);d=15;break;case 15:HEAP[n]=HEAP[n]+1&4294967295;d=12;break;case 14:HEAP[e]=HEAP[k];d=2;break;case 2:g=HEAP[e];STACKTOP=b;return g;default:assert(0,"bad label: "+d)}}_fnc_substr.__index__=Runtime.getFunctionIndex(_fnc_substr,"_fnc_substr");
function _fnc_strpos(g,f,c){var b=STACKTOP;STACKTOP+=28;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+8,h=b+12,i=b+16,j=b+20,k=b+24;HEAP[b+4]=g;HEAP[e]=f;HEAP[h]=c;HEAP[k]=0;a=unSign(HEAP[e],32)<unSign(2,32)?0:1;break;case 0:a=_lil_alloc_integer(-1);HEAP[d]=a;a=2;break;case 1:a=_lil_to_string(HEAP[HEAP[h]]);HEAP[i]=a;a=unSign(HEAP[e],32)>unSign(2,32)?3:4;break;case 3:a=_lil_to_string(HEAP[HEAP[h]+8]);a=_atoll(a)&4294967295;HEAP[k]=a;a=HEAP[k];
var l=_strlen(HEAP[i]);a=unSign(a,32)>=unSign(l,32)?5:6;break;case 5:a=_lil_alloc_integer(-1);HEAP[d]=a;a=2;break;case 6:a=4;break;case 4:a=HEAP[i]+HEAP[k];l=_lil_to_string(HEAP[HEAP[h]+4]);a=_strstr(a,l);HEAP[j]=a;a=HEAP[j]!=0?7:8;break;case 8:a=_lil_alloc_integer(-1);HEAP[d]=a;a=2;break;case 7:a=_lil_alloc_integer(HEAP[j]-HEAP[i]&4294967295);HEAP[d]=a;a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_strpos.__index__=Runtime.getFunctionIndex(_fnc_strpos,"_fnc_strpos");
function _fnc_length(g,f,c){var b=STACKTOP;STACKTOP+=20;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b+4,e=b+8,h=b+12,i=b+16;HEAP[b]=g;HEAP[d]=f;HEAP[e]=c;HEAP[i]=0;a=HEAP[h]=0;break;case 0:a=HEAP[d];a=unSign(HEAP[h],32)<unSign(a,32)?1:2;break;case 1:a=HEAP[h]!=0?3:4;break;case 3:HEAP[i]=HEAP[i]+1&4294967295;a=4;break;case 4:a=_lil_to_string(HEAP[HEAP[e]+4*HEAP[h]]);a=_strlen(a);HEAP[i]=HEAP[i]+a&4294967295;a=5;break;case 5:HEAP[h]=HEAP[h]+1&4294967295;
a=0;break;case 2:g=_lil_alloc_integer(HEAP[i]);STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_length.__index__=Runtime.getFunctionIndex(_fnc_length,"_fnc_length");
function _fnc_trim(g,f,c){var b=STACKTOP;STACKTOP+=16;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;var d;a=null;for(d=-1;;)switch(d){case -1:var e=b,h=b+8,i=b+12;HEAP[b+4]=g;HEAP[h]=f;HEAP[i]=c;d=HEAP[h]!=0?0:1;break;case 1:HEAP[e]=0;d=2;break;case 0:var j=_lil_to_string(HEAP[HEAP[i]]);d=unSign(HEAP[h],32)<unSign(2,32)?3:4;break;case 3:a=3;d=5;break;case 4:var k=_lil_to_string(HEAP[HEAP[i]+4]);a=4;d=5;break;case 5:d=_real_trim(j,a==3?__str64:k,1,1);HEAP[e]=d;d=2;break;case 2:g=
HEAP[e];STACKTOP=b;return g;default:assert(0,"bad label: "+d)}}_fnc_trim.__index__=Runtime.getFunctionIndex(_fnc_trim,"_fnc_trim");
function _fnc_ltrim(g,f,c){var b=STACKTOP;STACKTOP+=16;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;var d;a=null;for(d=-1;;)switch(d){case -1:var e=b,h=b+8,i=b+12;HEAP[b+4]=g;HEAP[h]=f;HEAP[i]=c;d=HEAP[h]!=0?0:1;break;case 1:HEAP[e]=0;d=2;break;case 0:var j=_lil_to_string(HEAP[HEAP[i]]);d=unSign(HEAP[h],32)<unSign(2,32)?3:4;break;case 3:a=3;d=5;break;case 4:var k=_lil_to_string(HEAP[HEAP[i]+4]);a=4;d=5;break;case 5:d=_real_trim(j,a==3?__str64:k,1,0);HEAP[e]=d;d=2;break;case 2:g=
HEAP[e];STACKTOP=b;return g;default:assert(0,"bad label: "+d)}}_fnc_ltrim.__index__=Runtime.getFunctionIndex(_fnc_ltrim,"_fnc_ltrim");
function _fnc_rtrim(g,f,c){var b=STACKTOP;STACKTOP+=16;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;var d;a=null;for(d=-1;;)switch(d){case -1:var e=b,h=b+8,i=b+12;HEAP[b+4]=g;HEAP[h]=f;HEAP[i]=c;d=HEAP[h]!=0?0:1;break;case 1:HEAP[e]=0;d=2;break;case 0:var j=_lil_to_string(HEAP[HEAP[i]]);d=unSign(HEAP[h],32)<unSign(2,32)?3:4;break;case 3:a=3;d=5;break;case 4:var k=_lil_to_string(HEAP[HEAP[i]+4]);a=4;d=5;break;case 5:d=_real_trim(j,a==3?__str64:k,0,1);HEAP[e]=d;d=2;break;case 2:g=
HEAP[e];STACKTOP=b;return g;default:assert(0,"bad label: "+d)}}_fnc_rtrim.__index__=Runtime.getFunctionIndex(_fnc_rtrim,"_fnc_rtrim");
function _fnc_strcmp(g,f,c){var b=STACKTOP;STACKTOP+=16;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b;a=b+8;var e=b+12;HEAP[b+4]=g;HEAP[a]=f;HEAP[e]=c;a=unSign(HEAP[a],32)<unSign(2,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=_lil_to_string(HEAP[HEAP[e]]);var h=_lil_to_string(HEAP[HEAP[e]+4]);a=_strcmp(a,h);a=_lil_alloc_integer(a);HEAP[d]=a;a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}
_fnc_strcmp.__index__=Runtime.getFunctionIndex(_fnc_strcmp,"_fnc_strcmp");
function _fnc_streq(g,f,c){var b=STACKTOP;STACKTOP+=16;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b;a=b+8;var e=b+12;HEAP[b+4]=g;HEAP[a]=f;HEAP[e]=c;a=unSign(HEAP[a],32)<unSign(2,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=_lil_to_string(HEAP[HEAP[e]]);var h=_lil_to_string(HEAP[HEAP[e]+4]);a=_strcmp(a,h)!=0?0:1;a=_lil_alloc_integer(a);HEAP[d]=a;a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}
_fnc_streq.__index__=Runtime.getFunctionIndex(_fnc_streq,"_fnc_streq");
function _fnc_repstr(g,f,c){var b=STACKTOP;STACKTOP+=56;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+8,h=b+12,i=b+16,j=b+20,k=b+24,l=b+28,m=b+32,n=b+36,o=b+40,p=b+44,q=b+48,r=b+52;HEAP[b+4]=g;HEAP[e]=f;HEAP[h]=c;a=unSign(HEAP[e],32)<unSign(1,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=unSign(HEAP[e],32)<unSign(3,32)?3:4;break;case 3:a=_lil_clone_value(HEAP[HEAP[h]]);HEAP[d]=a;a=2;break;case 4:a=_lil_to_string(HEAP[HEAP[h]+4]);HEAP[i]=
a;a=_lil_to_string(HEAP[HEAP[h]+8]);HEAP[j]=a;a=HEAP[HEAP[i]]!=0?5:6;break;case 6:HEAP[d]=0;a=2;break;case 5:a=_lil_to_string(HEAP[HEAP[h]]);a=_strclone(a);HEAP[k]=a;a=_strlen(HEAP[k]);HEAP[p]=a;a=_strlen(HEAP[i]);HEAP[n]=a;a=_strlen(HEAP[j]);HEAP[o]=a;a=7;break;case 7:a=_strstr(HEAP[k],HEAP[i]);HEAP[l]=a;a=a!=0?8:9;break;case 8:a=_malloc(((HEAP[p]-HEAP[n]&4294967295)+HEAP[o]&4294967295)+1&4294967295);HEAP[r]=a;HEAP[m]=HEAP[l]-HEAP[k]&4294967295;a=HEAP[m]!=0?10:11;break;case 10:_llvm_memcpy_p0i8_p0i8_i32(HEAP[r],
HEAP[k],HEAP[m],1,0);a=11;break;case 11:_llvm_memcpy_p0i8_p0i8_i32(HEAP[r]+HEAP[m],HEAP[j],HEAP[o],1,0);_llvm_memcpy_p0i8_p0i8_i32(HEAP[r]+HEAP[m]+HEAP[o],HEAP[k]+HEAP[m]+HEAP[n],(HEAP[p]-HEAP[m]&4294967295)-HEAP[n]&4294967295,1,0);HEAP[p]=(HEAP[p]-HEAP[n]&4294967295)+HEAP[o]&4294967295;_free(HEAP[k]);HEAP[k]=HEAP[r];HEAP[HEAP[k]+HEAP[p]]=0;a=7;break;case 9:a=_lil_alloc_string(HEAP[k]);HEAP[q]=a;_free(HEAP[k]);HEAP[d]=HEAP[q];a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+
a)}}_fnc_repstr.__index__=Runtime.getFunctionIndex(_fnc_repstr,"_fnc_repstr");
function _fnc_split(g,f,c){var b=STACKTOP;STACKTOP+=36;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+8,h=b+12,i=b+16,j=b+20,k=b+24,l=b+28,m=b+32;HEAP[b+4]=g;HEAP[e]=f;HEAP[h]=c;HEAP[j]=__str63;a=HEAP[e]==0?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=unSign(HEAP[e],32)>unSign(1,32)?3:4;break;case 3:a=_lil_to_string(HEAP[HEAP[h]+4]);HEAP[j]=a;a=HEAP[j]!=0?5:6;break;case 6:a=_lil_clone_value(HEAP[HEAP[h]]);HEAP[d]=a;a=2;break;case 5:a=4;break;
case 4:a=_lil_alloc_string(__str4);HEAP[l]=a;a=_lil_to_string(HEAP[HEAP[h]]);HEAP[m]=a;a=_lil_alloc_list();HEAP[i]=a;HEAP[k]=0;a=7;break;case 7:a=HEAP[HEAP[m]+HEAP[k]]!=0?8:9;break;case 8:a=_strchr(HEAP[j],HEAP[HEAP[m]+HEAP[k]])!=0?10:11;break;case 10:_lil_list_append(HEAP[i],HEAP[l]);a=_lil_alloc_string(__str4);HEAP[l]=a;a=12;break;case 11:_lil_append_char(HEAP[l],HEAP[HEAP[m]+HEAP[k]]);a=12;break;case 12:a=13;break;case 13:HEAP[k]=HEAP[k]+1&4294967295;a=7;break;case 9:_lil_list_append(HEAP[i],HEAP[l]);
a=_lil_list_to_value(HEAP[i],1);HEAP[l]=a;_lil_free_list(HEAP[i]);HEAP[d]=HEAP[l];a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_split.__index__=Runtime.getFunctionIndex(_fnc_split,"_fnc_split");
function _fnc_try(g,f,c){var b=STACKTOP;STACKTOP+=20;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4,h=b+8,i=b+12,j=b+16;HEAP[e]=g;HEAP[h]=f;HEAP[i]=c;a=unSign(HEAP[h],32)<unSign(1,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=HEAP[HEAP[e]+56]!=0?3:4;break;case 3:HEAP[d]=0;a=2;break;case 4:a=_lil_parse_value(HEAP[e],HEAP[HEAP[i]],0);HEAP[j]=a;a=HEAP[HEAP[e]+56]!=0?5:6;break;case 5:HEAP[HEAP[e]+56]=0;_lil_free_value(HEAP[j]);a=unSign(HEAP[h],
32)>unSign(1,32)?7:8;break;case 7:a=_lil_parse_value(HEAP[e],HEAP[HEAP[i]+4],0);HEAP[j]=a;a=9;break;case 8:HEAP[j]=0;a=9;break;case 9:a=6;break;case 6:HEAP[d]=HEAP[j];a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_try.__index__=Runtime.getFunctionIndex(_fnc_try,"_fnc_try");
function _fnc_error(g,f,c){var b=STACKTOP;STACKTOP+=12;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;var d;a=null;for(d=-1;;)switch(d){case -1:var e=b;d=b+4;var h=b+8;HEAP[e]=g;HEAP[d]=f;HEAP[h]=c;e=HEAP[e];d=unSign(HEAP[d],32)>unSign(0,32)?0:1;break;case 0:var i=_lil_to_string(HEAP[HEAP[h]]);a=0;d=2;break;case 1:a=1;d=2;break;case 2:_lil_set_error(e,a==0?i:0);STACKTOP=b;return 0;default:assert(0,"bad label: "+d)}}_fnc_error.__index__=Runtime.getFunctionIndex(_fnc_error,"_fnc_error");
function _fnc_exit(g,f,c){var b=STACKTOP;STACKTOP+=16;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;var d=null;for(a=-1;;)switch(a){case -1:var e=b,h=b+4,i=b+8,j=b+12;HEAP[e]=g;HEAP[h]=f;HEAP[i]=c;a=HEAP[HEAP[e]+68]!=0?0:1;break;case 0:HEAP[j]=HEAP[HEAP[e]+68];var k=HEAP[j],l=HEAP[e];a=unSign(HEAP[h],32)>unSign(0,32)?2:3;break;case 2:var m=HEAP[HEAP[i]];d=2;a=4;break;case 3:d=3;a=4;break;case 4:FUNCTION_TABLE[k](l,d==2?m:0);a=1;break;case 1:STACKTOP=b;return 0;default:assert(0,"bad label: "+
a)}}_fnc_exit.__index__=Runtime.getFunctionIndex(_fnc_exit,"_fnc_exit");
function _fnc_source(g,f,c){var b=STACKTOP;STACKTOP+=40;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4;a=b+8;var h=b+12,i=b+16,j=b+20,k=b+24,l=b+28,m=b+32,n=b+36;HEAP[e]=g;HEAP[a]=f;HEAP[h]=c;a=unSign(HEAP[a],32)<unSign(1,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=HEAP[HEAP[e]+68+16]!=0?3:4;break;case 3:HEAP[m]=HEAP[HEAP[e]+68+16];a=HEAP[m];var o=HEAP[e],p=_lil_to_string(HEAP[HEAP[h]]);a=FUNCTION_TABLE[a](o,p);HEAP[k]=a;a=5;break;
case 4:a=HEAP[HEAP[e]+68+8]!=0?6:7;break;case 6:HEAP[n]=HEAP[HEAP[e]+68+8];a=HEAP[n];o=HEAP[e];p=_lil_to_string(HEAP[HEAP[h]]);a=FUNCTION_TABLE[a](o,p);HEAP[k]=a;a=8;break;case 7:a=_lil_to_string(HEAP[HEAP[h]]);a=_fopen(a,__str62);HEAP[i]=a;a=HEAP[i]!=0?9:10;break;case 10:HEAP[d]=0;a=2;break;case 9:_fseek(HEAP[i],0,2);a=_ftell(HEAP[i]);HEAP[j]=a;_fseek(HEAP[i],0,0);a=_malloc(HEAP[j]+1&4294967295);HEAP[k]=a;_fread(HEAP[k],1,HEAP[j],HEAP[i]);HEAP[HEAP[k]+HEAP[j]]=0;_fclose(HEAP[i]);a=8;break;case 8:a=
5;break;case 5:a=_lil_parse(HEAP[e],HEAP[k],0,0);HEAP[l]=a;_free(HEAP[k]);HEAP[d]=HEAP[l];a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_source.__index__=Runtime.getFunctionIndex(_fnc_source,"_fnc_source");
function _fnc_lmap(g,f,c){var b=STACKTOP;STACKTOP+=24;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4,h=b+8,i=b+12,j=b+16,k=b+20;HEAP[e]=g;HEAP[h]=f;HEAP[i]=c;a=unSign(HEAP[h],32)<unSign(2,32)?0:1;break;case 0:HEAP[d]=0;a=2;break;case 1:a=_lil_subst_to_list(HEAP[e],HEAP[HEAP[i]]);HEAP[j]=a;HEAP[k]=1;a=3;break;case 3:a=HEAP[h];a=unSign(HEAP[k],32)<unSign(a,32)?4:5;break;case 4:a=HEAP[e];var l=_lil_to_string(HEAP[HEAP[i]+4*HEAP[k]]),m=_lil_list_get(HEAP[j],
HEAP[k]-1&4294967295);_lil_set_var(a,l,m,1);a=6;break;case 6:HEAP[k]=HEAP[k]+1&4294967295;a=3;break;case 5:_lil_free_list(HEAP[j]);HEAP[d]=0;a=2;break;case 2:g=HEAP[d];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_fnc_lmap.__index__=Runtime.getFunctionIndex(_fnc_lmap,"_fnc_lmap");
function _fnc_rand(g,f,c){var b=STACKTOP;STACKTOP+=12;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;a=b+4;var d=b+8;HEAP[b]=g;HEAP[a]=f;HEAP[d]=c;g=_rand()/2147483647;g=_lil_alloc_double(g);STACKTOP=b;return g}_fnc_rand.__index__=Runtime.getFunctionIndex(_fnc_rand,"_fnc_rand");
function _fnc_catcher(g,f,c){var b=STACKTOP;STACKTOP+=20;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;var d;a=null;for(d=-1;;)switch(d){case -1:var e=b,h=b+4;d=b+8;var i=b+12,j=b+16;HEAP[h]=g;HEAP[d]=f;HEAP[i]=c;d=HEAP[d]==0?0:1;break;case 0:d=_lil_alloc_string(HEAP[HEAP[h]+28]);HEAP[e]=d;d=2;break;case 1:d=_lil_to_string(HEAP[HEAP[i]]);HEAP[j]=d;_free(HEAP[HEAP[h]+28]);d=HEAP[HEAP[j]]!=0?3:4;break;case 3:var k=_strclone(HEAP[j]);a=3;d=5;break;case 4:a=4;d=5;break;case 5:HEAP[HEAP[h]+
28]=a==3?k:0;d=6;break;case 6:HEAP[e]=0;d=2;break;case 2:g=HEAP[e];STACKTOP=b;return g;default:assert(0,"bad label: "+d)}}_fnc_catcher.__index__=Runtime.getFunctionIndex(_fnc_catcher,"_fnc_catcher");
function _real_trim(g,f,c,b){var a=STACKTOP;STACKTOP+=32;assert(STACKTOP<STACK_MAX);for(var d=a;d<STACKTOP;d++)HEAP[d]=0;var e;d=null;for(e=-1;;)switch(e){case -1:var h=a,i=a+4;e=a+8;var j=a+12,k=a+16,l=a+20,m=a+24,n=a+28;HEAP[h]=g;HEAP[i]=f;HEAP[e]=c;HEAP[j]=b;HEAP[k]=0;HEAP[l]=0;e=HEAP[e]!=0?0:1;break;case 0:e=2;break;case 2:if(HEAP[HEAP[h]+HEAP[k]]!=0){d=2;e=3}else{d=2;e=4}break;case 3:var o=_strchr(HEAP[i],HEAP[HEAP[h]+HEAP[k]])!=0;d=3;e=4;break;case 4:e=(d==2?0:o)?5:6;break;case 5:HEAP[k]=HEAP[k]+
1&4294967295;e=2;break;case 6:e=HEAP[j]!=0?7:8;break;case 8:e=HEAP[HEAP[h]+HEAP[k]]!=0?9:10;break;case 9:var p=HEAP[h]+HEAP[k];d=9;e=11;break;case 10:d=10;e=11;break;case 11:e=_lil_alloc_string(d==9?p:0);HEAP[l]=e;e=7;break;case 7:e=1;break;case 1:e=HEAP[j]!=0?12:13;break;case 12:e=_strclone(HEAP[h]+HEAP[k]);HEAP[n]=e;e=_strlen(HEAP[n]);HEAP[m]=e;e=14;break;case 14:if(HEAP[m]!=0){d=14;e=15}else{d=14;e=16}break;case 15:var q=_strchr(HEAP[i],HEAP[HEAP[n]+(HEAP[m]-1&4294967295)])!=0;d=15;e=16;break;
case 16:e=(d==14?0:q)?17:18;break;case 17:HEAP[m]=HEAP[m]+-1&4294967295;e=14;break;case 18:HEAP[HEAP[n]+HEAP[m]]=0;e=_lil_alloc_string(HEAP[n]);HEAP[l]=e;_free(HEAP[n]);e=13;break;case 13:g=HEAP[l];STACKTOP=a;return g;default:assert(0,"bad label: "+e)}}_real_trim.__index__=Runtime.getFunctionIndex(_real_trim,"_real_trim");
function _real_inc(g,f,c){var b=STACKTOP;STACKTOP+=24;assert(STACKTOP<STACK_MAX);for(var a=b;a<STACKTOP;a++)HEAP[a]=0;for(a=-1;;)switch(a){case -1:var d=b,e=b+4,h=b+8,i=b+12,j=b+16;HEAP[d]=g;HEAP[e]=f;HEAP[h]=c;a=_lil_get_var(HEAP[d],HEAP[e]);HEAP[i]=a;a=_lil_to_double(HEAP[i]);HEAP[j]=a+HEAP[h];a=_fmod(HEAP[j],1)!=0?0:1;break;case 0:a=_lil_alloc_double(HEAP[j]);HEAP[i]=a;a=2;break;case 1:a=_lil_to_integer(HEAP[i]);a=_lil_alloc_integer(Math.floor(a+HEAP[h]));HEAP[i]=a;a=2;break;case 2:_lil_set_var(HEAP[d],
HEAP[e],HEAP[i],1);g=HEAP[i];STACKTOP=b;return g;default:assert(0,"bad label: "+a)}}_real_inc.__index__=Runtime.getFunctionIndex(_real_inc,"_real_inc");
function _ee_logor(g){var f=STACKTOP;STACKTOP+=20;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;var b;c=null;for(b=-1;;)switch(b){case -1:var a=f,d=f+4,e=f+12;HEAP[a]=g;_ee_logand(HEAP[a]);_ee_skip_spaces(HEAP[a]);b=0;break;case 0:c=HEAP[HEAP[a]+4];if(unSign(HEAP[HEAP[a]+8],32)<unSign(c,32)){c=0;b=1}else{c=0;b=2}break;case 1:if(HEAP[HEAP[a]+32]!=0){c=1;b=2}else{c=1;b=3}break;case 3:if(HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==124){c=3;b=4}else{c=3;b=5}break;case 4:var h=HEAP[HEAP[HEAP[a]]+
(HEAP[HEAP[a]+8]+1&4294967295)]==124;c=4;b=5;break;case 5:var i=c==3?0:h;c=5;b=2;break;case 2:b=(c==1?0:c==0?0:i)?6:7;break;case 6:HEAP[d]=HEAP[HEAP[a]+20];HEAP[e]=HEAP[HEAP[a]+12];b=HEAP[a]+8;HEAP[b]=HEAP[b]+2&4294967295;b=HEAP[HEAP[a]+28];b=b==1?27:b==0?28:29;break;case 27:_ee_logand(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?8:9;break;case 8:b=7;break;case 9:b=HEAP[HEAP[a]+28];b=b==1?10:b==0?14:30;break;case 10:if(HEAP[d]!=0){c=10;b=11}else{c=10;b=12}break;case 12:var j=HEAP[HEAP[a]+20]!=0;c=12;b=11;break;
case 11:HEAP[HEAP[a]+12]=(c==10?1:j)?1:0;HEAP[HEAP[a]+28]=0;b=13;break;case 14:if(HEAP[d]!=0){c=14;b=15}else{c=14;b=16}break;case 16:var k=HEAP[HEAP[a]+12]!=0;c=16;b=15;break;case 15:HEAP[HEAP[a]+12]=(c==14?1:k)?1:0;b=13;break;case 30:HEAP[HEAP[a]+32]=2;b=13;break;case 13:b=17;break;case 28:_ee_logand(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?18:19;break;case 18:b=7;break;case 19:b=HEAP[HEAP[a]+28];b=b==1?20:b==0?24:31;break;case 20:if(HEAP[e]!=0){c=20;b=21}else{c=20;b=22}break;case 22:var l=HEAP[HEAP[a]+20]!=
0;c=22;b=21;break;case 21:HEAP[HEAP[a]+12]=(c==20?1:l)?1:0;HEAP[HEAP[a]+28]=0;b=23;break;case 24:if(HEAP[e]!=0){c=24;b=25}else{c=24;b=26}break;case 26:var m=HEAP[HEAP[a]+12]!=0;c=26;b=25;break;case 25:HEAP[HEAP[a]+12]=(c==24?1:m)?1:0;b=23;break;case 31:HEAP[HEAP[a]+32]=2;b=23;break;case 23:b=17;break;case 29:HEAP[HEAP[a]+32]=2;b=17;break;case 17:_ee_skip_spaces(HEAP[a]);b=0;break;case 7:STACKTOP=f;return;default:assert(0,"bad label: "+b)}}_ee_logor.__index__=Runtime.getFunctionIndex(_ee_logor,"_ee_logor");
function _ee_logand(g){var f=STACKTOP;STACKTOP+=20;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;var b;c=null;for(b=-1;;)switch(b){case -1:var a=f,d=f+4,e=f+12;HEAP[a]=g;_ee_bitor(HEAP[a]);_ee_skip_spaces(HEAP[a]);b=0;break;case 0:c=HEAP[HEAP[a]+4];if(unSign(HEAP[HEAP[a]+8],32)<unSign(c,32)){c=0;b=1}else{c=0;b=2}break;case 1:if(HEAP[HEAP[a]+32]!=0){c=1;b=2}else{c=1;b=3}break;case 3:if(HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==38){c=3;b=4}else{c=3;b=5}break;case 4:var h=HEAP[HEAP[HEAP[a]]+
(HEAP[HEAP[a]+8]+1&4294967295)]==38;c=4;b=5;break;case 5:var i=c==3?0:h;c=5;b=2;break;case 2:b=(c==1?0:c==0?0:i)?6:7;break;case 6:HEAP[d]=HEAP[HEAP[a]+20];HEAP[e]=HEAP[HEAP[a]+12];b=HEAP[a]+8;HEAP[b]=HEAP[b]+2&4294967295;b=HEAP[HEAP[a]+28];b=b==1?27:b==0?28:29;break;case 27:_ee_bitor(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?8:9;break;case 8:b=7;break;case 9:b=HEAP[HEAP[a]+28];b=b==1?10:b==0?14:30;break;case 10:if(HEAP[d]!=0){c=10;b=11}else{c=10;b=12}break;case 11:var j=HEAP[HEAP[a]+20]!=0;c=11;b=12;break;case 12:HEAP[HEAP[a]+
12]=(c==10?0:j)?1:0;HEAP[HEAP[a]+28]=0;b=13;break;case 14:if(HEAP[d]!=0){c=14;b=15}else{c=14;b=16}break;case 15:var k=HEAP[HEAP[a]+12]!=0;c=15;b=16;break;case 16:HEAP[HEAP[a]+12]=(c==14?0:k)?1:0;b=13;break;case 30:HEAP[HEAP[a]+32]=2;b=13;break;case 13:b=17;break;case 28:_ee_bitor(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?18:19;break;case 18:b=7;break;case 19:b=HEAP[HEAP[a]+28];b=b==1?20:b==0?24:31;break;case 20:if(HEAP[e]!=0){c=20;b=21}else{c=20;b=22}break;case 21:var l=HEAP[HEAP[a]+20]!=0;c=21;b=22;break;case 22:HEAP[HEAP[a]+
12]=(c==20?0:l)?1:0;HEAP[HEAP[a]+28]=0;b=23;break;case 24:if(HEAP[e]!=0){c=24;b=25}else{c=24;b=26}break;case 25:var m=HEAP[HEAP[a]+12]!=0;c=25;b=26;break;case 26:HEAP[HEAP[a]+12]=(c==24?0:m)?1:0;b=23;break;case 31:HEAP[HEAP[a]+32]=2;b=23;break;case 23:b=17;break;case 29:HEAP[HEAP[a]+32]=2;b=17;break;case 17:_ee_skip_spaces(HEAP[a]);b=0;break;case 7:STACKTOP=f;return;default:assert(0,"bad label: "+b)}}_ee_logand.__index__=Runtime.getFunctionIndex(_ee_logand,"_ee_logand");
function _ee_skip_spaces(g){var f=STACKTOP;STACKTOP+=4;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;var b;c=null;for(b=-1;;)switch(b){case -1:var a=f;HEAP[a]=g;b=0;break;case 0:c=HEAP[HEAP[a]+4];if(unSign(HEAP[HEAP[a]+8],32)<unSign(c,32)){c=0;b=1}else{c=0;b=2}break;case 1:var d=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]];c=___ctype_b_loc();d=(HEAP[HEAP[c]+2*d]&8192)!=0;c=1;b=2;break;case 2:b=(c==0?0:d)?3:4;break;case 3:b=HEAP[a]+8;HEAP[b]=HEAP[b]+1&4294967295;b=0;break;case 4:STACKTOP=
f;return;default:assert(0,"bad label: "+b)}}_ee_skip_spaces.__index__=Runtime.getFunctionIndex(_ee_skip_spaces,"_ee_skip_spaces");
function _ee_bitor(g){var f=STACKTOP;STACKTOP+=20;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;var b;c=null;for(b=-1;;)switch(b){case -1:var a=f,d=f+4,e=f+12;HEAP[a]=g;_ee_bitand(HEAP[a]);_ee_skip_spaces(HEAP[a]);b=0;break;case 0:c=HEAP[HEAP[a]+4];if(unSign(HEAP[HEAP[a]+8],32)<unSign(c,32)){c=0;b=1}else{c=0;b=2}break;case 1:if(HEAP[HEAP[a]+32]!=0){c=1;b=2}else{c=1;b=3}break;case 3:if(HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==124){c=3;b=4}else{c=3;b=5}break;case 4:var h=HEAP[HEAP[HEAP[a]]+
(HEAP[HEAP[a]+8]+1&4294967295)];c=___ctype_b_loc();h=(HEAP[HEAP[c]+2*h]&4)!=0^1;c=4;b=5;break;case 5:var i=c==3?0:h;c=5;b=2;break;case 2:b=(c==1?0:c==0?0:i)?6:7;break;case 6:HEAP[d]=HEAP[HEAP[a]+20];HEAP[e]=HEAP[HEAP[a]+12];b=HEAP[a]+8;HEAP[b]=HEAP[b]+1&4294967295;b=HEAP[HEAP[a]+28];b=b==1?15:b==0?16:17;break;case 15:_ee_bitand(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?8:9;break;case 8:b=7;break;case 9:b=HEAP[HEAP[a]+28];b=b==1?18:b==0?19:20;break;case 18:HEAP[HEAP[a]+12]=Math.floor(HEAP[d])|Math.floor(HEAP[HEAP[a]+
20]);HEAP[HEAP[a]+28]=0;b=10;break;case 19:HEAP[HEAP[a]+12]=Math.floor(HEAP[d])|HEAP[HEAP[a]+12];b=10;break;case 20:HEAP[HEAP[a]+32]=2;b=10;break;case 10:b=11;break;case 16:_ee_bitand(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?12:13;break;case 12:b=7;break;case 13:b=HEAP[HEAP[a]+28];b=b==1?21:b==0?22:23;break;case 21:HEAP[HEAP[a]+12]=HEAP[e]|Math.floor(HEAP[HEAP[a]+20]);HEAP[HEAP[a]+28]=0;b=14;break;case 22:HEAP[HEAP[a]+12]=HEAP[e]|HEAP[HEAP[a]+12];b=14;break;case 23:HEAP[HEAP[a]+32]=2;b=14;break;case 14:b=11;
break;case 17:HEAP[HEAP[a]+32]=2;b=11;break;case 11:_ee_skip_spaces(HEAP[a]);b=0;break;case 7:STACKTOP=f;return;default:assert(0,"bad label: "+b)}}_ee_bitor.__index__=Runtime.getFunctionIndex(_ee_bitor,"_ee_bitor");
function _ee_bitand(g){var f=STACKTOP;STACKTOP+=20;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;var b;c=null;for(b=-1;;)switch(b){case -1:var a=f,d=f+4,e=f+12;HEAP[a]=g;_ee_equals(HEAP[a]);_ee_skip_spaces(HEAP[a]);b=0;break;case 0:c=HEAP[HEAP[a]+4];if(unSign(HEAP[HEAP[a]+8],32)<unSign(c,32)){c=0;b=1}else{c=0;b=2}break;case 1:if(HEAP[HEAP[a]+32]!=0){c=1;b=2}else{c=1;b=3}break;case 3:if(HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==38){c=3;b=4}else{c=3;b=5}break;case 4:var h=HEAP[HEAP[HEAP[a]]+
(HEAP[HEAP[a]+8]+1&4294967295)];c=___ctype_b_loc();h=(HEAP[HEAP[c]+2*h]&4)!=0^1;c=4;b=5;break;case 5:var i=c==3?0:h;c=5;b=2;break;case 2:b=(c==1?0:c==0?0:i)?6:7;break;case 6:HEAP[d]=HEAP[HEAP[a]+20];HEAP[e]=HEAP[HEAP[a]+12];b=HEAP[a]+8;HEAP[b]=HEAP[b]+1&4294967295;b=HEAP[HEAP[a]+28];b=b==1?15:b==0?16:17;break;case 15:_ee_equals(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?8:9;break;case 8:b=7;break;case 9:b=HEAP[HEAP[a]+28];b=b==1?18:b==0?19:20;break;case 18:HEAP[HEAP[a]+12]=Math.floor(HEAP[d])&Math.floor(HEAP[HEAP[a]+
20]);HEAP[HEAP[a]+28]=0;b=10;break;case 19:HEAP[HEAP[a]+12]=Math.floor(HEAP[d])&HEAP[HEAP[a]+12];b=10;break;case 20:HEAP[HEAP[a]+32]=2;b=10;break;case 10:b=11;break;case 16:_ee_equals(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?12:13;break;case 12:b=7;break;case 13:b=HEAP[HEAP[a]+28];b=b==1?21:b==0?22:23;break;case 21:HEAP[HEAP[a]+12]=HEAP[e]&Math.floor(HEAP[HEAP[a]+20]);HEAP[HEAP[a]+28]=0;b=14;break;case 22:HEAP[HEAP[a]+12]=HEAP[e]&HEAP[HEAP[a]+12];b=14;break;case 23:HEAP[HEAP[a]+32]=2;b=14;break;case 14:b=11;
break;case 17:HEAP[HEAP[a]+32]=2;b=11;break;case 11:_ee_skip_spaces(HEAP[a]);b=0;break;case 7:STACKTOP=f;return;default:assert(0,"bad label: "+b)}}_ee_bitand.__index__=Runtime.getFunctionIndex(_ee_bitand,"_ee_bitand");
function _ee_equals(g){var f=STACKTOP;STACKTOP+=24;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;var b;c=null;for(b=-1;;)switch(b){case -1:var a=f,d=f+4,e=f+12,h=f+20;HEAP[a]=g;_ee_compare(HEAP[a]);_ee_skip_spaces(HEAP[a]);b=0;break;case 0:c=HEAP[HEAP[a]+4];if(unSign(HEAP[HEAP[a]+8],32)<unSign(c,32)){c=0;b=1}else{c=0;b=2}break;case 1:if(HEAP[HEAP[a]+32]!=0){c=1;b=2}else{c=1;b=3}break;case 3:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==61?4:5;break;case 4:if(HEAP[HEAP[HEAP[a]]+(HEAP[HEAP[a]+
8]+1&4294967295)]==61){c=4;b=6}else{c=4;b=5}break;case 5:if(HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==33){c=5;b=7}else{c=5;b=8}break;case 7:var i=HEAP[HEAP[HEAP[a]]+(HEAP[HEAP[a]+8]+1&4294967295)]==61;c=7;b=8;break;case 8:var j=c==5?0:i;c=8;b=6;break;case 6:var k=c==4?1:j;c=6;b=2;break;case 2:b=(c==1?0:c==0?0:k)?9:10;break;case 9:HEAP[d]=HEAP[HEAP[a]+20];HEAP[e]=HEAP[HEAP[a]+12];HEAP[h]=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==61?1:2;b=HEAP[a]+8;HEAP[b]=HEAP[b]+2&4294967295;b=HEAP[h];b=b==1?26:b==2?27:18;
break;case 26:b=HEAP[HEAP[a]+28];b=b==1?28:b==0?29:30;break;case 28:_ee_compare(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?11:12;break;case 11:b=10;break;case 12:b=HEAP[HEAP[a]+28];b=b==1?31:b==0?32:33;break;case 31:HEAP[HEAP[a]+12]=HEAP[d]==HEAP[HEAP[a]+20]?1:0;HEAP[HEAP[a]+28]=0;b=13;break;case 32:HEAP[HEAP[a]+12]=HEAP[d]==HEAP[HEAP[a]+12]?1:0;b=13;break;case 33:HEAP[HEAP[a]+32]=2;b=13;break;case 13:b=14;break;case 29:_ee_compare(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?15:16;break;case 15:b=10;break;case 16:b=HEAP[HEAP[a]+
28];b=b==1?34:b==0?35:36;break;case 34:HEAP[HEAP[a]+12]=HEAP[e]==HEAP[HEAP[a]+20]?1:0;HEAP[HEAP[a]+28]=0;b=17;break;case 35:HEAP[HEAP[a]+12]=HEAP[e]==HEAP[HEAP[a]+12]?1:0;b=17;break;case 36:HEAP[HEAP[a]+32]=2;b=17;break;case 17:b=14;break;case 30:HEAP[HEAP[a]+32]=2;b=14;break;case 14:b=18;break;case 27:b=HEAP[HEAP[a]+28];b=b==1?37:b==0?38:39;break;case 37:_ee_compare(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?19:20;break;case 19:b=10;break;case 20:b=HEAP[HEAP[a]+28];b=b==1?40:b==0?41:42;break;case 40:HEAP[HEAP[a]+
12]=HEAP[d]!=HEAP[HEAP[a]+20]?1:0;HEAP[HEAP[a]+28]=0;b=21;break;case 41:HEAP[HEAP[a]+12]=HEAP[d]!=HEAP[HEAP[a]+12]?1:0;b=21;break;case 42:HEAP[HEAP[a]+32]=2;b=21;break;case 21:b=22;break;case 38:_ee_compare(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?23:24;break;case 23:b=10;break;case 24:b=HEAP[HEAP[a]+28];b=b==1?43:b==0?44:45;break;case 43:HEAP[HEAP[a]+12]=HEAP[e]!=HEAP[HEAP[a]+20]?1:0;HEAP[HEAP[a]+28]=0;b=25;break;case 44:HEAP[HEAP[a]+12]=HEAP[e]!=HEAP[HEAP[a]+12]?1:0;b=25;break;case 45:HEAP[HEAP[a]+32]=2;
b=25;break;case 25:b=22;break;case 39:HEAP[HEAP[a]+32]=2;b=22;break;case 22:b=18;break;case 18:_ee_skip_spaces(HEAP[a]);b=0;break;case 10:STACKTOP=f;return;default:assert(0,"bad label: "+b)}}_ee_equals.__index__=Runtime.getFunctionIndex(_ee_equals,"_ee_equals");
function _ee_compare(g){var f=STACKTOP;STACKTOP+=24;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;var b;c=null;for(b=-1;;)switch(b){case -1:var a=f,d=f+4,e=f+12,h=f+20;HEAP[a]=g;_ee_shift(HEAP[a]);_ee_skip_spaces(HEAP[a]);b=0;break;case 0:c=HEAP[HEAP[a]+4];if(unSign(HEAP[HEAP[a]+8],32)<unSign(c,32)){c=0;b=1}else{c=0;b=2}break;case 1:if(HEAP[HEAP[a]+32]!=0){c=1;b=2}else{c=1;b=3}break;case 3:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==60?4:5;break;case 4:c=HEAP[HEAP[HEAP[a]]+(HEAP[HEAP[a]+
8]+1&4294967295)];b=___ctype_b_loc();if((HEAP[HEAP[b]+2*c]&4)!=0){c=4;b=5}else{c=4;b=6}break;case 5:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==62?7:8;break;case 7:c=HEAP[HEAP[HEAP[a]]+(HEAP[HEAP[a]+8]+1&4294967295)];b=___ctype_b_loc();if((HEAP[HEAP[b]+2*c]&4)!=0){c=7;b=8}else{c=7;b=6}break;case 8:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==60?9:10;break;case 9:if(HEAP[HEAP[HEAP[a]]+(HEAP[HEAP[a]+8]+1&4294967295)]==61){c=9;b=6}else{c=9;b=10}break;case 10:if(HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==62){c=10;b=11}else{c=
10;b=12}break;case 11:var i=HEAP[HEAP[HEAP[a]]+(HEAP[HEAP[a]+8]+1&4294967295)]==61;c=11;b=12;break;case 12:var j=c==10?0:i;c=12;b=6;break;case 6:var k=c==9?1:c==7?1:c==4?1:j;c=6;b=2;break;case 2:b=(c==1?0:c==0?0:k)?13:14;break;case 13:HEAP[d]=HEAP[HEAP[a]+20];HEAP[e]=HEAP[HEAP[a]+12];HEAP[h]=4;b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==60?15:16;break;case 15:b=HEAP[HEAP[HEAP[a]]+(HEAP[HEAP[a]+8]+1&4294967295)];var l=___ctype_b_loc();b=(HEAP[HEAP[l]+2*b]&4)!=0?16:17;break;case 17:HEAP[h]=1;b=18;break;
case 16:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==62?19:20;break;case 19:b=HEAP[HEAP[HEAP[a]]+(HEAP[HEAP[a]+8]+1&4294967295)];l=___ctype_b_loc();b=(HEAP[HEAP[l]+2*b]&4)!=0?20:21;break;case 21:HEAP[h]=2;b=22;break;case 20:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==60?23:24;break;case 23:b=HEAP[HEAP[HEAP[a]]+(HEAP[HEAP[a]+8]+1&4294967295)]==61?25:24;break;case 25:HEAP[h]=3;b=24;break;case 24:b=22;break;case 22:b=18;break;case 18:b=HEAP[a]+8;HEAP[b]=HEAP[b]+(HEAP[h]>2?2:1)&4294967295;b=HEAP[h];b=b==1?55:b==
2?56:b==3?57:b==4?58:33;break;case 55:b=HEAP[HEAP[a]+28];b=b==1?59:b==0?60:61;break;case 59:_ee_shift(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?26:27;break;case 26:b=14;break;case 27:b=HEAP[HEAP[a]+28];b=b==1?62:b==0?63:64;break;case 62:HEAP[HEAP[a]+12]=HEAP[d]<HEAP[HEAP[a]+20]?1:0;HEAP[HEAP[a]+28]=0;b=28;break;case 63:HEAP[HEAP[a]+12]=HEAP[d]<HEAP[HEAP[a]+12]?1:0;b=28;break;case 64:HEAP[HEAP[a]+32]=2;b=28;break;case 28:b=29;break;case 60:_ee_shift(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?30:31;break;case 30:b=14;break;
case 31:b=HEAP[HEAP[a]+28];b=b==1?65:b==0?66:67;break;case 65:HEAP[HEAP[a]+12]=HEAP[e]<HEAP[HEAP[a]+20]?1:0;HEAP[HEAP[a]+28]=0;b=32;break;case 66:HEAP[HEAP[a]+12]=HEAP[e]<HEAP[HEAP[a]+12]?1:0;b=32;break;case 67:HEAP[HEAP[a]+32]=2;b=32;break;case 32:b=29;break;case 61:HEAP[HEAP[a]+32]=2;b=29;break;case 29:b=33;break;case 56:b=HEAP[HEAP[a]+28];b=b==1?68:b==0?69:70;break;case 68:_ee_shift(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?34:35;break;case 34:b=14;break;case 35:b=HEAP[HEAP[a]+28];b=b==1?71:b==0?72:73;break;
case 71:HEAP[HEAP[a]+12]=HEAP[d]>HEAP[HEAP[a]+20]?1:0;HEAP[HEAP[a]+28]=0;b=36;break;case 72:HEAP[HEAP[a]+12]=HEAP[d]>HEAP[HEAP[a]+12]?1:0;b=36;break;case 73:HEAP[HEAP[a]+32]=2;b=36;break;case 36:b=37;break;case 69:_ee_shift(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?38:39;break;case 38:b=14;break;case 39:b=HEAP[HEAP[a]+28];b=b==1?74:b==0?75:76;break;case 74:HEAP[HEAP[a]+12]=HEAP[e]>HEAP[HEAP[a]+20]?1:0;HEAP[HEAP[a]+28]=0;b=40;break;case 75:HEAP[HEAP[a]+12]=HEAP[e]>HEAP[HEAP[a]+12]?1:0;b=40;break;case 76:HEAP[HEAP[a]+
32]=2;b=40;break;case 40:b=37;break;case 70:HEAP[HEAP[a]+32]=2;b=37;break;case 37:b=33;break;case 57:b=HEAP[HEAP[a]+28];b=b==1?77:b==0?78:79;break;case 77:_ee_shift(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?41:42;break;case 41:b=14;break;case 42:b=HEAP[HEAP[a]+28];b=b==1?80:b==0?81:82;break;case 80:HEAP[HEAP[a]+12]=HEAP[d]<=HEAP[HEAP[a]+20]?1:0;HEAP[HEAP[a]+28]=0;b=43;break;case 81:HEAP[HEAP[a]+12]=HEAP[d]<=HEAP[HEAP[a]+12]?1:0;b=43;break;case 82:HEAP[HEAP[a]+32]=2;b=43;break;case 43:b=44;break;case 78:_ee_shift(HEAP[a]);
b=HEAP[HEAP[a]+32]!=0?45:46;break;case 45:b=14;break;case 46:b=HEAP[HEAP[a]+28];b=b==1?83:b==0?84:85;break;case 83:HEAP[HEAP[a]+12]=HEAP[e]<=HEAP[HEAP[a]+20]?1:0;HEAP[HEAP[a]+28]=0;b=47;break;case 84:HEAP[HEAP[a]+12]=HEAP[e]<=HEAP[HEAP[a]+12]?1:0;b=47;break;case 85:HEAP[HEAP[a]+32]=2;b=47;break;case 47:b=44;break;case 79:HEAP[HEAP[a]+32]=2;b=44;break;case 44:b=33;break;case 58:b=HEAP[HEAP[a]+28];b=b==1?86:b==0?87:88;break;case 86:_ee_shift(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?48:49;break;case 48:b=14;break;
case 49:b=HEAP[HEAP[a]+28];b=b==1?89:b==0?90:91;break;case 89:HEAP[HEAP[a]+12]=HEAP[d]>=HEAP[HEAP[a]+20]?1:0;HEAP[HEAP[a]+28]=0;b=50;break;case 90:HEAP[HEAP[a]+12]=HEAP[d]>=HEAP[HEAP[a]+12]?1:0;b=50;break;case 91:HEAP[HEAP[a]+32]=2;b=50;break;case 50:b=51;break;case 87:_ee_shift(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?52:53;break;case 52:b=14;break;case 53:b=HEAP[HEAP[a]+28];b=b==1?92:b==0?93:94;break;case 92:HEAP[HEAP[a]+12]=HEAP[e]>=HEAP[HEAP[a]+20]?1:0;HEAP[HEAP[a]+28]=0;b=54;break;case 93:HEAP[HEAP[a]+
12]=HEAP[e]>=HEAP[HEAP[a]+12]?1:0;b=54;break;case 94:HEAP[HEAP[a]+32]=2;b=54;break;case 54:b=51;break;case 88:HEAP[HEAP[a]+32]=2;b=51;break;case 51:b=33;break;case 33:_ee_skip_spaces(HEAP[a]);b=0;break;case 14:STACKTOP=f;return;default:assert(0,"bad label: "+b)}}_ee_compare.__index__=Runtime.getFunctionIndex(_ee_compare,"_ee_compare");
function _ee_shift(g){var f=STACKTOP;STACKTOP+=20;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;var b;c=null;for(b=-1;;)switch(b){case -1:var a=f,d=f+4,e=f+12;HEAP[a]=g;_ee_addsub(HEAP[a]);_ee_skip_spaces(HEAP[a]);b=0;break;case 0:c=HEAP[HEAP[a]+4];if(unSign(HEAP[HEAP[a]+8],32)<unSign(c,32)){c=0;b=1}else{c=0;b=2}break;case 1:if(HEAP[HEAP[a]+32]!=0){c=1;b=2}else{c=1;b=3}break;case 3:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==60?4:5;break;case 4:if(HEAP[HEAP[HEAP[a]]+(HEAP[HEAP[a]+8]+
1&4294967295)]==60){c=4;b=6}else{c=4;b=5}break;case 5:if(HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==62){c=5;b=7}else{c=5;b=8}break;case 7:var h=HEAP[HEAP[HEAP[a]]+(HEAP[HEAP[a]+8]+1&4294967295)]==62;c=7;b=8;break;case 8:var i=c==5?0:h;c=8;b=6;break;case 6:var j=c==4?1:i;c=6;b=2;break;case 2:b=(c==1?0:c==0?0:j)?9:10;break;case 9:HEAP[d]=HEAP[HEAP[a]+20];HEAP[e]=HEAP[HEAP[a]+12];b=HEAP[a]+8;HEAP[b]=HEAP[b]+1&4294967295;b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]];b=b==60?26:b==62?27:18;break;case 26:b=HEAP[HEAP[a]+
28];b=b==1?28:b==0?29:30;break;case 28:b=HEAP[a]+8;HEAP[b]=HEAP[b]+1&4294967295;_ee_addsub(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?11:12;break;case 11:b=10;break;case 12:b=HEAP[HEAP[a]+28];b=b==1?31:b==0?32:33;break;case 31:HEAP[HEAP[a]+12]=Math.floor(HEAP[d])<<Math.floor(HEAP[HEAP[a]+20]);HEAP[HEAP[a]+28]=0;b=13;break;case 32:HEAP[HEAP[a]+12]=Math.floor(HEAP[d])<<HEAP[HEAP[a]+12];b=13;break;case 33:HEAP[HEAP[a]+32]=2;b=13;break;case 13:b=14;break;case 29:b=HEAP[a]+8;HEAP[b]=HEAP[b]+1&4294967295;_ee_addsub(HEAP[a]);
b=HEAP[HEAP[a]+32]!=0?15:16;break;case 15:b=10;break;case 16:b=HEAP[HEAP[a]+28];b=b==1?34:b==0?35:36;break;case 34:HEAP[HEAP[a]+12]=HEAP[e]<<Math.floor(HEAP[HEAP[a]+20]);HEAP[HEAP[a]+28]=0;b=17;break;case 35:HEAP[HEAP[a]+12]=HEAP[e]<<HEAP[HEAP[a]+12];b=17;break;case 36:HEAP[HEAP[a]+32]=2;b=17;break;case 17:b=14;break;case 30:HEAP[HEAP[a]+32]=2;b=14;break;case 14:b=18;break;case 27:b=HEAP[HEAP[a]+28];b=b==1?37:b==0?38:39;break;case 37:b=HEAP[a]+8;HEAP[b]=HEAP[b]+1&4294967295;_ee_addsub(HEAP[a]);b=
HEAP[HEAP[a]+32]!=0?19:20;break;case 19:b=10;break;case 20:b=HEAP[HEAP[a]+28];b=b==1?40:b==0?41:42;break;case 40:HEAP[HEAP[a]+12]=Math.floor(HEAP[d])>>Math.floor(HEAP[HEAP[a]+20]);HEAP[HEAP[a]+28]=0;b=21;break;case 41:HEAP[HEAP[a]+12]=Math.floor(HEAP[d])>>HEAP[HEAP[a]+12];b=21;break;case 42:HEAP[HEAP[a]+32]=2;b=21;break;case 21:b=22;break;case 38:b=HEAP[a]+8;HEAP[b]=HEAP[b]+1&4294967295;_ee_addsub(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?23:24;break;case 23:b=10;break;case 24:b=HEAP[HEAP[a]+28];b=b==1?43:b==
0?44:45;break;case 43:HEAP[HEAP[a]+12]=HEAP[e]>>Math.floor(HEAP[HEAP[a]+20]);HEAP[HEAP[a]+28]=0;b=25;break;case 44:HEAP[HEAP[a]+12]=HEAP[e]>>HEAP[HEAP[a]+12];b=25;break;case 45:HEAP[HEAP[a]+32]=2;b=25;break;case 25:b=22;break;case 39:HEAP[HEAP[a]+32]=2;b=22;break;case 22:b=18;break;case 18:_ee_skip_spaces(HEAP[a]);b=0;break;case 10:STACKTOP=f;return;default:assert(0,"bad label: "+b)}}_ee_shift.__index__=Runtime.getFunctionIndex(_ee_shift,"_ee_shift");
function _ee_addsub(g){var f=STACKTOP;STACKTOP+=20;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;var b;c=null;for(b=-1;;)switch(b){case -1:var a=f,d=f+4,e=f+12;HEAP[a]=g;_ee_muldiv(HEAP[a]);_ee_skip_spaces(HEAP[a]);b=0;break;case 0:c=HEAP[HEAP[a]+4];if(unSign(HEAP[HEAP[a]+8],32)<unSign(c,32)){c=0;b=1}else{c=0;b=2}break;case 1:if(HEAP[HEAP[a]+32]!=0){c=1;b=2}else{c=1;b=3}break;case 3:c=HEAP[HEAP[HEAP[a]]+(HEAP[HEAP[a]+8]+1&4294967295)];b=___ctype_b_loc();if((HEAP[HEAP[b]+2*c]&4)!=
0){c=3;b=2}else{c=3;b=4}break;case 4:if(HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==43){c=4;b=5}else{c=4;b=6}break;case 6:var h=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==45;c=6;b=5;break;case 5:var i=c==4?1:h;c=5;b=2;break;case 2:b=(c==3?0:c==1?0:c==0?0:i)?7:8;break;case 7:HEAP[d]=HEAP[HEAP[a]+20];HEAP[e]=HEAP[HEAP[a]+12];b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]];b=b==43?24:b==45?25:16;break;case 24:b=HEAP[HEAP[a]+28];b=b==1?26:b==0?27:28;break;case 26:b=HEAP[a]+8;HEAP[b]=HEAP[b]+1&4294967295;_ee_muldiv(HEAP[a]);
b=HEAP[HEAP[a]+32]!=0?9:10;break;case 9:b=8;break;case 10:b=HEAP[HEAP[a]+28];b=b==1?29:b==0?30:31;break;case 29:HEAP[HEAP[a]+20]+=HEAP[d];b=11;break;case 30:HEAP[HEAP[a]+20]=HEAP[HEAP[a]+12]+HEAP[d];HEAP[HEAP[a]+28]=1;b=11;break;case 31:HEAP[HEAP[a]+32]=2;b=11;break;case 11:b=12;break;case 27:b=HEAP[a]+8;HEAP[b]=HEAP[b]+1&4294967295;_ee_muldiv(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?13:14;break;case 13:b=8;break;case 14:b=HEAP[HEAP[a]+28];b=b==1?32:b==0?33:34;break;case 32:HEAP[HEAP[a]+20]+=HEAP[e];HEAP[HEAP[a]+
28]=1;b=15;break;case 33:HEAP[HEAP[a]+12]+=HEAP[e];b=15;break;case 34:HEAP[HEAP[a]+32]=2;b=15;break;case 15:b=12;break;case 28:HEAP[HEAP[a]+32]=2;b=12;break;case 12:b=16;break;case 25:b=HEAP[HEAP[a]+28];b=b==1?35:b==0?36:37;break;case 35:b=HEAP[a]+8;HEAP[b]=HEAP[b]+1&4294967295;_ee_muldiv(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?17:18;break;case 17:b=8;break;case 18:b=HEAP[HEAP[a]+28];b=b==1?38:b==0?39:40;break;case 38:HEAP[HEAP[a]+20]=HEAP[d]-HEAP[HEAP[a]+20];b=19;break;case 39:HEAP[HEAP[a]+20]=HEAP[d]-HEAP[HEAP[a]+
12];HEAP[HEAP[a]+28]=1;b=19;break;case 40:HEAP[HEAP[a]+32]=2;b=19;break;case 19:b=20;break;case 36:b=HEAP[a]+8;HEAP[b]=HEAP[b]+1&4294967295;_ee_muldiv(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?21:22;break;case 21:b=8;break;case 22:b=HEAP[HEAP[a]+28];b=b==1?41:b==0?42:43;break;case 41:HEAP[HEAP[a]+20]=HEAP[e]-HEAP[HEAP[a]+20];HEAP[HEAP[a]+28]=1;b=23;break;case 42:HEAP[HEAP[a]+12]=HEAP[e]-HEAP[HEAP[a]+12];b=23;break;case 43:HEAP[HEAP[a]+32]=2;b=23;break;case 23:b=20;break;case 37:HEAP[HEAP[a]+32]=2;b=20;break;
case 20:b=16;break;case 16:_ee_skip_spaces(HEAP[a]);b=0;break;case 8:STACKTOP=f;return;default:assert(0,"bad label: "+b)}}_ee_addsub.__index__=Runtime.getFunctionIndex(_ee_addsub,"_ee_addsub");
function _ee_muldiv(g){var f=STACKTOP;STACKTOP+=20;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;var b;c=null;for(b=-1;;)switch(b){case -1:var a=f,d=f+4,e=f+12;HEAP[a]=g;_ee_unary(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?0:1;break;case 0:b=2;break;case 1:_ee_skip_spaces(HEAP[a]);b=3;break;case 3:c=HEAP[HEAP[a]+4];if(unSign(HEAP[HEAP[a]+8],32)<unSign(c,32)){c=3;b=4}else{c=3;b=5}break;case 4:if(HEAP[HEAP[a]+32]!=0){c=4;b=5}else{c=4;b=6}break;case 6:c=HEAP[HEAP[HEAP[a]]+(HEAP[HEAP[a]+8]+1&4294967295)];
b=___ctype_b_loc();if((HEAP[HEAP[b]+2*c]&4)!=0){c=6;b=5}else{c=6;b=7}break;case 7:if(HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==42){c=7;b=8}else{c=7;b=9}break;case 9:if(HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==47){c=9;b=8}else{c=9;b=10}break;case 10:if(HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==92){c=10;b=8}else{c=10;b=11}break;case 11:var h=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]]==37;c=11;b=8;break;case 8:var i=c==10?1:c==9?1:c==7?1:h;c=8;b=5;break;case 5:b=(c==6?0:c==4?0:c==3?0:i)?12:2;break;case 12:HEAP[d]=HEAP[HEAP[a]+
20];HEAP[e]=HEAP[HEAP[a]+12];b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+8]];b=b==42?78:b==37?79:b==47?80:b==92?81:20;break;case 78:b=HEAP[HEAP[a]+28];b=b==1?82:b==0?83:84;break;case 82:b=HEAP[a]+8;HEAP[b]=HEAP[b]+1&4294967295;_ee_unary(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?13:14;break;case 13:b=2;break;case 14:b=HEAP[HEAP[a]+28];b=b==1?85:b==0?86:87;break;case 85:HEAP[HEAP[a]+20]*=HEAP[d];b=15;break;case 86:HEAP[HEAP[a]+20]=HEAP[HEAP[a]+12]*HEAP[d];HEAP[HEAP[a]+28]=1;b=15;break;case 87:HEAP[HEAP[a]+32]=2;b=15;break;
case 15:b=16;break;case 83:b=HEAP[a]+8;HEAP[b]=HEAP[b]+1&4294967295;_ee_unary(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?17:18;break;case 17:b=2;break;case 18:b=HEAP[HEAP[a]+28];b=b==1?88:b==0?89:90;break;case 88:HEAP[HEAP[a]+20]*=HEAP[e];HEAP[HEAP[a]+28]=1;b=19;break;case 89:HEAP[HEAP[a]+12]*=HEAP[e];b=19;break;case 90:HEAP[HEAP[a]+32]=2;b=19;break;case 19:b=16;break;case 84:HEAP[HEAP[a]+32]=2;b=16;break;case 16:b=20;break;case 79:b=HEAP[HEAP[a]+28];b=b==1?91:b==0?92:30;break;case 91:b=HEAP[a]+8;HEAP[b]=HEAP[b]+
1&4294967295;_ee_unary(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?21:22;break;case 21:b=2;break;case 22:b=HEAP[HEAP[a]+28];b=b==1?93:b==0?94:95;break;case 93:b=HEAP[HEAP[a]+20]==0?23:24;break;case 23:HEAP[HEAP[a]+32]=3;b=25;break;case 24:b=_fmod(HEAP[d],HEAP[HEAP[a]+20]);HEAP[HEAP[a]+20]=b;b=25;break;case 25:b=26;break;case 94:b=HEAP[HEAP[a]+12]==0?27:28;break;case 27:HEAP[HEAP[a]+32]=3;b=29;break;case 28:b=_fmod(HEAP[d],HEAP[HEAP[a]+12]);HEAP[HEAP[a]+20]=b;b=29;break;case 29:HEAP[HEAP[a]+28]=1;b=26;break;case 95:HEAP[HEAP[a]+
32]=2;b=26;break;case 26:b=30;break;case 92:b=HEAP[a]+8;HEAP[b]=HEAP[b]+1&4294967295;_ee_unary(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?31:32;break;case 31:b=2;break;case 32:b=HEAP[HEAP[a]+28];b=b==1?96:b==0?97:98;break;case 96:b=HEAP[HEAP[a]+20]==0?33:34;break;case 33:HEAP[HEAP[a]+32]=3;b=35;break;case 34:b=_fmod(HEAP[e],HEAP[HEAP[a]+20]);HEAP[HEAP[a]+20]=b;b=35;break;case 35:b=36;break;case 97:b=HEAP[HEAP[a]+12]==0?37:38;break;case 37:HEAP[HEAP[a]+32]=3;b=39;break;case 38:HEAP[HEAP[a]+12]=HEAP[e]%HEAP[HEAP[a]+
12];b=39;break;case 39:b=36;break;case 98:HEAP[HEAP[a]+32]=2;b=36;break;case 36:b=30;break;case 30:b=20;break;case 80:b=HEAP[HEAP[a]+28];b=b==1?99:b==0?100:49;break;case 99:b=HEAP[a]+8;HEAP[b]=HEAP[b]+1&4294967295;_ee_unary(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?40:41;break;case 40:b=2;break;case 41:b=HEAP[HEAP[a]+28];b=b==1?101:b==0?102:103;break;case 101:b=HEAP[HEAP[a]+20]==0?42:43;break;case 42:HEAP[HEAP[a]+32]=3;b=44;break;case 43:HEAP[HEAP[a]+20]=HEAP[d]/HEAP[HEAP[a]+20];b=44;break;case 44:b=45;break;
case 102:b=HEAP[HEAP[a]+12]==0?46:47;break;case 46:HEAP[HEAP[a]+32]=3;b=48;break;case 47:HEAP[HEAP[a]+20]=HEAP[d]/HEAP[HEAP[a]+12];b=48;break;case 48:HEAP[HEAP[a]+28]=1;b=45;break;case 103:HEAP[HEAP[a]+32]=2;b=45;break;case 45:b=49;break;case 100:b=HEAP[a]+8;HEAP[b]=HEAP[b]+1&4294967295;_ee_unary(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?50:51;break;case 50:b=2;break;case 51:b=HEAP[HEAP[a]+28];b=b==1?104:b==0?105:106;break;case 104:b=HEAP[HEAP[a]+20]==0?52:53;break;case 52:HEAP[HEAP[a]+32]=3;b=54;break;case 53:HEAP[HEAP[a]+
20]=HEAP[e]/HEAP[HEAP[a]+20];b=54;break;case 54:b=55;break;case 105:b=HEAP[HEAP[a]+12]==0?56:57;break;case 56:HEAP[HEAP[a]+32]=3;b=58;break;case 57:HEAP[HEAP[a]+20]=HEAP[e]/HEAP[HEAP[a]+12];b=58;break;case 58:HEAP[HEAP[a]+28]=1;b=55;break;case 106:HEAP[HEAP[a]+32]=2;b=55;break;case 55:b=49;break;case 49:b=20;break;case 81:b=HEAP[HEAP[a]+28];b=b==1?107:b==0?108:109;break;case 107:b=HEAP[a]+8;HEAP[b]=HEAP[b]+1&4294967295;_ee_unary(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?59:60;break;case 59:b=2;break;case 60:b=
HEAP[HEAP[a]+28];b=b==1?110:b==0?111:112;break;case 110:b=HEAP[HEAP[a]+20]==0?61:62;break;case 61:HEAP[HEAP[a]+32]=3;b=63;break;case 62:HEAP[HEAP[a]+12]=Math.floor(HEAP[d]/HEAP[HEAP[a]+20]);b=63;break;case 63:HEAP[HEAP[a]+28]=0;b=64;break;case 111:b=HEAP[HEAP[a]+12]==0?65:66;break;case 65:HEAP[HEAP[a]+32]=3;b=67;break;case 66:HEAP[HEAP[a]+12]=Math.floor(HEAP[d]/HEAP[HEAP[a]+12]);b=67;break;case 67:b=64;break;case 112:HEAP[HEAP[a]+32]=2;b=64;break;case 64:b=68;break;case 108:b=HEAP[a]+8;HEAP[b]=HEAP[b]+
1&4294967295;_ee_unary(HEAP[a]);b=HEAP[HEAP[a]+32]!=0?69:70;break;case 69:b=2;break;case 70:b=HEAP[HEAP[a]+28];b=b==1?113:b==0?114:115;break;case 113:b=HEAP[HEAP[a]+20]==0?71:72;break;case 71:HEAP[HEAP[a]+32]=3;b=73;break;case 72:HEAP[HEAP[a]+12]=Math.floor(HEAP[e]/HEAP[HEAP[a]+20]);b=73;break;case 73:HEAP[HEAP[a]+28]=0;b=74;break;case 114:b=HEAP[HEAP[a]+12]==0?75:76;break;case 75:HEAP[HEAP[a]+32]=3;b=77;break;case 76:HEAP[HEAP[a]+12]=Math.floor(HEAP[e]/HEAP[HEAP[a]+12]);b=77;break;case 77:b=74;break;
case 115:HEAP[HEAP[a]+32]=2;b=74;break;case 74:b=68;break;case 109:HEAP[HEAP[a]+32]=2;b=68;break;case 68:b=20;break;case 20:_ee_skip_spaces(HEAP[a]);b=3;break;case 2:STACKTOP=f;return;default:assert(0,"bad label: "+b)}}_ee_muldiv.__index__=Runtime.getFunctionIndex(_ee_muldiv,"_ee_muldiv");
function _ee_unary(g){var f=STACKTOP;STACKTOP+=5;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;for(c=-1;;)switch(c){case -1:var b=f,a=f+4;HEAP[b]=g;_ee_skip_spaces(HEAP[b]);c=HEAP[HEAP[b]+4];c=unSign(HEAP[HEAP[b]+8],32)<unSign(c,32)?0:1;break;case 0:c=HEAP[HEAP[b]+32]!=0?1:2;break;case 2:c=HEAP[HEAP[HEAP[b]]+(HEAP[HEAP[b]+8]+1&4294967295)];var d=___ctype_b_loc();c=(HEAP[HEAP[d]+2*c]&4)!=0?1:3;break;case 3:c=HEAP[HEAP[HEAP[b]]+HEAP[HEAP[b]+8]]==45?4:5;break;case 5:c=HEAP[HEAP[HEAP[b]]+
HEAP[HEAP[b]+8]]==43?4:6;break;case 6:c=HEAP[HEAP[HEAP[b]]+HEAP[HEAP[b]+8]]==126?4:7;break;case 7:c=HEAP[HEAP[HEAP[b]]+HEAP[HEAP[b]+8]]==33?4:1;break;case 4:c=HEAP[b]+8;d=HEAP[c];HEAP[c]=d+1&4294967295;HEAP[a]=HEAP[HEAP[HEAP[b]]+d];_ee_unary(HEAP[b]);c=HEAP[HEAP[b]+32]!=0?8:9;break;case 8:c=10;break;case 9:c=HEAP[a];c=c==45?15:c==43?16:c==126?17:c==33?18:12;break;case 15:c=HEAP[HEAP[b]+28];c=c==1?19:c==0?20:21;break;case 19:HEAP[HEAP[b]+20]=0-HEAP[HEAP[b]+20];c=11;break;case 20:HEAP[HEAP[b]+12]=0-
HEAP[HEAP[b]+12];c=11;break;case 21:HEAP[HEAP[b]+32]=2;c=11;break;case 11:c=12;break;case 16:c=12;break;case 17:c=HEAP[HEAP[b]+28];c=c==1?22:c==0?23:24;break;case 22:HEAP[HEAP[b]+12]=Math.floor(HEAP[HEAP[b]+20])^-1;HEAP[HEAP[b]+28]=0;c=13;break;case 23:HEAP[HEAP[b]+12]^=-1;c=13;break;case 24:HEAP[HEAP[b]+32]=2;c=13;break;case 13:c=12;break;case 18:c=HEAP[HEAP[b]+28];c=c==1?25:c==0?26:27;break;case 25:HEAP[HEAP[b]+20]=HEAP[HEAP[b]+20]!=0^1;c=14;break;case 26:HEAP[HEAP[b]+12]=HEAP[HEAP[b]+12]!=0^1;
c=14;break;case 27:HEAP[HEAP[b]+32]=2;c=14;break;case 14:c=12;break;case 12:c=10;break;case 1:_ee_paren(HEAP[b]);c=10;break;case 10:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_ee_unary.__index__=Runtime.getFunctionIndex(_ee_unary,"_ee_unary");
function _ee_paren(g){var f=STACKTOP;STACKTOP+=4;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;for(c=-1;;)switch(c){case -1:var b=f;HEAP[b]=g;_ee_skip_spaces(HEAP[b]);c=HEAP[HEAP[HEAP[b]]+HEAP[HEAP[b]+8]]==40?0:1;break;case 0:c=HEAP[b]+8;HEAP[c]=HEAP[c]+1&4294967295;_ee_expr(HEAP[b]);_ee_skip_spaces(HEAP[b]);c=HEAP[HEAP[HEAP[b]]+HEAP[HEAP[b]+8]]==41?2:3;break;case 2:c=HEAP[b]+8;HEAP[c]=HEAP[c]+1&4294967295;c=4;break;case 3:HEAP[HEAP[b]+32]=1;c=4;break;case 4:c=5;break;case 1:_ee_element(HEAP[b]);
c=5;break;case 5:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_ee_paren.__index__=Runtime.getFunctionIndex(_ee_paren,"_ee_paren");
function _ee_element(g){var f=STACKTOP;STACKTOP+=4;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;for(c=-1;;)switch(c){case -1:var b=f;HEAP[b]=g;c=HEAP[HEAP[HEAP[b]]+HEAP[HEAP[b]+8]];var a=___ctype_b_loc();c=(HEAP[HEAP[a]+2*c]&2048)!=0?0:1;break;case 0:_ee_numeric_element(HEAP[b]);c=2;break;case 1:HEAP[HEAP[b]+28]=0;HEAP[HEAP[b]+12]=1;HEAP[HEAP[b]+32]=4;c=2;break;case 2:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}
_ee_element.__index__=Runtime.getFunctionIndex(_ee_element,"_ee_element");
function _ee_numeric_element(g){var f=STACKTOP;STACKTOP+=20;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;for(c=-1;;)switch(c){case -1:var b=f,a=f+4,d=f+12;HEAP[b]=g;HEAP[a]=0;HEAP[d]=1;HEAP[HEAP[b]+28]=0;_ee_skip_spaces(HEAP[b]);HEAP[HEAP[b]+12]=0;c=HEAP[HEAP[b]+20]=0;break;case 0:c=HEAP[HEAP[b]+4];c=unSign(HEAP[HEAP[b]+8],32)<unSign(c,32)?1:2;break;case 1:c=HEAP[HEAP[HEAP[b]]+HEAP[HEAP[b]+8]]==46?3:4;break;case 3:c=HEAP[HEAP[b]+28]==1?5:6;break;case 5:c=2;break;case 6:HEAP[HEAP[b]+
28]=1;c=HEAP[b]+8;HEAP[c]=HEAP[c]+1&4294967295;c=7;break;case 4:c=HEAP[HEAP[HEAP[b]]+HEAP[HEAP[b]+8]];var e=___ctype_b_loc();c=(HEAP[HEAP[e]+2*c]&2048)!=0?8:9;break;case 9:c=2;break;case 8:c=7;break;case 7:c=HEAP[HEAP[b]+28]==0?10:11;break;case 10:HEAP[HEAP[b]+12]=HEAP[HEAP[b]+12]*10+(HEAP[HEAP[HEAP[b]]+HEAP[HEAP[b]+8]]-48&4294967295);c=12;break;case 11:HEAP[a]=HEAP[a]*10+(HEAP[HEAP[HEAP[b]]+HEAP[HEAP[b]+8]]-48&4294967295);HEAP[d]*=10;c=12;break;case 12:c=HEAP[b]+8;HEAP[c]=HEAP[c]+1&4294967295;c=
0;break;case 2:c=HEAP[HEAP[b]+28]==1?13:14;break;case 13:HEAP[HEAP[b]+20]=HEAP[HEAP[b]+12]+HEAP[a]/HEAP[d];c=14;break;case 14:STACKTOP=f;return;default:assert(0,"bad label: "+c)}}_ee_numeric_element.__index__=Runtime.getFunctionIndex(_ee_numeric_element,"_ee_numeric_element");
function _next_word(g){var f=STACKTOP;STACKTOP+=17;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;var b;c=null;for(b=-1;;)switch(b){case -1:var a=f,d=f+4,e=f+8,h=f+12,i=f+13;HEAP[a]=g;_skip_spaces(HEAP[a]);b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==36?0:1;break;case 0:b=_get_dollarpart(HEAP[a]);HEAP[d]=b;b=2;break;case 1:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==123?3:4;break;case 3:HEAP[e]=1;b=HEAP[a]+12;HEAP[b]=HEAP[b]+1&4294967295;b=_alloc_value(0);HEAP[d]=b;b=5;break;case 5:b=HEAP[HEAP[a]+
8];b=unSign(HEAP[HEAP[a]+12],32)<unSign(b,32)?6:7;break;case 6:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==123?8:9;break;case 8:b=HEAP[a]+12;HEAP[b]=HEAP[b]+1&4294967295;HEAP[e]=HEAP[e]+1&4294967295;_lil_append_char(HEAP[d],123);b=10;break;case 9:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==125?11:12;break;case 11:b=HEAP[a]+12;HEAP[b]=HEAP[b]+1&4294967295;b=HEAP[e]+-1&4294967295;HEAP[e]=b;b=b==0?13:14;break;case 13:b=7;break;case 14:_lil_append_char(HEAP[d],125);b=15;break;case 15:b=16;break;case 12:b=HEAP[d];
var j=HEAP[a]+12,k=HEAP[j];HEAP[j]=k+1&4294967295;_lil_append_char(b,HEAP[HEAP[HEAP[a]]+k]);b=16;break;case 16:b=10;break;case 10:b=5;break;case 7:b=17;break;case 4:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==91?18:19;break;case 18:b=_get_bracketpart(HEAP[a]);HEAP[d]=b;b=20;break;case 19:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==34?21:22;break;case 22:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==39?21:23;break;case 21:b=HEAP[a]+12;j=HEAP[b];HEAP[b]=j+1&4294967295;HEAP[h]=HEAP[HEAP[HEAP[a]]+j];b=_alloc_value(0);
HEAP[d]=b;b=24;break;case 24:b=HEAP[HEAP[a]+8];b=unSign(HEAP[HEAP[a]+12],32)<unSign(b,32)?25:26;break;case 25:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==91?27:28;break;case 28:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==36?27:29;break;case 27:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==36?30:31;break;case 30:var l=_get_dollarpart(HEAP[a]);c=30;b=32;break;case 31:var m=_get_bracketpart(HEAP[a]);c=31;b=32;break;case 32:HEAP[i]=c==30?l:m;_lil_append_val(HEAP[d],HEAP[i]);_lil_free_value(HEAP[i]);b=HEAP[a]+12;HEAP[b]=
HEAP[b]+-1&4294967295;b=33;break;case 29:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==92?34:35;break;case 34:b=HEAP[a]+12;HEAP[b]=HEAP[b]+1&4294967295;b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]];b=b==98?51:b==116?52:b==110?53:b==118?54:b==102?55:b==114?56:b==48?57:b==97?58:b==99?59:b==111?60:61;break;case 51:_lil_append_char(HEAP[d],8);b=36;break;case 52:_lil_append_char(HEAP[d],9);b=36;break;case 53:_lil_append_char(HEAP[d],10);b=36;break;case 54:_lil_append_char(HEAP[d],11);b=36;break;case 55:_lil_append_char(HEAP[d],
12);b=36;break;case 56:_lil_append_char(HEAP[d],13);b=36;break;case 57:_lil_append_char(HEAP[d],0);b=36;break;case 58:_lil_append_char(HEAP[d],7);b=36;break;case 59:_lil_append_char(HEAP[d],125);b=36;break;case 60:_lil_append_char(HEAP[d],123);b=36;break;case 61:_lil_append_char(HEAP[d],HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]);b=36;break;case 36:b=37;break;case 35:b=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]==HEAP[h]?38:39;break;case 38:b=HEAP[a]+12;HEAP[b]=HEAP[b]+1&4294967295;b=26;break;case 39:_lil_append_char(HEAP[d],
HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]]);b=40;break;case 40:b=37;break;case 37:b=33;break;case 33:b=HEAP[a]+12;HEAP[b]=HEAP[b]+1&4294967295;b=24;break;case 26:b=41;break;case 23:b=_alloc_value(0);HEAP[d]=b;b=42;break;case 42:c=HEAP[HEAP[a]+8];if(unSign(HEAP[HEAP[a]+12],32)<unSign(c,32)){c=42;b=43}else{c=42;b=44}break;case 43:c=HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+12]];b=___ctype_b_loc();if((HEAP[HEAP[b]+2*c]&8192)!=0){c=43;b=44}else{c=43;b=45}break;case 45:var n=_islilspecial(HEAP[HEAP[HEAP[a]]+HEAP[HEAP[a]+
12]])!=0^1;c=45;b=44;break;case 44:b=(c==43?0:c==42?0:n)?46:47;break;case 46:b=HEAP[d];j=HEAP[a]+12;k=HEAP[j];HEAP[j]=k+1&4294967295;_lil_append_char(b,HEAP[HEAP[HEAP[a]]+k]);b=42;break;case 47:b=41;break;case 41:b=20;break;case 20:b=17;break;case 17:b=2;break;case 2:b=HEAP[d]!=0?48:49;break;case 48:var o=HEAP[d];c=48;b=50;break;case 49:var p=_alloc_value(0);c=49;b=50;break;case 50:g=c==48?o:p;STACKTOP=f;return g;default:assert(0,"bad label: "+b)}}
_next_word.__index__=Runtime.getFunctionIndex(_next_word,"_next_word");
function _get_dollarpart(g){var f=STACKTOP;STACKTOP+=16;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;c=f+4;var b=f+8,a=f+12;HEAP[f]=g;g=HEAP[f]+12;HEAP[g]=HEAP[g]+1&4294967295;g=_next_word(HEAP[f]);HEAP[b]=g;g=_alloc_value(HEAP[HEAP[f]+36]);HEAP[a]=g;_lil_append_val(HEAP[a],HEAP[b]);_lil_free_value(HEAP[b]);b=_lil_parse_value(HEAP[f],HEAP[a],0);HEAP[c]=b;_lil_free_value(HEAP[a]);c=HEAP[c];STACKTOP=f;return c}_get_dollarpart.__index__=Runtime.getFunctionIndex(_get_dollarpart,"_get_dollarpart");
function _get_bracketpart(g){var f=STACKTOP;STACKTOP+=16;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;for(c=-1;;)switch(c){case -1:var b=f,a=f+4,d=f+8,e=f+12;HEAP[b]=g;HEAP[a]=1;c=_alloc_value(0);HEAP[e]=c;c=HEAP[b]+12;HEAP[c]=HEAP[c]+1&4294967295;c=0;break;case 0:c=HEAP[HEAP[b]+8];c=unSign(HEAP[HEAP[b]+12],32)<unSign(c,32)?1:2;break;case 1:c=HEAP[HEAP[HEAP[b]]+HEAP[HEAP[b]+12]]==91?3:4;break;case 3:c=HEAP[b]+12;HEAP[c]=HEAP[c]+1&4294967295;HEAP[a]=HEAP[a]+1&4294967295;_lil_append_char(HEAP[e],
91);c=5;break;case 4:c=HEAP[HEAP[HEAP[b]]+HEAP[HEAP[b]+12]]==93?6:7;break;case 6:c=HEAP[b]+12;HEAP[c]=HEAP[c]+1&4294967295;c=HEAP[a]+-1&4294967295;HEAP[a]=c;c=c==0?8:9;break;case 8:c=2;break;case 9:_lil_append_char(HEAP[e],93);c=10;break;case 10:c=11;break;case 7:c=HEAP[e];var h=HEAP[b]+12,i=HEAP[h];HEAP[h]=i+1&4294967295;_lil_append_char(c,HEAP[HEAP[HEAP[b]]+i]);c=11;break;case 11:c=5;break;case 5:c=0;break;case 2:g=_lil_parse_value(HEAP[b],HEAP[e],0);HEAP[d]=g;_lil_free_value(HEAP[e]);d=HEAP[d];
STACKTOP=f;return d;default:assert(0,"bad label: "+c)}}_get_bracketpart.__index__=Runtime.getFunctionIndex(_get_bracketpart,"_get_bracketpart");
function _islilspecial(g){var f=STACKTOP;STACKTOP+=1;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;var b=null;for(c=0;;)switch(c){case 0:var a=f;HEAP[a]=g;if(HEAP[a]==59){b=0;c=1}else{b=0;c=2}break;case 2:if(HEAP[a]==36){b=2;c=1}else{b=2;c=3}break;case 3:if(HEAP[a]==91){b=3;c=1}else{b=3;c=4}break;case 4:if(HEAP[a]==93){b=4;c=1}else{b=4;c=5}break;case 5:if(HEAP[a]==123){b=5;c=1}else{b=5;c=6}break;case 6:if(HEAP[a]==125){b=6;c=1}else{b=6;c=7}break;case 7:if(HEAP[a]==34){b=7;c=1}else{b=
7;c=8}break;case 8:var d=HEAP[a]==39;b=8;c=1;break;case 1:g=b==7?1:b==6?1:b==5?1:b==4?1:b==3?1:b==2?1:b==0?1:d;STACKTOP=f;return g;default:assert(0,"bad label: "+c)}}_islilspecial.__index__=Runtime.getFunctionIndex(_islilspecial,"_islilspecial");
function _liljs_error_check(g){var f=STACKTOP;STACKTOP+=16;assert(STACKTOP<STACK_MAX);for(var c=f;c<STACKTOP;c++)HEAP[c]=0;for(c=-1;;)switch(c){case -1:var b=f;c=f+4;var a=f+8,d=f+12;HEAP[c]=g;c=_lil_error(HEAP[c],a,d)!=0?0:1;break;case 0:_printf(__str91,HEAP[a]);HEAP[b]=0;c=2;break;case 1:HEAP[b]=1;c=2;break;case 2:g=HEAP[b];STACKTOP=f;return g;default:assert(0,"bad label: "+c)}}_liljs_error_check.__index__=Runtime.getFunctionIndex(_liljs_error_check,"_liljs_error_check");
function run(g){function f(){for(var d=0;d<3;d++)b.push(0)}__initializeRuntime__();__str=Pointer_make([115,101,116,32,0],0,ALLOC_STATIC);__str1=Pointer_make([97,114,103,115,0],0,ALLOC_STATIC);__str2=Pointer_make([99,97,116,99,104,101,114,32,108,105,109,105,116,32,114,101,97,99,104,101,100,32,119,104,105,108,101,32,116,114,121,105,110,103,32,116,111,32,99,97,108,108,32,117,110,107,110,111,119,110,32,102,117,110,99,116,105,111,110,32,37,115,0],0,ALLOC_STATIC);__str3=Pointer_make([117,110,107,110,111,
119,110,32,102,117,110,99,116,105,111,110,32,37,115,0],0,ALLOC_STATIC);__str4=Pointer_make([0],0,ALLOC_STATIC);__str5=Pointer_make([100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111,32,105,110,32,101,120,112,114,101,115,115,105,111,110,0],0,ALLOC_STATIC);__str6=Pointer_make([109,105,120,105,110,103,32,105,110,118,97,108,105,100,32,116,121,112,101,115,32,105,110,32,101,120,112,114,101,115,115,105,111,110,0],0,ALLOC_STATIC);__str7=Pointer_make([101,120,112,114,101,115,115,105,111,110,32,
115,121,110,116,97,120,32,101,114,114,111,114,0],0,ALLOC_STATIC);__str8=Pointer_make([33,33,117,110,33,37,115,33,37,48,57,117,33,110,117,33,33,0],0,ALLOC_STATIC);__str9=Pointer_make([37,102,0],0,ALLOC_STATIC);__str10=Pointer_make([37,108,105,0],0,ALLOC_STATIC);__str11=Pointer_make([114,101,102,108,101,99,116,0],0,ALLOC_STATIC);__str12=Pointer_make([102,117,110,99,0],0,ALLOC_STATIC);__str13=Pointer_make([114,101,110,97,109,101,0],0,ALLOC_STATIC);__str14=Pointer_make([117,110,117,115,101,100,110,97,
109,101,0],0,ALLOC_STATIC);__str15=Pointer_make([113,117,111,116,101,0],0,ALLOC_STATIC);__str16=Pointer_make([115,101,116,0],0,ALLOC_STATIC);__str17=Pointer_make([119,114,105,116,101,0],0,ALLOC_STATIC);__str18=Pointer_make([112,114,105,110,116,0],0,ALLOC_STATIC);__str19=Pointer_make([101,118,97,108,0],0,ALLOC_STATIC);__str20=Pointer_make([117,112,101,118,97,108,0],0,ALLOC_STATIC);__str21=Pointer_make([100,111,119,110,101,118,97,108,0],0,ALLOC_STATIC);__str22=Pointer_make([106,97,105,108,101,118,97,
108,0],0,ALLOC_STATIC);__str23=Pointer_make([99,111,117,110,116,0],0,ALLOC_STATIC);__str24=Pointer_make([105,110,100,101,120,0],0,ALLOC_STATIC);__str25=Pointer_make([105,110,100,101,120,111,102,0],0,ALLOC_STATIC);__str26=Pointer_make([102,105,108,116,101,114,0],0,ALLOC_STATIC);__str27=Pointer_make([108,105,115,116,0],0,ALLOC_STATIC);__str28=Pointer_make([97,112,112,101,110,100,0],0,ALLOC_STATIC);__str29=Pointer_make([115,108,105,99,101,0],0,ALLOC_STATIC);__str30=Pointer_make([115,117,98,115,116,0],
0,ALLOC_STATIC);__str31=Pointer_make([99,111,110,99,97,116,0],0,ALLOC_STATIC);__str32=Pointer_make([102,111,114,101,97,99,104,0],0,ALLOC_STATIC);__str33=Pointer_make([114,101,116,117,114,110,0],0,ALLOC_STATIC);__str34=Pointer_make([101,120,112,114,0],0,ALLOC_STATIC);__str35=Pointer_make([105,110,99,0],0,ALLOC_STATIC);__str36=Pointer_make([100,101,99,0],0,ALLOC_STATIC);__str37=Pointer_make([114,101,97,100,0],0,ALLOC_STATIC);__str38=Pointer_make([115,116,111,114,101,0],0,ALLOC_STATIC);__str39=Pointer_make([105,
102,0],0,ALLOC_STATIC);__str40=Pointer_make([119,104,105,108,101,0],0,ALLOC_STATIC);__str41=Pointer_make([102,111,114,0],0,ALLOC_STATIC);__str42=Pointer_make([99,104,97,114,0],0,ALLOC_STATIC);__str43=Pointer_make([99,104,97,114,97,116,0],0,ALLOC_STATIC);__str44=Pointer_make([99,111,100,101,97,116,0],0,ALLOC_STATIC);__str45=Pointer_make([115,117,98,115,116,114,0],0,ALLOC_STATIC);__str46=Pointer_make([115,116,114,112,111,115,0],0,ALLOC_STATIC);__str47=Pointer_make([108,101,110,103,116,104,0],0,ALLOC_STATIC);
__str48=Pointer_make([116,114,105,109,0],0,ALLOC_STATIC);__str49=Pointer_make([108,116,114,105,109,0],0,ALLOC_STATIC);__str50=Pointer_make([114,116,114,105,109,0],0,ALLOC_STATIC);__str51=Pointer_make([115,116,114,99,109,112,0],0,ALLOC_STATIC);__str52=Pointer_make([115,116,114,101,113,0],0,ALLOC_STATIC);__str53=Pointer_make([114,101,112,115,116,114,0],0,ALLOC_STATIC);__str54=Pointer_make([115,112,108,105,116,0],0,ALLOC_STATIC);__str55=Pointer_make([116,114,121,0],0,ALLOC_STATIC);__str56=Pointer_make([101,
114,114,111,114,0],0,ALLOC_STATIC);__str57=Pointer_make([101,120,105,116,0],0,ALLOC_STATIC);__str58=Pointer_make([115,111,117,114,99,101,0],0,ALLOC_STATIC);__str59=Pointer_make([108,109,97,112,0],0,ALLOC_STATIC);__str60=Pointer_make([114,97,110,100,0],0,ALLOC_STATIC);__str61=Pointer_make([99,97,116,99,104,101,114,0],0,ALLOC_STATIC);__str62=Pointer_make([114,98,0],0,ALLOC_STATIC);__str63=Pointer_make([32,0],0,ALLOC_STATIC);__str64=Pointer_make([32,12,10,13,9,11,0],0,ALLOC_STATIC);__str65=Pointer_make([110,
111,116,0],0,ALLOC_STATIC);__str66=Pointer_make([119,98,0],0,ALLOC_STATIC);__str67=Pointer_make([105,0],0,ALLOC_STATIC);__str68=Pointer_make([103,108,111,98,97,108,0],0,ALLOC_STATIC);__str69=Pointer_make([120,0],0,ALLOC_STATIC);__str70=Pointer_make([48,0],0,ALLOC_STATIC);__str71=Pointer_make([37,117,0],0,ALLOC_STATIC);__str72=Pointer_make([99,108,101,97,110,0],0,ALLOC_STATIC);__str73=Pointer_make([10,0],0,ALLOC_STATIC);__str74=Pointer_make([37,115,0],0,ALLOC_STATIC);__str75=Pointer_make([117,110,
107,110,111,119,110,32,102,117,110,99,116,105,111,110,32,39,37,115,39,0],0,ALLOC_STATIC);__str76=Pointer_make([97,110,111,110,121,109,111,117,115,45,102,117,110,99,116,105,111,110,0],0,ALLOC_STATIC);__str77=Pointer_make([118,101,114,115,105,111,110,0],0,ALLOC_STATIC);__str78=Pointer_make([48,46,49,0],0,ALLOC_STATIC);__str79=Pointer_make([98,111,100,121,0],0,ALLOC_STATIC);__str80=Pointer_make([102,117,110,99,45,99,111,117,110,116,0],0,ALLOC_STATIC);__str81=Pointer_make([102,117,110,99,115,0],0,ALLOC_STATIC);
__str82=Pointer_make([118,97,114,115,0],0,ALLOC_STATIC);__str83=Pointer_make([103,108,111,98,97,108,115,0],0,ALLOC_STATIC);__str84=Pointer_make([104,97,115,45,102,117,110,99,0],0,ALLOC_STATIC);__str85=Pointer_make([49,0],0,ALLOC_STATIC);__str86=Pointer_make([104,97,115,45,118,97,114,0],0,ALLOC_STATIC);__str87=Pointer_make([104,97,115,45,103,108,111,98,97,108,0],0,ALLOC_STATIC);__str88=Pointer_make([100,111,108,108,97,114,45,112,114,101,102,105,120,0],0,ALLOC_STATIC);__str89=Pointer_make([116,104,
105,115,0],0,ALLOC_STATIC);__str90=Pointer_make([110,97,109,101,0],0,ALLOC_STATIC);__str91=Pointer_make([76,73,76,32,101,114,114,111,114,58,32,37,115,10,0],0,ALLOC_STATIC);this._STDIO.init();var c=g.length+1,b=[Pointer_make(intArrayFromString("/bin/this.program"),null)];f();for(var a=0;a<c-1;a+=1){b.push(Pointer_make(intArrayFromString(g[a]),null));f()}b.push(0);b=Pointer_make(b,null);__globalConstructor__();if(Module._main){_main(c,b,0);__shutdownRuntime__()}}Module.run=run;run(args);
